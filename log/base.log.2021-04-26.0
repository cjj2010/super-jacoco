2021-04-26 16:11:19,849 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 16140 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 16:11:19,849 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 16140 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 16:11:19,852 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 16:11:19,852 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 16:11:19,854 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 16:11:19,854 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 16:11:20,199 INFO (AbstractApplicationContext.java:590)- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@46eb3d33: startup date [Mon Apr 26 16:11:20 CST 2021]; root of context hierarchy
2021-04-26 16:11:22,212 INFO (PostProcessorRegistrationDelegate.java:328)- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ac8cdc26] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-26 16:11:23,920 INFO (TomcatWebServer.java:91)- Tomcat initialized with port(s): 88990 (http)
2021-04-26 16:11:23,934 INFO (DirectJDKLog.java:180)- Initializing ProtocolHandler ["http-nio-88990"]
2021-04-26 16:11:23,987 INFO (DirectJDKLog.java:180)- Starting service [Tomcat]
2021-04-26 16:11:23,987 INFO (DirectJDKLog.java:180)- Starting Servlet Engine: Apache Tomcat/8.5.31
2021-04-26 16:11:24,014 INFO (DirectJDKLog.java:180)- The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\soft\jdk1.8.0_172\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\soft\jdk1.8.0_172\bin;C:\Program Files\Git\cmd;D:/demo/maven/apache-maven-3.6.3\bin;C:\cmder;D:\soft\jdk1.8.0_172\jre\bin;;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\admin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\IntelliJ IDEA 2020.2\bin;C:\Users\admin\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2021-04-26 16:11:24,120 INFO (DirectJDKLog.java:180)- Initializing Spring embedded WebApplicationContext
2021-04-26 16:11:24,121 INFO (ServletWebServerApplicationContext.java:285)- Root WebApplicationContext: initialization completed in 3922 ms
2021-04-26 16:11:24,278 INFO (ServletRegistrationBean.java:185)- Servlet dispatcherServlet mapped to [/]
2021-04-26 16:11:24,283 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'characterEncodingFilter' to: [/*]
2021-04-26 16:11:24,283 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-04-26 16:11:24,283 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-04-26 16:11:24,283 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'requestContextFilter' to: [/*]
2021-04-26 16:11:26,153 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getLocalCoverResult],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getEnvLocalCoverResult(com.xiaoju.basetech.entity.LocalHostRequestParam)
2021-04-26 16:11:26,154 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getEnvCoverResult],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getEnvCoverResult(java.lang.String)
2021-04-26 16:11:26,155 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/triggerEnvCov],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<java.lang.Boolean> com.xiaoju.basetech.controller.CodeCovController.triggerEnvCov(com.xiaoju.basetech.entity.EnvCoverRequest)
2021-04-26 16:11:26,155 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getUnitCoverResult],methods=[GET]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getCoverResult(java.lang.String)
2021-04-26 16:11:26,156 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/triggerUnitCover],methods=[POST]}" onto public com.xiaoju.basetech.entity.HttpResult<java.lang.Boolean> com.xiaoju.basetech.controller.CodeCovController.triggerUnitCover(com.xiaoju.basetech.entity.UnitCoverRequest)
2021-04-26 16:11:26,162 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-04-26 16:11:26,163 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-04-26 16:11:26,164 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-04-26 16:11:26,167 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2021-04-26 16:11:26,168 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-04-26 16:11:26,311 INFO (PropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2021-04-26 16:11:26,433 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 16:11:26,612 INFO (RequestMappingHandlerAdapter.java:574)- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@46eb3d33: startup date [Mon Apr 26 16:11:20 CST 2021]; root of context hierarchy
2021-04-26 16:11:26,659 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 16:11:26,660 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 16:11:26,674 INFO (ExceptionHandlerExceptionResolver.java:288)- Detected @ExceptionHandler methods in globalExceptionHandler
2021-04-26 16:11:27,050 INFO (OptionalLiveReloadServer.java:57)- LiveReload server is running on port 35729
2021-04-26 16:11:27,082 INFO (MBeanExporter.java:433)- Registering beans for JMX exposure on startup
2021-04-26 16:11:27,084 INFO (MBeanExporter.java:895)- Bean with name 'dataSource' has been autodetected for JMX exposure
2021-04-26 16:11:27,090 INFO (MBeanExporter.java:668)- Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2021-04-26 16:11:27,094 INFO (DefaultLifecycleProcessor.java:351)- Starting beans in phase 2147483647
2021-04-26 16:11:27,095 INFO (DocumentationPluginsBootstrapper.java:147)- Context refreshed
2021-04-26 16:11:27,112 INFO (DocumentationPluginsBootstrapper.java:150)- Found 1 custom documentation plugin(s)
2021-04-26 16:11:27,227 INFO (ApiListingReferenceScanner.java:41)- Scanning for api listing references
2021-04-26 16:11:27,480 INFO (DirectJDKLog.java:180)- Starting ProtocolHandler ["http-nio-88990"]
2021-04-26 16:11:27,485 ERROR (DirectJDKLog.java:182)- Failed to start connector [Connector[HTTP/1.1-88990]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-88990]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.xiaoju.basetech.CodeCovApplication.main(CodeCovApplication.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 18 common frames omitted
Caused by: java.lang.IllegalArgumentException: port out of range:88990
	at java.net.InetSocketAddress.checkPort(InetSocketAddress.java:143)
	at java.net.InetSocketAddress.<init>(InetSocketAddress.java:188)
	at java.net.InetSocketAddress.<init>(InetSocketAddress.java:166)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:209)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 19 common frames omitted
2021-04-26 16:11:27,489 INFO (DirectJDKLog.java:180)- Pausing ProtocolHandler ["http-nio-88990"]
2021-04-26 16:11:27,489 INFO (DirectJDKLog.java:180)- Stopping service [Tomcat]
2021-04-26 16:11:27,538 INFO (DirectJDKLog.java:180)- The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2021-04-26 16:11:27,539 INFO (DirectJDKLog.java:180)- Stopping ProtocolHandler ["http-nio-88990"]
2021-04-26 16:11:27,539 INFO (DirectJDKLog.java:180)- Destroying ProtocolHandler ["http-nio-88990"]
2021-04-26 16:11:27,543 INFO (ConditionEvaluationReportLoggingListener.java:101)- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-04-26 16:11:27,547 ERROR (LoggingFailureAnalysisReporter.java:42)- 

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 88990 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 88990, or configure this application to listen on another port.

2021-04-26 16:11:27,548 INFO (AbstractApplicationContext.java:993)- Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@46eb3d33: startup date [Mon Apr 26 16:11:20 CST 2021]; root of context hierarchy
2021-04-26 16:11:27,550 INFO (DefaultLifecycleProcessor.java:366)- Stopping beans in phase 2147483647
2021-04-26 16:11:27,553 INFO (MBeanExporter.java:451)- Unregistering JMX-exposed beans on shutdown
2021-04-26 16:11:27,553 INFO (MBeanRegistrationSupport.java:183)- Unregistering JMX-exposed beans
2021-04-26 16:11:59,965 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 13828 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 16:11:59,965 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 13828 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 16:11:59,969 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 16:11:59,969 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 16:11:59,970 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 16:11:59,970 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 16:12:00,207 INFO (AbstractApplicationContext.java:590)- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@193f4272: startup date [Mon Apr 26 16:12:00 CST 2021]; root of context hierarchy
2021-04-26 16:12:01,453 INFO (PostProcessorRegistrationDelegate.java:328)- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2dff7f3d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-26 16:12:01,839 INFO (TomcatWebServer.java:91)- Tomcat initialized with port(s): 8899 (http)
2021-04-26 16:12:01,853 INFO (DirectJDKLog.java:180)- Initializing ProtocolHandler ["http-nio-8899"]
2021-04-26 16:12:01,876 INFO (DirectJDKLog.java:180)- Starting service [Tomcat]
2021-04-26 16:12:01,877 INFO (DirectJDKLog.java:180)- Starting Servlet Engine: Apache Tomcat/8.5.31
2021-04-26 16:12:01,881 INFO (DirectJDKLog.java:180)- The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\soft\jdk1.8.0_172\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\soft\jdk1.8.0_172\bin;C:\Program Files\Git\cmd;D:/demo/maven/apache-maven-3.6.3\bin;C:\cmder;D:\soft\jdk1.8.0_172\jre\bin;;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\admin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\IntelliJ IDEA 2020.2\bin;C:\Users\admin\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2021-04-26 16:12:01,984 INFO (DirectJDKLog.java:180)- Initializing Spring embedded WebApplicationContext
2021-04-26 16:12:01,984 INFO (ServletWebServerApplicationContext.java:285)- Root WebApplicationContext: initialization completed in 1777 ms
2021-04-26 16:12:02,134 INFO (ServletRegistrationBean.java:185)- Servlet dispatcherServlet mapped to [/]
2021-04-26 16:12:02,138 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'characterEncodingFilter' to: [/*]
2021-04-26 16:12:02,139 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-04-26 16:12:02,140 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-04-26 16:12:02,140 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'requestContextFilter' to: [/*]
2021-04-26 16:12:02,882 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/triggerUnitCover],methods=[POST]}" onto public com.xiaoju.basetech.entity.HttpResult<java.lang.Boolean> com.xiaoju.basetech.controller.CodeCovController.triggerUnitCover(com.xiaoju.basetech.entity.UnitCoverRequest)
2021-04-26 16:12:02,884 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getUnitCoverResult],methods=[GET]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getCoverResult(java.lang.String)
2021-04-26 16:12:02,884 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/triggerEnvCov],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<java.lang.Boolean> com.xiaoju.basetech.controller.CodeCovController.triggerEnvCov(com.xiaoju.basetech.entity.EnvCoverRequest)
2021-04-26 16:12:02,885 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getEnvCoverResult],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getEnvCoverResult(java.lang.String)
2021-04-26 16:12:02,885 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getLocalCoverResult],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getEnvLocalCoverResult(com.xiaoju.basetech.entity.LocalHostRequestParam)
2021-04-26 16:12:02,891 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-04-26 16:12:02,892 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-04-26 16:12:02,893 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-04-26 16:12:02,896 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2021-04-26 16:12:02,897 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-04-26 16:12:03,045 INFO (PropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2021-04-26 16:12:03,136 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 16:12:03,330 INFO (RequestMappingHandlerAdapter.java:574)- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@193f4272: startup date [Mon Apr 26 16:12:00 CST 2021]; root of context hierarchy
2021-04-26 16:12:03,398 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 16:12:03,398 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 16:12:03,414 INFO (ExceptionHandlerExceptionResolver.java:288)- Detected @ExceptionHandler methods in globalExceptionHandler
2021-04-26 16:12:03,694 INFO (OptionalLiveReloadServer.java:57)- LiveReload server is running on port 35729
2021-04-26 16:12:03,722 INFO (MBeanExporter.java:433)- Registering beans for JMX exposure on startup
2021-04-26 16:12:03,724 INFO (MBeanExporter.java:895)- Bean with name 'dataSource' has been autodetected for JMX exposure
2021-04-26 16:12:03,730 INFO (MBeanExporter.java:668)- Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2021-04-26 16:12:03,734 INFO (DefaultLifecycleProcessor.java:351)- Starting beans in phase 2147483647
2021-04-26 16:12:03,735 INFO (DocumentationPluginsBootstrapper.java:147)- Context refreshed
2021-04-26 16:12:03,748 INFO (DocumentationPluginsBootstrapper.java:150)- Found 1 custom documentation plugin(s)
2021-04-26 16:12:03,780 INFO (ApiListingReferenceScanner.java:41)- Scanning for api listing references
2021-04-26 16:12:03,953 INFO (DirectJDKLog.java:180)- Starting ProtocolHandler ["http-nio-8899"]
2021-04-26 16:12:03,963 INFO (DirectJDKLog.java:180)- Using a shared selector for servlet write/read
2021-04-26 16:12:03,982 INFO (TomcatWebServer.java:206)- Tomcat started on port(s): 8899 (http) with context path ''
2021-04-26 16:12:03,987 INFO (StartupInfoLogger.java:59)- Started CodeCovApplication in 4.304 seconds (JVM running for 5.755)
2021-04-26 16:12:03,987 INFO (StartupInfoLogger.java:59)- Started CodeCovApplication in 4.304 seconds (JVM running for 5.755)
2021-04-26 16:12:13,963 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 16:12:13,963 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 16:12:13,983 INFO (HikariDataSource.java:110)- HikariPool-1 - Starting...
2021-04-26 16:12:15,099 INFO (HikariDataSource.java:123)- HikariPool-1 - Start completed.
2021-04-26 16:12:15,107 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 16:12:15,107 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 16:12:15,126 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 14:12:13(String)
2021-04-26 16:12:15,126 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 14:12:13(String)
2021-04-26 16:12:15,128 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:12:15,128 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:12:15,129 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 16:12:15,129 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:12:15,129 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 16:12:15,129 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:12:15,143 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:12:15,143 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:12:15,144 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:12:15,144 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:12:25,157 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:12:25,157 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:12:25,158 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:12:25,158 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:12:25,160 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:12:25,160 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:12:25,160 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:12:25,160 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:12:35,167 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:12:35,167 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:12:35,168 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:12:35,168 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:12:35,170 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:12:35,170 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:12:35,170 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:12:35,170 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:12:45,186 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:12:45,186 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:12:45,187 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:12:45,187 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:12:45,189 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:12:45,189 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:12:45,190 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:12:45,190 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:12:55,201 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:12:55,201 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:12:55,201 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:12:55,201 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:12:55,203 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:12:55,203 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:12:55,203 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:12:55,203 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:13:05,214 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:13:05,214 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:13:05,214 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:13:05,214 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:13:05,216 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:13:05,216 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:13:05,216 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:13:05,216 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:13:15,227 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:13:15,227 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:13:15,227 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:13:15,227 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:13:15,229 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:13:15,229 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:13:15,229 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:13:15,229 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:13:25,242 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:13:25,242 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:13:25,243 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:13:25,243 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:13:25,247 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:13:25,247 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:13:25,248 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:13:25,248 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:13:35,255 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:13:35,255 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:13:35,256 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:13:35,256 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:13:35,261 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:13:35,261 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:13:35,262 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:13:35,262 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:13:45,272 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:13:45,272 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:13:45,272 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:13:45,272 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:13:45,274 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:13:45,274 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:13:45,274 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:13:45,274 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:13:55,293 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:13:55,293 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:13:55,295 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:13:55,295 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:13:55,297 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:13:55,297 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:13:55,298 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:13:55,298 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:14:05,308 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:14:05,308 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:14:05,309 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:14:05,309 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:14:05,311 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:14:05,311 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:14:05,311 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:14:05,311 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:14:15,323 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:14:15,323 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:14:15,324 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:14:15,324 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:14:15,326 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:14:15,326 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:14:15,327 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:14:15,327 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:14:25,332 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:14:25,332 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:14:25,332 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:14:25,332 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:14:25,334 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:14:25,334 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:14:25,335 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:14:25,335 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:14:35,345 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:14:35,345 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:14:35,347 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:14:35,347 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:14:35,349 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:14:35,349 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:14:35,351 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:14:35,351 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:14:45,358 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:14:45,358 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:14:45,359 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:14:45,359 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:14:45,362 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:14:45,362 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:14:45,364 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:14:45,364 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:14:55,374 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:14:55,374 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:14:55,375 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:14:55,375 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:14:55,376 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:14:55,376 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:14:55,377 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:14:55,377 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:15:05,389 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:15:05,389 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:15:05,390 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:15:05,390 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:15:05,392 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:15:05,392 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:15:05,393 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:15:05,393 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:15:15,406 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:15:15,406 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:15:15,407 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:15:15,407 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:15:15,410 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:15:15,410 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:15:15,410 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:15:15,410 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:15:25,431 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:15:25,431 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:15:25,432 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:15:25,432 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:15:25,435 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:15:25,435 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:15:25,435 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:15:25,435 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:15:35,448 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:15:35,448 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:15:35,449 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:15:35,449 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:15:35,451 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:15:35,451 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:15:35,451 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:15:35,451 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:15:45,460 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:15:45,460 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:15:45,460 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:15:45,460 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:15:45,461 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:15:45,461 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:15:45,461 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:15:45,461 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:15:55,468 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:15:55,468 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:15:55,468 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:15:55,468 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:15:55,469 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:15:55,469 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:15:55,470 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:15:55,470 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:16:05,481 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:16:05,481 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:16:05,482 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:16:05,482 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:16:05,484 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:16:05,484 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:16:05,484 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:16:05,484 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:16:15,501 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:16:15,501 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:16:15,502 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:16:15,502 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:16:15,508 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:16:15,508 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:16:15,509 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:16:15,509 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:16:25,524 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:16:25,524 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:16:25,525 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:16:25,525 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:16:25,526 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:16:25,526 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:16:25,527 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:16:25,527 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:16:35,531 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:16:35,531 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:16:35,531 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:16:35,531 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:16:35,533 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:16:35,533 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:16:35,533 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:16:35,533 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:16:45,546 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:16:45,546 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:16:45,547 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:16:45,547 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:16:45,548 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:16:45,548 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:16:45,549 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:16:45,549 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:16:55,561 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:16:55,561 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:16:55,562 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:16:55,562 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:16:55,563 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:16:55,563 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:16:55,564 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:16:55,564 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:17:03,951 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:17:03,951 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:17:03,952 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 16:17:03,952 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 16:17:03,953 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:17:03,953 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:17:03,953 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 16:17:03,953 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 16:17:05,571 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:17:05,571 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:17:05,571 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:17:05,571 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:17:05,572 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:17:05,572 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:17:05,573 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:17:05,573 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:17:15,584 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:17:15,584 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:17:15,585 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:17:15,585 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:17:15,587 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:17:15,587 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:17:15,587 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:17:15,587 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:17:25,592 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:17:25,592 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:17:25,592 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:17:25,592 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:17:25,594 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:17:25,594 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:17:25,594 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:17:25,594 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:17:35,615 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:17:35,615 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:17:35,615 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:17:35,615 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:17:35,617 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:17:35,617 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:17:35,618 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:17:35,618 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:17:45,633 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:17:45,633 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:17:45,634 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:17:45,634 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:17:45,636 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:17:45,636 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:17:45,636 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:17:45,636 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:17:55,639 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:17:55,639 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:17:55,639 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:17:55,639 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:17:55,640 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:17:55,640 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:17:55,641 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:17:55,641 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:18:05,644 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:18:05,644 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:18:05,645 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:18:05,645 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:18:05,646 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:18:05,646 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:18:05,647 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:18:05,647 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:18:15,649 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:18:15,649 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:18:15,649 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:18:15,649 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:18:15,651 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:18:15,651 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:18:15,651 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:18:15,651 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:18:25,666 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:18:25,666 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:18:25,666 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:18:25,666 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:18:25,668 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:18:25,668 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:18:25,668 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:18:25,668 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:18:35,669 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:18:35,669 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:18:35,670 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:18:35,670 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:18:35,671 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:18:35,671 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:18:35,672 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:18:35,672 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:18:45,674 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:18:45,674 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:18:45,674 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:18:45,674 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:18:45,677 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:18:45,677 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:18:45,678 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:18:45,678 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:18:55,691 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:18:55,691 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:18:55,691 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:18:55,691 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:18:55,692 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:18:55,692 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:18:55,693 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:18:55,693 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:19:05,708 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:19:05,708 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:19:05,709 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:19:05,709 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:19:05,710 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:19:05,710 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:19:05,710 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:19:05,710 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:19:15,726 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:19:15,726 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:19:15,727 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:19:15,727 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:19:15,728 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:19:15,728 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:19:15,730 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:19:15,730 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:19:25,754 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:19:25,754 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:19:25,755 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:19:25,755 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:19:25,758 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:19:25,758 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:19:25,759 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:19:25,759 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:19:35,778 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:19:35,778 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:19:35,778 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:19:35,778 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:19:35,783 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:19:35,783 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:19:35,783 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:19:35,783 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:19:45,796 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:19:45,796 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:19:45,796 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:19:45,796 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:19:45,798 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:19:45,798 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:19:45,798 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:19:45,798 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:19:55,804 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:19:55,804 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:19:55,804 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:19:55,804 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:19:55,806 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:19:55,806 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:19:55,806 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:19:55,806 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:20:05,822 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:20:05,822 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:20:05,823 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:20:05,823 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:20:05,825 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:20:05,825 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:20:05,825 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:20:05,825 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:20:15,827 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:20:15,827 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:20:15,827 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:20:15,827 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:20:15,829 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:20:15,829 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:20:15,830 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:20:15,830 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:20:25,836 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:20:25,836 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:20:25,836 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:20:25,836 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:20:25,838 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:20:25,838 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:20:25,838 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:20:25,838 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:20:35,853 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:20:35,853 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:20:35,853 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:20:35,853 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:20:35,855 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:20:35,855 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:20:35,855 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:20:35,855 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:20:45,865 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:20:45,865 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:20:45,865 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:20:45,865 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:20:45,867 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:20:45,867 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:20:45,867 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:20:45,867 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:20:55,873 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:20:55,873 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:20:55,873 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:20:55,873 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:20:55,875 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:20:55,875 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:20:55,875 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:20:55,875 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:21:05,883 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:21:05,883 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:21:05,883 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:21:05,883 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:21:05,885 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:21:05,885 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:21:05,885 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:21:05,885 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:21:15,895 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:21:15,895 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:21:15,895 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:21:15,895 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:21:15,897 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:21:15,897 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:21:15,897 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:21:15,897 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:21:25,906 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:21:25,906 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:21:25,906 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:21:25,906 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:21:25,909 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:21:25,909 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:21:25,910 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:21:25,910 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:21:35,919 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:21:35,919 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:21:35,920 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:21:35,920 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:21:35,921 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:21:35,921 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:21:35,922 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:21:35,922 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:21:45,929 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:21:45,929 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:21:45,930 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:21:45,930 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:21:45,931 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:21:45,931 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:21:45,931 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:21:45,931 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:21:55,938 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:21:55,938 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:21:55,939 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:21:55,939 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:21:55,940 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:21:55,940 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:21:55,940 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:21:55,940 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:22:03,957 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:22:03,957 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:22:03,958 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 16:22:03,958 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 16:22:03,959 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:22:03,959 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:22:03,960 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 16:22:03,960 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 16:22:05,944 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:22:05,944 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:22:05,945 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:22:05,945 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:22:05,946 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:22:05,946 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:22:05,946 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:22:05,946 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:22:15,139 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 16:22:15,139 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 16:22:15,144 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 16:22:15,144 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 16:22:15,144 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 14:22:15(String)
2021-04-26 16:22:15,144 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 14:22:15(String)
2021-04-26 16:22:15,146 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 16:22:15,146 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 16:22:15,962 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:22:15,962 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:22:15,963 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:22:15,963 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:22:15,964 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:22:15,964 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:22:15,965 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:22:15,965 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:22:25,971 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:22:25,971 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:22:25,972 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:22:25,972 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:22:25,983 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:22:25,983 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:22:25,983 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:22:25,983 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:22:35,995 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:22:35,995 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:22:35,996 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:22:35,996 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:22:35,997 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:22:35,997 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:22:35,998 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:22:35,998 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:22:46,017 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:22:46,017 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:22:46,017 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:22:46,017 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:22:46,032 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:22:46,032 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:22:46,033 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:22:46,033 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:22:56,041 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:22:56,041 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:22:56,042 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:22:56,042 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:22:56,043 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:22:56,043 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:22:56,043 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:22:56,043 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:23:06,054 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:23:06,054 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:23:06,055 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:23:06,055 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:23:06,056 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:23:06,056 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:23:06,056 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:23:06,056 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:23:16,063 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:23:16,063 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:23:16,064 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:23:16,064 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:23:16,065 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:23:16,065 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:23:16,065 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:23:16,065 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:23:26,077 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:23:26,077 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:23:26,077 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:23:26,077 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:23:26,078 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:23:26,078 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:23:26,079 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:23:26,079 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:23:36,095 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:23:36,095 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:23:36,096 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:23:36,096 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:23:36,097 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:23:36,097 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:23:36,098 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:23:36,098 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:23:46,118 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:23:46,118 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:23:46,119 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:23:46,119 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:23:46,126 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:23:46,126 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:23:46,127 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:23:46,127 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:23:56,130 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:23:56,130 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:23:56,131 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:23:56,131 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:23:56,132 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:23:56,132 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:23:56,132 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:23:56,132 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:24:06,145 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:24:06,145 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:24:06,145 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:24:06,145 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:24:06,146 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:24:06,146 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:24:06,146 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:24:06,146 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:24:16,156 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:24:16,156 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:24:16,156 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:24:16,156 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:24:16,157 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:24:16,157 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:24:16,158 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:24:16,158 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:24:26,171 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:24:26,171 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:24:26,171 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:24:26,171 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:24:26,172 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:24:26,172 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:24:26,173 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:24:26,173 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:24:36,189 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:24:36,189 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:24:36,190 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:24:36,190 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:24:36,191 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:24:36,191 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:24:36,192 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:24:36,192 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:24:46,206 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:24:46,206 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:24:46,206 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:24:46,206 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:24:46,208 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:24:46,208 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:24:46,208 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:24:46,208 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:24:56,219 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:24:56,219 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:24:56,219 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:24:56,219 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:24:56,220 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:24:56,220 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:24:56,221 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:24:56,221 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:25:06,224 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:25:06,224 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:25:06,225 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:25:06,225 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:25:06,229 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:25:06,229 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:25:06,229 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:25:06,229 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:25:16,236 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:25:16,236 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:25:16,237 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:25:16,237 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:25:16,239 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:25:16,239 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:25:16,241 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:25:16,241 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:25:26,254 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:25:26,254 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:25:26,254 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:25:26,254 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:25:26,255 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:25:26,255 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:25:26,255 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:25:26,255 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:25:36,269 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:25:36,269 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:25:36,270 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:25:36,270 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:25:36,271 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:25:36,271 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:25:36,272 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:25:36,272 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:25:46,275 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:25:46,275 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:25:46,276 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:25:46,276 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:25:46,277 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:25:46,277 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:25:46,277 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:25:46,277 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:25:56,293 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:25:56,293 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:25:56,294 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:25:56,294 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:25:56,295 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:25:56,295 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:25:56,295 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:25:56,295 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:26:06,307 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:26:06,307 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:26:06,307 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:26:06,307 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:26:06,308 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:26:06,308 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:26:06,309 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:26:06,309 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:26:16,313 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:26:16,313 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:26:16,313 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:26:16,313 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:26:16,314 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:26:16,314 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:26:16,314 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:26:16,314 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:26:26,326 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:26:26,326 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:26:26,327 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:26:26,327 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:26:26,329 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:26:26,329 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:26:26,330 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:26:26,330 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:26:36,349 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:26:36,349 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:26:36,349 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:26:36,349 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:26:36,351 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:26:36,351 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:26:36,351 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:26:36,351 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:26:46,359 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:26:46,359 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:26:46,360 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:26:46,360 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:26:46,361 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:26:46,361 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:26:46,361 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:26:46,361 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:26:56,369 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:26:56,369 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:26:56,369 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:26:56,369 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:26:56,370 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:26:56,370 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:26:56,371 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:26:56,371 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:27:03,973 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:27:03,973 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:27:03,974 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 16:27:03,974 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 16:27:03,976 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:27:03,976 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:27:03,977 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 16:27:03,977 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 16:27:06,386 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:27:06,386 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:27:06,387 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:27:06,387 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:27:06,388 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:27:06,388 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:27:06,389 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:27:06,389 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:27:16,396 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:27:16,396 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:27:16,396 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:27:16,396 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:27:16,397 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:27:16,397 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:27:16,397 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:27:16,397 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:27:26,412 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:27:26,412 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:27:26,412 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:27:26,412 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:27:26,413 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:27:26,413 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:27:26,413 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:27:26,413 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:27:36,420 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:27:36,420 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:27:36,421 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:27:36,421 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:27:36,422 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:27:36,422 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:27:36,423 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:27:36,423 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:27:46,430 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:27:46,430 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:27:46,431 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:27:46,431 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:27:46,432 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:27:46,432 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:27:46,433 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:27:46,433 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:27:56,447 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:27:56,447 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:27:56,448 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:27:56,448 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:27:56,462 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:27:56,462 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:27:56,463 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:27:56,463 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:28:06,480 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:28:06,480 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:28:06,480 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:28:06,480 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:28:06,482 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:28:06,482 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:28:06,482 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:28:06,482 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:28:16,506 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:28:16,506 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:28:16,506 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:28:16,506 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:28:16,513 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:28:16,513 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:28:16,513 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:28:16,513 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:28:26,623 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:28:26,623 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:28:26,624 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:28:26,624 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:28:26,627 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:28:26,627 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:28:26,628 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:28:26,628 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:28:36,647 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:28:36,647 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:28:36,647 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:28:36,647 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:28:36,658 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:28:36,658 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:28:36,659 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:28:36,659 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:28:46,692 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:28:46,692 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:28:46,693 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:28:46,693 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:28:46,707 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:28:46,707 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:28:46,708 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:28:46,708 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:28:56,796 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:28:56,796 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:28:56,797 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:28:56,797 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:28:56,798 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:28:56,798 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:28:56,799 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:28:56,799 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:29:06,819 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:29:06,819 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:29:06,819 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:29:06,819 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:29:06,822 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:29:06,822 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:29:06,822 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:29:06,822 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:29:16,847 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:29:16,847 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:29:16,847 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:29:16,847 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:29:16,858 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:29:16,858 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:29:16,858 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:29:16,858 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:29:26,869 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:29:26,869 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:29:26,870 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:29:26,870 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:29:26,872 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:29:26,872 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:29:26,872 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:29:26,872 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:29:36,969 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:29:36,969 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:29:36,970 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:29:36,970 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:29:36,973 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:29:36,973 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:29:36,974 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:29:36,974 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:29:47,041 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:29:47,041 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:29:47,042 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:29:47,042 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:29:47,065 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:29:47,065 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:29:47,065 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:29:47,065 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:29:57,103 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:29:57,103 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:29:57,104 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:29:57,104 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:29:57,119 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:29:57,119 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:29:57,120 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:29:57,120 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:30:07,353 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:30:07,353 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:30:07,354 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:30:07,354 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:30:07,368 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:30:07,368 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:30:07,369 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:30:07,369 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:30:17,458 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:30:17,458 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:30:17,458 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:30:17,458 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:30:17,474 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:30:17,474 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:30:17,475 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:30:17,475 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:30:27,492 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:30:27,492 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:30:27,492 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:30:27,492 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:30:27,522 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:30:27,522 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:30:27,522 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:30:27,522 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:30:37,544 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:30:37,544 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:30:37,544 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:30:37,544 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:30:37,549 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:30:37,549 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:30:37,549 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:30:37,549 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:30:47,599 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:30:47,599 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:30:47,600 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:30:47,600 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:30:47,619 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:30:47,619 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:30:47,620 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:30:47,620 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:30:57,640 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:30:57,640 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:30:57,641 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:30:57,641 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:30:57,643 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:30:57,643 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:30:57,643 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:30:57,643 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:31:07,725 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:31:07,725 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:31:07,725 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:31:07,725 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:31:07,740 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:31:07,740 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:31:07,741 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:31:07,741 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:31:17,860 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:31:17,860 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:31:17,860 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:31:17,860 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:31:17,877 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:31:17,877 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:31:17,878 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:31:17,878 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:31:27,919 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:31:27,919 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:31:27,919 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:31:27,919 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:31:27,921 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:31:27,921 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:31:27,922 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:31:27,922 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:31:38,030 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:31:38,030 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:31:38,031 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:31:38,031 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:31:38,043 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:31:38,043 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:31:38,044 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:31:38,044 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:31:48,258 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:31:48,258 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:31:48,259 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:31:48,259 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:31:48,264 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:31:48,264 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:31:48,264 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:31:48,264 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:31:58,324 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:31:58,324 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:31:58,324 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:31:58,324 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:31:58,327 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:31:58,327 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:31:58,327 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:31:58,327 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:32:04,024 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:32:04,024 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:32:04,024 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 16:32:04,024 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 16:32:04,039 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:32:04,039 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:32:04,040 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 16:32:04,040 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 16:32:08,874 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:32:08,874 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:32:08,874 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:32:08,874 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:32:08,889 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:32:08,889 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:32:08,889 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:32:08,889 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:32:15,196 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 16:32:15,196 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 16:32:15,393 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 16:32:15,393 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 16:32:15,394 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 14:32:15(String)
2021-04-26 16:32:15,394 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 14:32:15(String)
2021-04-26 16:32:15,416 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 16:32:15,416 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 16:32:18,904 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:32:18,904 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:32:18,905 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:32:18,905 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:32:18,912 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:32:18,912 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:32:18,913 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:32:18,913 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:32:28,984 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:32:28,984 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:32:28,984 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:32:28,984 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:32:28,996 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:32:28,996 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:32:28,996 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:32:28,996 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:32:39,020 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:32:39,020 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:32:39,020 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:32:39,020 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:32:39,034 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:32:39,034 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:32:39,035 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:32:39,035 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:32:49,051 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:32:49,051 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:32:49,052 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:32:49,052 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:32:49,066 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:32:49,066 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:32:49,067 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:32:49,067 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:32:59,081 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:32:59,081 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:32:59,081 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:32:59,081 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:32:59,088 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:32:59,088 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:32:59,089 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:32:59,089 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:33:09,148 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:33:09,148 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:33:09,148 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:33:09,148 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:33:09,169 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:33:09,169 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:33:09,170 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:33:09,170 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:33:19,202 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:33:19,202 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:33:19,202 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:33:19,202 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:33:19,217 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:33:19,217 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:33:19,218 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:33:19,218 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:33:29,229 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:33:29,229 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:33:29,230 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:33:29,230 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:33:29,232 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:33:29,232 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:33:29,232 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:33:29,232 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:33:39,241 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:33:39,241 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:33:39,242 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:33:39,242 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:33:39,243 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:33:39,243 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:33:39,244 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:33:39,244 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:33:49,259 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:33:49,259 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:33:49,260 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:33:49,260 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:33:49,261 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:33:49,261 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:33:49,262 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:33:49,262 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:33:59,330 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:33:59,330 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:33:59,330 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:33:59,330 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:33:59,343 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:33:59,343 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:33:59,344 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:33:59,344 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:34:09,371 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:34:09,371 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:34:09,371 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:34:09,371 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:34:09,379 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:34:09,379 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:34:09,380 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:34:09,380 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:34:19,399 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:34:19,399 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:34:19,399 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:34:19,399 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:34:19,414 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:34:19,414 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:34:19,414 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:34:19,414 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:34:29,424 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:34:29,424 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:34:29,424 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:34:29,424 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:34:29,426 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:34:29,426 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:34:29,426 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:34:29,426 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:34:39,440 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:34:39,440 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:34:39,441 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:34:39,441 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:34:39,442 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:34:39,442 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:34:39,443 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:34:39,443 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:34:49,456 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:34:49,456 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:34:49,456 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:34:49,456 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:34:49,458 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:34:49,458 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:34:49,458 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:34:49,458 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:34:59,467 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:34:59,467 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:34:59,468 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:34:59,468 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:34:59,469 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:34:59,469 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:34:59,470 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:34:59,470 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:35:09,488 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:35:09,488 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:35:09,488 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:35:09,488 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:35:09,490 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:35:09,490 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:35:09,490 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:35:09,490 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:35:19,493 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:35:19,493 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:35:19,493 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:35:19,493 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:35:19,494 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:35:19,494 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:35:19,495 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:35:19,495 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:35:29,501 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:35:29,501 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:35:29,501 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:35:29,501 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:35:29,503 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:35:29,503 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:35:29,503 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:35:29,503 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:35:39,520 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:35:39,520 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:35:39,520 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:35:39,520 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:35:39,522 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:35:39,522 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:35:39,522 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:35:39,522 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:35:49,534 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:35:49,534 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:35:49,534 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:35:49,534 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:35:49,535 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:35:49,535 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:35:49,536 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:35:49,536 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:35:59,541 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:35:59,541 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:35:59,542 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:35:59,542 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:35:59,543 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:35:59,543 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:35:59,544 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:35:59,544 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:36:09,552 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:36:09,552 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:36:09,552 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:36:09,552 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:36:09,553 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:36:09,553 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:36:09,554 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:36:09,554 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:36:19,565 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:36:19,565 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:36:19,566 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:36:19,566 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:36:19,567 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:36:19,567 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:36:19,567 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:36:19,567 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:36:29,580 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:36:29,580 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:36:29,580 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:36:29,580 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:36:29,581 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:36:29,581 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:36:29,582 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:36:29,582 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:36:39,591 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:36:39,591 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:36:39,591 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:36:39,591 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:36:39,593 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:36:39,593 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:36:39,593 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:36:39,593 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:36:49,609 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:36:49,609 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:36:49,610 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:36:49,610 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:36:49,613 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:36:49,613 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:36:49,614 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:36:49,614 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:36:59,619 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:36:59,619 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:36:59,619 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:36:59,619 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:36:59,620 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:36:59,620 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:36:59,621 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:36:59,621 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:37:04,052 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:37:04,052 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:37:04,053 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 16:37:04,053 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 16:37:04,055 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:37:04,055 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:37:04,055 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 16:37:04,055 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 16:37:09,633 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:37:09,633 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:37:09,633 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:37:09,633 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:37:09,638 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:37:09,638 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:37:09,639 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:37:09,639 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:37:19,647 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:37:19,647 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:37:19,648 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:37:19,648 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:37:19,649 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:37:19,649 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:37:19,649 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:37:19,649 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:37:29,671 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:37:29,671 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:37:29,672 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:37:29,672 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:37:29,673 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:37:29,673 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:37:29,674 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:37:29,674 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:37:39,688 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:37:39,688 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:37:39,688 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:37:39,688 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:37:39,690 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:37:39,690 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:37:39,690 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:37:39,690 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:37:49,697 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:37:49,697 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:37:49,698 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:37:49,698 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:37:49,701 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:37:49,701 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:37:49,702 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:37:49,702 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:37:59,726 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:37:59,726 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:37:59,726 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:37:59,726 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:37:59,740 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:37:59,740 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:37:59,741 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:37:59,741 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:38:09,752 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:38:09,752 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:38:09,753 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:38:09,753 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:38:09,754 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:38:09,754 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:38:09,754 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:38:09,754 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:38:19,755 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:38:19,755 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:38:19,756 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:38:19,756 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:38:19,757 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:38:19,757 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:38:19,757 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:38:19,757 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:38:29,774 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:38:29,774 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:38:29,774 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:38:29,774 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:38:29,776 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:38:29,776 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:38:29,776 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:38:29,776 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:38:39,787 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:38:39,787 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:38:39,787 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:38:39,787 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:38:39,790 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:38:39,790 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:38:39,791 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:38:39,791 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:38:49,806 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:38:49,806 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:38:49,807 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:38:49,807 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:38:49,808 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:38:49,808 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:38:49,808 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:38:49,808 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:38:59,818 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:38:59,818 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:38:59,819 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:38:59,819 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:38:59,820 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:38:59,820 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:38:59,821 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:38:59,821 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:39:09,842 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:39:09,842 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:39:09,842 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:39:09,842 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:39:09,844 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:39:09,844 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:39:09,844 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:39:09,844 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:39:19,867 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:39:19,867 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:39:19,868 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:39:19,868 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:39:19,870 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:39:19,870 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:39:19,871 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:39:19,871 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:39:29,881 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:39:29,881 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:39:29,882 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:39:29,882 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:39:29,883 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:39:29,883 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:39:29,883 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:39:29,883 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:39:39,903 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:39:39,903 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:39:39,904 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:39:39,904 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:39:39,905 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:39:39,905 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:39:39,906 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:39:39,906 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:39:49,926 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:39:49,926 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:39:49,927 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:39:49,927 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:39:49,942 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:39:49,942 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:39:49,942 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:39:49,942 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:39:59,959 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:39:59,959 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:39:59,959 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:39:59,959 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:39:59,961 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:39:59,961 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:39:59,961 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:39:59,961 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:40:09,967 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:40:09,967 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:40:09,967 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:40:09,967 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:40:09,969 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:40:09,969 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:40:09,969 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:40:09,969 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:40:19,985 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:40:19,985 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:40:19,986 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:40:19,986 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:40:19,988 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:40:19,988 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:40:19,988 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:40:19,988 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:40:29,992 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:40:29,992 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:40:29,993 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:40:29,993 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:40:29,996 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:40:29,996 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:40:29,997 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:40:29,997 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:40:40,000 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:40:40,000 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:40:40,000 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:40:40,000 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:40:40,003 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:40:40,003 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:40:40,004 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:40:40,004 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:40:50,005 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:40:50,005 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:40:50,006 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:40:50,006 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:40:50,012 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:40:50,012 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:40:50,012 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:40:50,012 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:41:00,016 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:41:00,016 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:41:00,017 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:41:00,017 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:41:00,018 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:41:00,018 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:41:00,018 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:41:00,018 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:41:10,036 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:41:10,036 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:41:10,037 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:41:10,037 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:41:10,043 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:41:10,043 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:41:10,044 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:41:10,044 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:41:20,059 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:41:20,059 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:41:20,059 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:41:20,059 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:41:20,060 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:41:20,060 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:41:20,061 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:41:20,061 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:41:30,068 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:41:30,068 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:41:30,068 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:41:30,068 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:41:30,070 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:41:30,070 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:41:30,070 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:41:30,070 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:41:40,076 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:41:40,076 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:41:40,077 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:41:40,077 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:41:40,078 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:41:40,078 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:41:40,078 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:41:40,078 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:41:50,085 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:41:50,085 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:41:50,086 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:41:50,086 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:41:50,087 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:41:50,087 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:41:50,087 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:41:50,087 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:42:00,098 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:42:00,098 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:42:00,099 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:42:00,099 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:42:00,101 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:42:00,101 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:42:00,101 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:42:00,101 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:42:04,058 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:42:04,058 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:42:04,059 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 16:42:04,059 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 16:42:04,060 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:42:04,060 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:42:04,061 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 16:42:04,061 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 16:42:10,111 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:42:10,111 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:42:10,112 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:42:10,112 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:42:10,113 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:42:10,113 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:42:10,113 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:42:10,113 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:42:15,425 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 16:42:15,425 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 16:42:15,428 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 16:42:15,428 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 16:42:15,429 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 14:42:15(String)
2021-04-26 16:42:15,429 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 14:42:15(String)
2021-04-26 16:42:15,431 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 16:42:15,431 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 16:42:20,130 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:42:20,130 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:42:20,130 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:42:20,130 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:42:20,145 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:42:20,145 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:42:20,145 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:42:20,145 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:42:30,165 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:42:30,165 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:42:30,165 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:42:30,165 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:42:30,166 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:42:30,166 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:42:30,167 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:42:30,167 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:42:40,169 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:42:40,169 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:42:40,169 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:42:40,169 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:42:40,170 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:42:40,170 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:42:40,170 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:42:40,170 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:42:50,183 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:42:50,183 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:42:50,183 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:42:50,183 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:42:50,186 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:42:50,186 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:42:50,187 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:42:50,187 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:43:00,195 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:43:00,195 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:43:00,195 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:43:00,195 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:43:00,198 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:43:00,198 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:43:00,199 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:43:00,199 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:43:10,211 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:43:10,211 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:43:10,211 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:43:10,211 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:43:10,213 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:43:10,213 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:43:10,213 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:43:10,213 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:43:20,216 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:43:20,216 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:43:20,217 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:43:20,217 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:43:20,218 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:43:20,218 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:43:20,219 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:43:20,219 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:43:30,225 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:43:30,225 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:43:30,226 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:43:30,226 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:43:30,229 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:43:30,229 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:43:30,230 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:43:30,230 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:43:40,232 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:43:40,232 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:43:40,233 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:43:40,233 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:43:40,234 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:43:40,234 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:43:40,234 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:43:40,234 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:43:50,241 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:43:50,241 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:43:50,241 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:43:50,241 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:43:50,242 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:43:50,242 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:43:50,243 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:43:50,243 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:44:00,258 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:44:00,258 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:44:00,259 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:44:00,259 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:44:00,261 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:44:00,261 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:44:00,261 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:44:00,261 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:44:10,272 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:44:10,272 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:44:10,273 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:44:10,273 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:44:10,274 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:44:10,274 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:44:10,274 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:44:10,274 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:44:20,285 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:44:20,285 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:44:20,286 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:44:20,286 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:44:20,287 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:44:20,287 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:44:20,287 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:44:20,287 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:44:30,289 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:44:30,289 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:44:30,290 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:44:30,290 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:44:30,291 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:44:30,291 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:44:30,292 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:44:30,292 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:44:40,307 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:44:40,307 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:44:40,308 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:44:40,308 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:44:40,309 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:44:40,309 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:44:40,310 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:44:40,310 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:44:50,325 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:44:50,325 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:44:50,326 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:44:50,326 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:44:50,327 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:44:50,327 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:44:50,328 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:44:50,328 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:45:00,334 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:45:00,334 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:45:00,335 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:45:00,335 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:45:00,336 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:45:00,336 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:45:00,336 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:45:00,336 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:45:10,340 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:45:10,340 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:45:10,341 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:45:10,341 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:45:10,342 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:45:10,342 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:45:10,343 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:45:10,343 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:45:20,351 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:45:20,351 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:45:20,352 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:45:20,352 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:45:20,353 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:45:20,353 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:45:20,354 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:45:20,354 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:45:30,356 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:45:30,356 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:45:30,356 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:45:30,356 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:45:30,358 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:45:30,358 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:45:30,358 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:45:30,358 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:45:40,361 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:45:40,361 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:45:40,361 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:45:40,361 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:45:40,364 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:45:40,364 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:45:40,364 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:45:40,364 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:45:50,368 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:45:50,368 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:45:50,368 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:45:50,368 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:45:50,370 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:45:50,370 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:45:50,371 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:45:50,371 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:46:00,384 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:46:00,384 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:46:00,384 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:46:00,384 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:46:00,386 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:46:00,386 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:46:00,386 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:46:00,386 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:46:10,390 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:46:10,390 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:46:10,391 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:46:10,391 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:46:10,393 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:46:10,393 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:46:10,394 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:46:10,394 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:46:20,404 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:46:20,404 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:46:20,404 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:46:20,404 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:46:20,406 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:46:20,406 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:46:20,407 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:46:20,407 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:46:30,419 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:46:30,419 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:46:30,419 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:46:30,419 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:46:30,421 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:46:30,421 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:46:30,421 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:46:30,421 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:46:40,426 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:46:40,426 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:46:40,427 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:46:40,427 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:46:40,428 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:46:40,428 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:46:40,428 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:46:40,428 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:46:50,436 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:46:50,436 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:46:50,437 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:46:50,437 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:46:50,439 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:46:50,439 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:46:50,439 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:46:50,439 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:47:00,442 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:47:00,442 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:47:00,442 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:47:00,442 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:47:00,444 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:47:00,444 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:47:00,445 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:47:00,445 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:47:04,073 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:47:04,073 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:47:04,073 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 16:47:04,073 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 16:47:04,075 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:47:04,075 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:47:04,075 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 16:47:04,075 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 16:47:10,447 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:47:10,447 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:47:10,448 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:47:10,448 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:47:10,449 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:47:10,449 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:47:10,449 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:47:10,449 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:47:20,469 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:47:20,469 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:47:20,470 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:47:20,470 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:47:20,486 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:47:20,486 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:47:20,486 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:47:20,486 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:47:30,498 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:47:30,498 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:47:30,499 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:47:30,499 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:47:30,501 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:47:30,501 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:47:30,501 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:47:30,501 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:47:40,518 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:47:40,518 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:47:40,519 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:47:40,519 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:47:40,522 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:47:40,522 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:47:40,522 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:47:40,522 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:47:50,529 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:47:50,529 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:47:50,530 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:47:50,530 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:47:50,531 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:47:50,531 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:47:50,531 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:47:50,531 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:48:00,537 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:48:00,537 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:48:00,538 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:48:00,538 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:48:00,539 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:48:00,539 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:48:00,540 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:48:00,540 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:48:10,544 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:48:10,544 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:48:10,545 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:48:10,545 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:48:10,547 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:48:10,547 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:48:10,548 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:48:10,548 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:48:20,561 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:48:20,561 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:48:20,562 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:48:20,562 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:48:20,563 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:48:20,563 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:48:20,564 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:48:20,564 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:48:30,577 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:48:30,577 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:48:30,578 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:48:30,578 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:48:30,587 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:48:30,587 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:48:30,588 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:48:30,588 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:48:40,598 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:48:40,598 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:48:40,598 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:48:40,598 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:48:40,600 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:48:40,600 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:48:40,600 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:48:40,600 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:48:50,611 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:48:50,611 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:48:50,612 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:48:50,612 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:48:50,613 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:48:50,613 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:48:50,614 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:48:50,614 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:49:00,631 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:49:00,631 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:49:00,631 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:49:00,631 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:49:00,633 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:49:00,633 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:49:00,634 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:49:00,634 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:49:10,648 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:49:10,648 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:49:10,649 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:49:10,649 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:49:10,667 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:49:10,667 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:49:10,667 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:49:10,667 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:49:14,545 INFO (AbstractApplicationContext.java:993)- Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@193f4272: startup date [Mon Apr 26 16:12:00 CST 2021]; root of context hierarchy
2021-04-26 16:49:14,560 INFO (DefaultLifecycleProcessor.java:366)- Stopping beans in phase 2147483647
2021-04-26 16:49:14,565 INFO (MBeanExporter.java:451)- Unregistering JMX-exposed beans on shutdown
2021-04-26 16:49:14,567 INFO (MBeanRegistrationSupport.java:183)- Unregistering JMX-exposed beans
2021-04-26 16:49:14,571 INFO (HikariDataSource.java:381)- HikariPool-1 - Shutdown initiated...
2021-04-26 16:49:14,585 INFO (HikariDataSource.java:383)- HikariPool-1 - Shutdown completed.
2021-04-26 16:49:15,666 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 13828 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 16:49:15,666 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 13828 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 16:49:15,667 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 16:49:15,667 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 16:49:15,667 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 16:49:15,667 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 16:49:15,769 INFO (AbstractApplicationContext.java:590)- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@49af8a2b: startup date [Mon Apr 26 16:49:15 CST 2021]; root of context hierarchy
2021-04-26 16:49:16,542 INFO (PostProcessorRegistrationDelegate.java:328)- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2dff7f3d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-26 16:49:16,792 INFO (TomcatWebServer.java:91)- Tomcat initialized with port(s): 8899 (http)
2021-04-26 16:49:16,793 INFO (DirectJDKLog.java:180)- Initializing ProtocolHandler ["http-nio-8899"]
2021-04-26 16:49:16,793 INFO (DirectJDKLog.java:180)- Starting service [Tomcat]
2021-04-26 16:49:16,794 INFO (DirectJDKLog.java:180)- Starting Servlet Engine: Apache Tomcat/8.5.31
2021-04-26 16:49:16,873 INFO (DirectJDKLog.java:180)- Initializing Spring embedded WebApplicationContext
2021-04-26 16:49:16,874 INFO (ServletWebServerApplicationContext.java:285)- Root WebApplicationContext: initialization completed in 1105 ms
2021-04-26 16:49:16,932 INFO (ServletRegistrationBean.java:185)- Servlet dispatcherServlet mapped to [/]
2021-04-26 16:49:16,934 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'characterEncodingFilter' to: [/*]
2021-04-26 16:49:16,934 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-04-26 16:49:16,935 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-04-26 16:49:16,935 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'requestContextFilter' to: [/*]
2021-04-26 16:49:17,236 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/triggerUnitCover],methods=[POST]}" onto public com.xiaoju.basetech.entity.HttpResult<java.lang.Boolean> com.xiaoju.basetech.controller.CodeCovController.triggerUnitCover(com.xiaoju.basetech.entity.UnitCoverRequest)
2021-04-26 16:49:17,237 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getUnitCoverResult],methods=[GET]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getCoverResult(java.lang.String)
2021-04-26 16:49:17,238 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/triggerEnvCov],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<java.lang.Boolean> com.xiaoju.basetech.controller.CodeCovController.triggerEnvCov(com.xiaoju.basetech.entity.EnvCoverRequest)
2021-04-26 16:49:17,239 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getEnvCoverResult],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getEnvCoverResult(java.lang.String)
2021-04-26 16:49:17,240 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getLocalCoverResult],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getEnvLocalCoverResult(com.xiaoju.basetech.entity.LocalHostRequestParam)
2021-04-26 16:49:17,242 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-04-26 16:49:17,243 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-04-26 16:49:17,244 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-04-26 16:49:17,249 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2021-04-26 16:49:17,250 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-04-26 16:49:17,316 INFO (PropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2021-04-26 16:49:17,357 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 16:49:17,431 INFO (RequestMappingHandlerAdapter.java:574)- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@49af8a2b: startup date [Mon Apr 26 16:49:15 CST 2021]; root of context hierarchy
2021-04-26 16:49:17,446 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 16:49:17,446 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 16:49:17,460 INFO (ExceptionHandlerExceptionResolver.java:288)- Detected @ExceptionHandler methods in globalExceptionHandler
2021-04-26 16:49:17,565 INFO (OptionalLiveReloadServer.java:57)- LiveReload server is running on port 35729
2021-04-26 16:49:17,633 INFO (MBeanExporter.java:433)- Registering beans for JMX exposure on startup
2021-04-26 16:49:17,636 INFO (MBeanExporter.java:895)- Bean with name 'dataSource' has been autodetected for JMX exposure
2021-04-26 16:49:17,641 INFO (MBeanExporter.java:668)- Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2021-04-26 16:49:17,643 INFO (DefaultLifecycleProcessor.java:351)- Starting beans in phase 2147483647
2021-04-26 16:49:17,643 INFO (DocumentationPluginsBootstrapper.java:147)- Context refreshed
2021-04-26 16:49:17,677 INFO (DocumentationPluginsBootstrapper.java:150)- Found 1 custom documentation plugin(s)
2021-04-26 16:49:17,684 INFO (ApiListingReferenceScanner.java:41)- Scanning for api listing references
2021-04-26 16:49:17,753 INFO (DirectJDKLog.java:180)- Starting ProtocolHandler ["http-nio-8899"]
2021-04-26 16:49:17,758 INFO (DirectJDKLog.java:180)- Using a shared selector for servlet write/read
2021-04-26 16:49:17,764 INFO (TomcatWebServer.java:206)- Tomcat started on port(s): 8899 (http) with context path ''
2021-04-26 16:49:17,765 INFO (StartupInfoLogger.java:59)- Started CodeCovApplication in 2.215 seconds (JVM running for 2239.533)
2021-04-26 16:49:17,765 INFO (StartupInfoLogger.java:59)- Started CodeCovApplication in 2.215 seconds (JVM running for 2239.533)
2021-04-26 16:49:18,238 INFO (ConditionEvaluationDeltaLoggingListener.java:56)- Condition evaluation unchanged
2021-04-26 16:49:22,280 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 21080 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 16:49:22,280 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 21080 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 16:49:22,283 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 16:49:22,283 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 16:49:22,285 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 16:49:22,285 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 16:49:22,567 INFO (AbstractApplicationContext.java:590)- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2f4c03b4: startup date [Mon Apr 26 16:49:22 CST 2021]; root of context hierarchy
2021-04-26 16:49:23,924 INFO (PostProcessorRegistrationDelegate.java:328)- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f789cda] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-26 16:49:24,460 INFO (TomcatWebServer.java:91)- Tomcat initialized with port(s): 8899 (http)
2021-04-26 16:49:24,481 INFO (DirectJDKLog.java:180)- Initializing ProtocolHandler ["http-nio-8899"]
2021-04-26 16:49:24,507 INFO (DirectJDKLog.java:180)- Starting service [Tomcat]
2021-04-26 16:49:24,508 INFO (DirectJDKLog.java:180)- Starting Servlet Engine: Apache Tomcat/8.5.31
2021-04-26 16:49:24,561 INFO (DirectJDKLog.java:180)- The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\soft\jdk1.8.0_172\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\soft\jdk1.8.0_172\bin;C:\Program Files\Git\cmd;D:/demo/maven/apache-maven-3.6.3\bin;C:\cmder;D:\soft\jdk1.8.0_172\jre\bin;;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\admin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\IntelliJ IDEA 2020.2\bin;C:\Users\admin\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2021-04-26 16:49:24,670 INFO (DirectJDKLog.java:180)- Initializing Spring embedded WebApplicationContext
2021-04-26 16:49:24,670 INFO (ServletWebServerApplicationContext.java:285)- Root WebApplicationContext: initialization completed in 2103 ms
2021-04-26 16:49:24,827 INFO (ServletRegistrationBean.java:185)- Servlet dispatcherServlet mapped to [/]
2021-04-26 16:49:24,839 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'characterEncodingFilter' to: [/*]
2021-04-26 16:49:24,840 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-04-26 16:49:24,840 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-04-26 16:49:24,841 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'requestContextFilter' to: [/*]
2021-04-26 16:49:25,934 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/triggerEnvCov],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<java.lang.Boolean> com.xiaoju.basetech.controller.CodeCovController.triggerEnvCov(com.xiaoju.basetech.entity.EnvCoverRequest)
2021-04-26 16:49:25,935 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getUnitCoverResult],methods=[GET]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getCoverResult(java.lang.String)
2021-04-26 16:49:25,936 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/triggerUnitCover],methods=[POST]}" onto public com.xiaoju.basetech.entity.HttpResult<java.lang.Boolean> com.xiaoju.basetech.controller.CodeCovController.triggerUnitCover(com.xiaoju.basetech.entity.UnitCoverRequest)
2021-04-26 16:49:25,936 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getEnvCoverResult],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getEnvCoverResult(java.lang.String)
2021-04-26 16:49:25,937 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getLocalCoverResult],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getEnvLocalCoverResult(com.xiaoju.basetech.entity.LocalHostRequestParam)
2021-04-26 16:49:25,945 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-04-26 16:49:25,946 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-04-26 16:49:25,948 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-04-26 16:49:25,954 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2021-04-26 16:49:25,955 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-04-26 16:49:26,157 INFO (PropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2021-04-26 16:49:26,300 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 16:49:26,576 INFO (RequestMappingHandlerAdapter.java:574)- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2f4c03b4: startup date [Mon Apr 26 16:49:22 CST 2021]; root of context hierarchy
2021-04-26 16:49:26,634 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 16:49:26,635 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 16:49:26,652 INFO (ExceptionHandlerExceptionResolver.java:288)- Detected @ExceptionHandler methods in globalExceptionHandler
2021-04-26 16:49:26,974 WARN (OptionalLiveReloadServer.java:61)- Unable to start LiveReload server
2021-04-26 16:49:27,005 INFO (MBeanExporter.java:433)- Registering beans for JMX exposure on startup
2021-04-26 16:49:27,007 INFO (MBeanExporter.java:895)- Bean with name 'dataSource' has been autodetected for JMX exposure
2021-04-26 16:49:27,013 INFO (MBeanExporter.java:668)- Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2021-04-26 16:49:27,017 INFO (DefaultLifecycleProcessor.java:351)- Starting beans in phase 2147483647
2021-04-26 16:49:27,018 INFO (DocumentationPluginsBootstrapper.java:147)- Context refreshed
2021-04-26 16:49:27,034 INFO (DocumentationPluginsBootstrapper.java:150)- Found 1 custom documentation plugin(s)
2021-04-26 16:49:27,067 INFO (ApiListingReferenceScanner.java:41)- Scanning for api listing references
2021-04-26 16:49:27,277 INFO (DirectJDKLog.java:180)- Starting ProtocolHandler ["http-nio-8899"]
2021-04-26 16:49:27,297 ERROR (DirectJDKLog.java:182)- Failed to start connector [Connector[HTTP/1.1-8899]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8899]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.xiaoju.basetech.CodeCovApplication.main(CodeCovApplication.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 18 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 19 common frames omitted
2021-04-26 16:49:27,303 INFO (DirectJDKLog.java:180)- Pausing ProtocolHandler ["http-nio-8899"]
2021-04-26 16:49:27,303 INFO (DirectJDKLog.java:180)- Stopping service [Tomcat]
2021-04-26 16:49:27,314 INFO (DirectJDKLog.java:180)- The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2021-04-26 16:49:27,315 INFO (DirectJDKLog.java:180)- Stopping ProtocolHandler ["http-nio-8899"]
2021-04-26 16:49:27,316 INFO (DirectJDKLog.java:180)- Destroying ProtocolHandler ["http-nio-8899"]
2021-04-26 16:49:27,320 INFO (ConditionEvaluationReportLoggingListener.java:101)- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-04-26 16:49:27,326 ERROR (LoggingFailureAnalysisReporter.java:42)- 

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8899 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8899, or configure this application to listen on another port.

2021-04-26 16:49:27,328 INFO (AbstractApplicationContext.java:993)- Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2f4c03b4: startup date [Mon Apr 26 16:49:22 CST 2021]; root of context hierarchy
2021-04-26 16:49:27,332 INFO (DefaultLifecycleProcessor.java:366)- Stopping beans in phase 2147483647
2021-04-26 16:49:27,335 INFO (MBeanExporter.java:451)- Unregistering JMX-exposed beans on shutdown
2021-04-26 16:49:27,336 INFO (MBeanRegistrationSupport.java:183)- Unregistering JMX-exposed beans
2021-04-26 16:49:27,755 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 16:49:27,755 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 16:49:27,757 INFO (HikariDataSource.java:110)- HikariPool-2 - Starting...
2021-04-26 16:49:27,786 INFO (HikariDataSource.java:123)- HikariPool-2 - Start completed.
2021-04-26 16:49:27,786 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 16:49:27,786 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 16:49:27,787 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 14:49:27(String)
2021-04-26 16:49:27,787 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 14:49:27(String)
2021-04-26 16:49:27,792 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 16:49:27,792 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 16:49:27,793 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:49:27,793 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:49:27,793 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:49:27,793 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:49:27,796 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:49:27,796 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:49:27,797 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:49:27,797 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:49:37,813 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:49:37,813 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:49:37,813 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:49:37,813 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:49:37,814 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:49:37,814 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:49:37,815 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:49:37,815 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:49:47,820 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:49:47,820 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:49:47,821 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:49:47,821 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:49:47,822 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:49:47,822 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:49:47,823 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:49:47,823 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:49:57,829 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:49:57,829 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:49:57,830 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:49:57,830 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:49:57,831 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:49:57,831 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:49:57,831 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:49:57,831 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:50:07,851 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:50:07,851 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:50:07,852 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:50:07,852 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:50:07,853 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:50:07,853 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:50:07,854 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:50:07,854 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:50:08,174 INFO (AbstractApplicationContext.java:993)- Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@49af8a2b: startup date [Mon Apr 26 16:49:15 CST 2021]; root of context hierarchy
2021-04-26 16:50:08,176 INFO (DefaultLifecycleProcessor.java:366)- Stopping beans in phase 2147483647
2021-04-26 16:50:08,177 INFO (MBeanExporter.java:451)- Unregistering JMX-exposed beans on shutdown
2021-04-26 16:50:08,177 INFO (MBeanRegistrationSupport.java:183)- Unregistering JMX-exposed beans
2021-04-26 16:50:08,179 INFO (HikariDataSource.java:381)- HikariPool-2 - Shutdown initiated...
2021-04-26 16:50:08,188 INFO (HikariDataSource.java:383)- HikariPool-2 - Shutdown completed.
2021-04-26 16:50:09,125 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 13828 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 16:50:09,125 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 13828 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 16:50:09,125 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 16:50:09,125 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 16:50:09,126 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 16:50:09,126 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 16:50:09,129 INFO (AbstractApplicationContext.java:590)- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@765aa168: startup date [Mon Apr 26 16:50:09 CST 2021]; root of context hierarchy
2021-04-26 16:50:09,882 INFO (PostProcessorRegistrationDelegate.java:328)- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2dff7f3d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-26 16:50:10,030 INFO (TomcatWebServer.java:91)- Tomcat initialized with port(s): 8897 (http)
2021-04-26 16:50:10,031 INFO (DirectJDKLog.java:180)- Initializing ProtocolHandler ["http-nio-8897"]
2021-04-26 16:50:10,031 INFO (DirectJDKLog.java:180)- Starting service [Tomcat]
2021-04-26 16:50:10,031 INFO (DirectJDKLog.java:180)- Starting Servlet Engine: Apache Tomcat/8.5.31
2021-04-26 16:50:10,052 INFO (DirectJDKLog.java:180)- Initializing Spring embedded WebApplicationContext
2021-04-26 16:50:10,053 INFO (ServletWebServerApplicationContext.java:285)- Root WebApplicationContext: initialization completed in 924 ms
2021-04-26 16:50:10,087 INFO (ServletRegistrationBean.java:185)- Servlet dispatcherServlet mapped to [/]
2021-04-26 16:50:10,088 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'characterEncodingFilter' to: [/*]
2021-04-26 16:50:10,088 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-04-26 16:50:10,089 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-04-26 16:50:10,089 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'requestContextFilter' to: [/*]
2021-04-26 16:50:10,283 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/triggerUnitCover],methods=[POST]}" onto public com.xiaoju.basetech.entity.HttpResult<java.lang.Boolean> com.xiaoju.basetech.controller.CodeCovController.triggerUnitCover(com.xiaoju.basetech.entity.UnitCoverRequest)
2021-04-26 16:50:10,283 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getUnitCoverResult],methods=[GET]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getCoverResult(java.lang.String)
2021-04-26 16:50:10,284 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/triggerEnvCov],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<java.lang.Boolean> com.xiaoju.basetech.controller.CodeCovController.triggerEnvCov(com.xiaoju.basetech.entity.EnvCoverRequest)
2021-04-26 16:50:10,284 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getEnvCoverResult],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getEnvCoverResult(java.lang.String)
2021-04-26 16:50:10,285 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getLocalCoverResult],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getEnvLocalCoverResult(com.xiaoju.basetech.entity.LocalHostRequestParam)
2021-04-26 16:50:10,286 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-04-26 16:50:10,287 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-04-26 16:50:10,287 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-04-26 16:50:10,290 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2021-04-26 16:50:10,290 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-04-26 16:50:10,332 INFO (PropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2021-04-26 16:50:10,353 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 16:50:10,394 INFO (RequestMappingHandlerAdapter.java:574)- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@765aa168: startup date [Mon Apr 26 16:50:09 CST 2021]; root of context hierarchy
2021-04-26 16:50:10,408 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 16:50:10,408 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 16:50:10,416 INFO (ExceptionHandlerExceptionResolver.java:288)- Detected @ExceptionHandler methods in globalExceptionHandler
2021-04-26 16:50:10,485 INFO (OptionalLiveReloadServer.java:57)- LiveReload server is running on port 35729
2021-04-26 16:50:10,504 INFO (MBeanExporter.java:433)- Registering beans for JMX exposure on startup
2021-04-26 16:50:10,505 INFO (MBeanExporter.java:895)- Bean with name 'dataSource' has been autodetected for JMX exposure
2021-04-26 16:50:10,509 INFO (MBeanExporter.java:668)- Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2021-04-26 16:50:10,512 INFO (DefaultLifecycleProcessor.java:351)- Starting beans in phase 2147483647
2021-04-26 16:50:10,513 INFO (DocumentationPluginsBootstrapper.java:147)- Context refreshed
2021-04-26 16:50:10,514 INFO (DocumentationPluginsBootstrapper.java:150)- Found 1 custom documentation plugin(s)
2021-04-26 16:50:10,530 INFO (ApiListingReferenceScanner.java:41)- Scanning for api listing references
2021-04-26 16:50:10,596 INFO (DirectJDKLog.java:180)- Starting ProtocolHandler ["http-nio-8897"]
2021-04-26 16:50:10,599 INFO (DirectJDKLog.java:180)- Using a shared selector for servlet write/read
2021-04-26 16:50:10,610 INFO (TomcatWebServer.java:206)- Tomcat started on port(s): 8897 (http) with context path ''
2021-04-26 16:50:10,611 INFO (StartupInfoLogger.java:59)- Started CodeCovApplication in 1.522 seconds (JVM running for 2292.378)
2021-04-26 16:50:10,611 INFO (StartupInfoLogger.java:59)- Started CodeCovApplication in 1.522 seconds (JVM running for 2292.378)
2021-04-26 16:50:11,414 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 20340 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 16:50:11,414 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 20340 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 16:50:11,420 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 16:50:11,420 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 16:50:11,422 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 16:50:11,422 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 16:50:11,606 INFO (ConditionEvaluationDeltaLoggingListener.java:56)- Condition evaluation unchanged
2021-04-26 16:50:11,791 INFO (AbstractApplicationContext.java:590)- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3106dd8c: startup date [Mon Apr 26 16:50:11 CST 2021]; root of context hierarchy
2021-04-26 16:50:13,105 INFO (PostProcessorRegistrationDelegate.java:328)- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$493a6dfc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-26 16:50:13,504 INFO (TomcatWebServer.java:91)- Tomcat initialized with port(s): 8897 (http)
2021-04-26 16:50:13,516 INFO (DirectJDKLog.java:180)- Initializing ProtocolHandler ["http-nio-8897"]
2021-04-26 16:50:13,526 INFO (DirectJDKLog.java:180)- Starting service [Tomcat]
2021-04-26 16:50:13,527 INFO (DirectJDKLog.java:180)- Starting Servlet Engine: Apache Tomcat/8.5.31
2021-04-26 16:50:13,530 INFO (DirectJDKLog.java:180)- The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\soft\jdk1.8.0_172\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\soft\jdk1.8.0_172\bin;C:\Program Files\Git\cmd;D:/demo/maven/apache-maven-3.6.3\bin;C:\cmder;D:\soft\jdk1.8.0_172\jre\bin;;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\admin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\IntelliJ IDEA 2020.2\bin;C:\Users\admin\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2021-04-26 16:50:13,629 INFO (DirectJDKLog.java:180)- Initializing Spring embedded WebApplicationContext
2021-04-26 16:50:13,629 INFO (ServletWebServerApplicationContext.java:285)- Root WebApplicationContext: initialization completed in 1838 ms
2021-04-26 16:50:13,769 INFO (ServletRegistrationBean.java:185)- Servlet dispatcherServlet mapped to [/]
2021-04-26 16:50:13,774 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'characterEncodingFilter' to: [/*]
2021-04-26 16:50:13,775 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-04-26 16:50:13,776 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-04-26 16:50:13,776 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'requestContextFilter' to: [/*]
2021-04-26 16:50:14,493 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getUnitCoverResult],methods=[GET]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getCoverResult(java.lang.String)
2021-04-26 16:50:14,494 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/triggerUnitCover],methods=[POST]}" onto public com.xiaoju.basetech.entity.HttpResult<java.lang.Boolean> com.xiaoju.basetech.controller.CodeCovController.triggerUnitCover(com.xiaoju.basetech.entity.UnitCoverRequest)
2021-04-26 16:50:14,495 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/triggerEnvCov],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<java.lang.Boolean> com.xiaoju.basetech.controller.CodeCovController.triggerEnvCov(com.xiaoju.basetech.entity.EnvCoverRequest)
2021-04-26 16:50:14,496 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getLocalCoverResult],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getEnvLocalCoverResult(com.xiaoju.basetech.entity.LocalHostRequestParam)
2021-04-26 16:50:14,496 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getEnvCoverResult],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getEnvCoverResult(java.lang.String)
2021-04-26 16:50:14,502 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-04-26 16:50:14,504 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-04-26 16:50:14,505 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-04-26 16:50:14,508 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2021-04-26 16:50:14,509 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-04-26 16:50:14,654 INFO (PropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2021-04-26 16:50:14,744 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 16:50:14,924 INFO (RequestMappingHandlerAdapter.java:574)- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3106dd8c: startup date [Mon Apr 26 16:50:11 CST 2021]; root of context hierarchy
2021-04-26 16:50:14,971 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 16:50:14,972 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 16:50:14,987 INFO (ExceptionHandlerExceptionResolver.java:288)- Detected @ExceptionHandler methods in globalExceptionHandler
2021-04-26 16:50:15,245 WARN (OptionalLiveReloadServer.java:61)- Unable to start LiveReload server
2021-04-26 16:50:15,273 INFO (MBeanExporter.java:433)- Registering beans for JMX exposure on startup
2021-04-26 16:50:15,276 INFO (MBeanExporter.java:895)- Bean with name 'dataSource' has been autodetected for JMX exposure
2021-04-26 16:50:15,281 INFO (MBeanExporter.java:668)- Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2021-04-26 16:50:15,286 INFO (DefaultLifecycleProcessor.java:351)- Starting beans in phase 2147483647
2021-04-26 16:50:15,286 INFO (DocumentationPluginsBootstrapper.java:147)- Context refreshed
2021-04-26 16:50:15,300 INFO (DocumentationPluginsBootstrapper.java:150)- Found 1 custom documentation plugin(s)
2021-04-26 16:50:15,334 INFO (ApiListingReferenceScanner.java:41)- Scanning for api listing references
2021-04-26 16:50:15,505 INFO (DirectJDKLog.java:180)- Starting ProtocolHandler ["http-nio-8897"]
2021-04-26 16:50:15,511 ERROR (DirectJDKLog.java:182)- Failed to start connector [Connector[HTTP/1.1-8897]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8897]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.xiaoju.basetech.CodeCovApplication.main(CodeCovApplication.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 18 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 19 common frames omitted
2021-04-26 16:50:15,514 INFO (DirectJDKLog.java:180)- Pausing ProtocolHandler ["http-nio-8897"]
2021-04-26 16:50:15,515 INFO (DirectJDKLog.java:180)- Stopping service [Tomcat]
2021-04-26 16:50:15,524 INFO (DirectJDKLog.java:180)- The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2021-04-26 16:50:15,525 INFO (DirectJDKLog.java:180)- Stopping ProtocolHandler ["http-nio-8897"]
2021-04-26 16:50:15,525 INFO (DirectJDKLog.java:180)- Destroying ProtocolHandler ["http-nio-8897"]
2021-04-26 16:50:15,529 INFO (ConditionEvaluationReportLoggingListener.java:101)- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-04-26 16:50:15,535 ERROR (LoggingFailureAnalysisReporter.java:42)- 

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8897 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8897, or configure this application to listen on another port.

2021-04-26 16:50:15,536 INFO (AbstractApplicationContext.java:993)- Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3106dd8c: startup date [Mon Apr 26 16:50:11 CST 2021]; root of context hierarchy
2021-04-26 16:50:15,539 INFO (DefaultLifecycleProcessor.java:366)- Stopping beans in phase 2147483647
2021-04-26 16:50:15,543 INFO (MBeanExporter.java:451)- Unregistering JMX-exposed beans on shutdown
2021-04-26 16:50:15,544 INFO (MBeanRegistrationSupport.java:183)- Unregistering JMX-exposed beans
2021-04-26 16:50:20,605 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 16:50:20,605 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 16:50:20,608 INFO (HikariDataSource.java:110)- HikariPool-3 - Starting...
2021-04-26 16:50:20,635 INFO (HikariDataSource.java:123)- HikariPool-3 - Start completed.
2021-04-26 16:50:20,635 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 16:50:20,635 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 16:50:20,636 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 14:50:20(String)
2021-04-26 16:50:20,636 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 14:50:20(String)
2021-04-26 16:50:20,639 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 16:50:20,639 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 16:50:20,640 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:50:20,640 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:50:20,641 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:50:20,641 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:50:20,644 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:50:20,644 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:50:20,645 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:50:20,645 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:50:30,649 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:50:30,649 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:50:30,650 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:50:30,650 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:50:30,651 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:50:30,651 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:50:30,652 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:50:30,652 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:50:40,655 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:50:40,655 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:50:40,655 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:50:40,655 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:50:40,657 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:50:40,657 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:50:40,657 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:50:40,657 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:50:50,664 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:50:50,664 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:50:50,664 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:50:50,664 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:50:50,670 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:50:50,670 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:50:50,670 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:50:50,670 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:51:00,685 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:51:00,685 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:51:00,686 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:51:00,686 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:51:00,687 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:51:00,687 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:51:00,687 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:51:00,687 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:51:07,160 INFO (AbstractApplicationContext.java:993)- Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@765aa168: startup date [Mon Apr 26 16:50:09 CST 2021]; root of context hierarchy
2021-04-26 16:51:07,161 INFO (DefaultLifecycleProcessor.java:366)- Stopping beans in phase 2147483647
2021-04-26 16:51:07,162 INFO (MBeanExporter.java:451)- Unregistering JMX-exposed beans on shutdown
2021-04-26 16:51:07,162 INFO (MBeanRegistrationSupport.java:183)- Unregistering JMX-exposed beans
2021-04-26 16:51:07,164 INFO (HikariDataSource.java:381)- HikariPool-3 - Shutdown initiated...
2021-04-26 16:51:07,175 INFO (HikariDataSource.java:383)- HikariPool-3 - Shutdown completed.
2021-04-26 16:51:08,426 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 13828 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 16:51:08,426 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 13828 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 16:51:08,427 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 16:51:08,427 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 16:51:08,427 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 16:51:08,427 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 16:51:08,429 INFO (AbstractApplicationContext.java:590)- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@25a78c64: startup date [Mon Apr 26 16:51:08 CST 2021]; root of context hierarchy
2021-04-26 16:51:09,004 WARN (ClassPathMapperScanner.java:166)- No MyBatis mapper was found in '[com.xiaoju.basetech.dao]' package. Please check your configuration.
2021-04-26 16:51:09,072 WARN (ClassPathMapperScanner.java:142)- No MyBatis mapper was found in '[com.xiaoju.basetech]' package. Please check your configuration.
2021-04-26 16:51:09,077 WARN (ClassPathMapperScanner.java:166)- No MyBatis mapper was found in '[com.xiaoju.basetech]' package. Please check your configuration.
2021-04-26 16:51:09,182 INFO (PostProcessorRegistrationDelegate.java:328)- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2dff7f3d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-26 16:51:09,317 INFO (TomcatWebServer.java:91)- Tomcat initialized with port(s): 6795 (http)
2021-04-26 16:51:09,319 INFO (DirectJDKLog.java:180)- Initializing ProtocolHandler ["http-nio-6795"]
2021-04-26 16:51:09,320 INFO (DirectJDKLog.java:180)- Starting service [Tomcat]
2021-04-26 16:51:09,320 INFO (DirectJDKLog.java:180)- Starting Servlet Engine: Apache Tomcat/8.5.31
2021-04-26 16:51:09,341 INFO (DirectJDKLog.java:180)- Initializing Spring embedded WebApplicationContext
2021-04-26 16:51:09,342 INFO (ServletWebServerApplicationContext.java:285)- Root WebApplicationContext: initialization completed in 913 ms
2021-04-26 16:51:09,378 INFO (ServletRegistrationBean.java:185)- Servlet dispatcherServlet mapped to [/]
2021-04-26 16:51:09,379 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'characterEncodingFilter' to: [/*]
2021-04-26 16:51:09,379 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-04-26 16:51:09,379 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-04-26 16:51:09,379 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'requestContextFilter' to: [/*]
2021-04-26 16:51:09,539 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-04-26 16:51:09,539 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-04-26 16:51:09,540 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-04-26 16:51:09,543 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2021-04-26 16:51:09,543 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-04-26 16:51:09,609 INFO (PropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2021-04-26 16:51:09,631 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 16:51:09,687 INFO (RequestMappingHandlerAdapter.java:574)- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@25a78c64: startup date [Mon Apr 26 16:51:08 CST 2021]; root of context hierarchy
2021-04-26 16:51:09,704 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 16:51:09,704 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 16:51:09,811 WARN (AbstractApplicationContext.java:558)- Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [tk/mybatis/mapper/autoconfigure/MapperAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\demo\super-jacoco-master\target\classes\mapper\CoverageReportDao.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.xiaoju.basetech.entity.CoverageReportEntity'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.xiaoju.basetech.entity.CoverageReportEntity
2021-04-26 16:51:09,814 INFO (DirectJDKLog.java:180)- Stopping service [Tomcat]
2021-04-26 16:51:09,823 INFO (ConditionEvaluationReportLoggingListener.java:101)- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-04-26 16:51:09,833 ERROR (SpringApplication.java:842)- Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [tk/mybatis/mapper/autoconfigure/MapperAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\demo\super-jacoco-master\target\classes\mapper\CoverageReportDao.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.xiaoju.basetech.entity.CoverageReportEntity'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.xiaoju.basetech.entity.CoverageReportEntity
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:587)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1254)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1103)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:541)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:501)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:760)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.xiaoju.basetech.CodeCovApplication.main(CodeCovApplication.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\demo\super-jacoco-master\target\classes\mapper\CoverageReportDao.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.xiaoju.basetech.entity.CoverageReportEntity'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.xiaoju.basetech.entity.CoverageReportEntity
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:579)
	... 23 common frames omitted
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\demo\super-jacoco-master\target\classes\mapper\CoverageReportDao.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.xiaoju.basetech.entity.CoverageReportEntity'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.xiaoju.basetech.entity.CoverageReportEntity
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:523)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:380)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:547)
	at tk.mybatis.mapper.autoconfigure.MapperAutoConfiguration.sqlSessionFactory(MapperAutoConfiguration.java:155)
	at tk.mybatis.mapper.autoconfigure.MapperAutoConfiguration$$EnhancerBySpringCGLIB$$e3f026d6.CGLIB$sqlSessionFactory$0(<generated>)
	at tk.mybatis.mapper.autoconfigure.MapperAutoConfiguration$$EnhancerBySpringCGLIB$$e3f026d6$$FastClassBySpringCGLIB$$2d1f9c13.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361)
	at tk.mybatis.mapper.autoconfigure.MapperAutoConfiguration$$EnhancerBySpringCGLIB$$e3f026d6.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 24 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.xiaoju.basetech.entity.CoverageReportEntity'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.xiaoju.basetech.entity.CoverageReportEntity
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:120)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:92)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:521)
	... 37 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.xiaoju.basetech.entity.CoverageReportEntity'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.xiaoju.basetech.entity.CoverageReportEntity
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:265)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:252)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElements(XMLMapperBuilder.java:244)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:116)
	... 39 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.xiaoju.basetech.entity.CoverageReportEntity'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.xiaoju.basetech.entity.CoverageReportEntity
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:120)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:149)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 43 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.xiaoju.basetech.entity.CoverageReportEntity
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:200)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:89)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:261)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:116)
	... 45 common frames omitted
2021-04-26 16:51:11,758 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 13828 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 16:51:11,758 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 13828 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 16:51:11,759 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 16:51:11,759 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 16:51:11,759 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 16:51:11,759 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 16:51:11,763 INFO (AbstractApplicationContext.java:590)- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3ef4d98c: startup date [Mon Apr 26 16:51:11 CST 2021]; root of context hierarchy
2021-04-26 16:51:12,509 INFO (PostProcessorRegistrationDelegate.java:328)- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2dff7f3d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-26 16:51:12,643 INFO (TomcatWebServer.java:91)- Tomcat initialized with port(s): 6795 (http)
2021-04-26 16:51:12,643 INFO (DirectJDKLog.java:180)- Initializing ProtocolHandler ["http-nio-6795"]
2021-04-26 16:51:12,644 INFO (DirectJDKLog.java:180)- Starting service [Tomcat]
2021-04-26 16:51:12,644 INFO (DirectJDKLog.java:180)- Starting Servlet Engine: Apache Tomcat/8.5.31
2021-04-26 16:51:12,664 INFO (DirectJDKLog.java:180)- Initializing Spring embedded WebApplicationContext
2021-04-26 16:51:12,665 INFO (ServletWebServerApplicationContext.java:285)- Root WebApplicationContext: initialization completed in 902 ms
2021-04-26 16:51:12,706 INFO (ServletRegistrationBean.java:185)- Servlet dispatcherServlet mapped to [/]
2021-04-26 16:51:12,707 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'characterEncodingFilter' to: [/*]
2021-04-26 16:51:12,707 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-04-26 16:51:12,708 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-04-26 16:51:12,708 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'requestContextFilter' to: [/*]
2021-04-26 16:51:12,925 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/triggerUnitCover],methods=[POST]}" onto public com.xiaoju.basetech.entity.HttpResult<java.lang.Boolean> com.xiaoju.basetech.controller.CodeCovController.triggerUnitCover(com.xiaoju.basetech.entity.UnitCoverRequest)
2021-04-26 16:51:12,926 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getUnitCoverResult],methods=[GET]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getCoverResult(java.lang.String)
2021-04-26 16:51:12,926 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/triggerEnvCov],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<java.lang.Boolean> com.xiaoju.basetech.controller.CodeCovController.triggerEnvCov(com.xiaoju.basetech.entity.EnvCoverRequest)
2021-04-26 16:51:12,927 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getEnvCoverResult],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getEnvCoverResult(java.lang.String)
2021-04-26 16:51:12,927 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getLocalCoverResult],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getEnvLocalCoverResult(com.xiaoju.basetech.entity.LocalHostRequestParam)
2021-04-26 16:51:12,929 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-04-26 16:51:12,930 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-04-26 16:51:12,931 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-04-26 16:51:12,933 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2021-04-26 16:51:12,933 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-04-26 16:51:12,979 INFO (PropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2021-04-26 16:51:13,007 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 16:51:13,072 INFO (RequestMappingHandlerAdapter.java:574)- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3ef4d98c: startup date [Mon Apr 26 16:51:11 CST 2021]; root of context hierarchy
2021-04-26 16:51:13,087 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 16:51:13,087 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 16:51:13,099 INFO (ExceptionHandlerExceptionResolver.java:288)- Detected @ExceptionHandler methods in globalExceptionHandler
2021-04-26 16:51:13,223 INFO (OptionalLiveReloadServer.java:57)- LiveReload server is running on port 35729
2021-04-26 16:51:13,244 INFO (MBeanExporter.java:433)- Registering beans for JMX exposure on startup
2021-04-26 16:51:13,246 INFO (MBeanExporter.java:895)- Bean with name 'dataSource' has been autodetected for JMX exposure
2021-04-26 16:51:13,250 INFO (MBeanExporter.java:668)- Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2021-04-26 16:51:13,252 INFO (DefaultLifecycleProcessor.java:351)- Starting beans in phase 2147483647
2021-04-26 16:51:13,252 INFO (DocumentationPluginsBootstrapper.java:147)- Context refreshed
2021-04-26 16:51:13,253 INFO (DocumentationPluginsBootstrapper.java:150)- Found 1 custom documentation plugin(s)
2021-04-26 16:51:13,259 INFO (ApiListingReferenceScanner.java:41)- Scanning for api listing references
2021-04-26 16:51:13,308 INFO (DirectJDKLog.java:180)- Starting ProtocolHandler ["http-nio-6795"]
2021-04-26 16:51:13,310 INFO (DirectJDKLog.java:180)- Using a shared selector for servlet write/read
2021-04-26 16:51:13,331 INFO (TomcatWebServer.java:206)- Tomcat started on port(s): 6795 (http) with context path ''
2021-04-26 16:51:13,333 INFO (StartupInfoLogger.java:59)- Started CodeCovApplication in 1.627 seconds (JVM running for 2355.1)
2021-04-26 16:51:13,333 INFO (StartupInfoLogger.java:59)- Started CodeCovApplication in 1.627 seconds (JVM running for 2355.1)
2021-04-26 16:51:13,994 INFO (ConditionEvaluationDeltaLoggingListener.java:56)- Condition evaluation unchanged
2021-04-26 16:51:22,844 INFO (AbstractApplicationContext.java:993)- Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3ef4d98c: startup date [Mon Apr 26 16:51:11 CST 2021]; root of context hierarchy
2021-04-26 16:51:22,845 INFO (DefaultLifecycleProcessor.java:366)- Stopping beans in phase 2147483647
2021-04-26 16:51:22,846 INFO (MBeanExporter.java:451)- Unregistering JMX-exposed beans on shutdown
2021-04-26 16:51:22,847 INFO (MBeanRegistrationSupport.java:183)- Unregistering JMX-exposed beans
2021-04-26 16:51:23,723 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 13828 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 16:51:23,723 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 13828 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 16:51:23,723 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 16:51:23,723 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 16:51:23,724 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 16:51:23,724 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 16:51:23,734 INFO (AbstractApplicationContext.java:590)- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@31d16943: startup date [Mon Apr 26 16:51:23 CST 2021]; root of context hierarchy
2021-04-26 16:51:24,554 INFO (PostProcessorRegistrationDelegate.java:328)- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2dff7f3d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-26 16:51:24,672 INFO (TomcatWebServer.java:91)- Tomcat initialized with port(s): 6795 (http)
2021-04-26 16:51:24,673 INFO (DirectJDKLog.java:180)- Initializing ProtocolHandler ["http-nio-6795"]
2021-04-26 16:51:24,673 INFO (DirectJDKLog.java:180)- Starting service [Tomcat]
2021-04-26 16:51:24,674 INFO (DirectJDKLog.java:180)- Starting Servlet Engine: Apache Tomcat/8.5.31
2021-04-26 16:51:24,697 INFO (DirectJDKLog.java:180)- Initializing Spring embedded WebApplicationContext
2021-04-26 16:51:24,699 INFO (ServletWebServerApplicationContext.java:285)- Root WebApplicationContext: initialization completed in 965 ms
2021-04-26 16:51:24,732 INFO (ServletRegistrationBean.java:185)- Servlet dispatcherServlet mapped to [/]
2021-04-26 16:51:24,732 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'characterEncodingFilter' to: [/*]
2021-04-26 16:51:24,732 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-04-26 16:51:24,732 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-04-26 16:51:24,733 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'requestContextFilter' to: [/*]
2021-04-26 16:51:24,990 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/triggerUnitCover],methods=[POST]}" onto public com.xiaoju.basetech.entity.HttpResult<java.lang.Boolean> com.xiaoju.basetech.controller.CodeCovController.triggerUnitCover(com.xiaoju.basetech.entity.UnitCoverRequest)
2021-04-26 16:51:24,990 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getUnitCoverResult],methods=[GET]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getCoverResult(java.lang.String)
2021-04-26 16:51:24,991 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/triggerEnvCov],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<java.lang.Boolean> com.xiaoju.basetech.controller.CodeCovController.triggerEnvCov(com.xiaoju.basetech.entity.EnvCoverRequest)
2021-04-26 16:51:24,992 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getEnvCoverResult],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getEnvCoverResult(java.lang.String)
2021-04-26 16:51:24,992 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getLocalCoverResult],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getEnvLocalCoverResult(com.xiaoju.basetech.entity.LocalHostRequestParam)
2021-04-26 16:51:24,995 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-04-26 16:51:24,995 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-04-26 16:51:24,997 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-04-26 16:51:24,999 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2021-04-26 16:51:24,999 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-04-26 16:51:25,055 INFO (PropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2021-04-26 16:51:25,115 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 16:51:25,191 INFO (RequestMappingHandlerAdapter.java:574)- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@31d16943: startup date [Mon Apr 26 16:51:23 CST 2021]; root of context hierarchy
2021-04-26 16:51:25,206 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 16:51:25,206 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 16:51:25,214 INFO (ExceptionHandlerExceptionResolver.java:288)- Detected @ExceptionHandler methods in globalExceptionHandler
2021-04-26 16:51:25,279 INFO (OptionalLiveReloadServer.java:57)- LiveReload server is running on port 35729
2021-04-26 16:51:25,298 INFO (MBeanExporter.java:433)- Registering beans for JMX exposure on startup
2021-04-26 16:51:25,299 INFO (MBeanExporter.java:895)- Bean with name 'dataSource' has been autodetected for JMX exposure
2021-04-26 16:51:25,303 INFO (MBeanExporter.java:668)- Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2021-04-26 16:51:25,304 INFO (DefaultLifecycleProcessor.java:351)- Starting beans in phase 2147483647
2021-04-26 16:51:25,304 INFO (DocumentationPluginsBootstrapper.java:147)- Context refreshed
2021-04-26 16:51:25,305 INFO (DocumentationPluginsBootstrapper.java:150)- Found 1 custom documentation plugin(s)
2021-04-26 16:51:25,310 INFO (ApiListingReferenceScanner.java:41)- Scanning for api listing references
2021-04-26 16:51:25,352 INFO (DirectJDKLog.java:180)- Starting ProtocolHandler ["http-nio-6795"]
2021-04-26 16:51:25,353 INFO (DirectJDKLog.java:180)- Using a shared selector for servlet write/read
2021-04-26 16:51:25,358 INFO (TomcatWebServer.java:206)- Tomcat started on port(s): 6795 (http) with context path ''
2021-04-26 16:51:25,359 INFO (StartupInfoLogger.java:59)- Started CodeCovApplication in 1.673 seconds (JVM running for 2367.127)
2021-04-26 16:51:25,359 INFO (StartupInfoLogger.java:59)- Started CodeCovApplication in 1.673 seconds (JVM running for 2367.127)
2021-04-26 16:51:25,843 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 19668 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 16:51:25,843 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 19668 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 16:51:25,846 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 16:51:25,846 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 16:51:25,848 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 16:51:25,848 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 16:51:25,975 INFO (ConditionEvaluationDeltaLoggingListener.java:56)- Condition evaluation unchanged
2021-04-26 16:51:26,085 INFO (AbstractApplicationContext.java:590)- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@703de86a: startup date [Mon Apr 26 16:51:26 CST 2021]; root of context hierarchy
2021-04-26 16:51:27,332 INFO (PostProcessorRegistrationDelegate.java:328)- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$82139dcd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-26 16:51:27,721 INFO (TomcatWebServer.java:91)- Tomcat initialized with port(s): 6795 (http)
2021-04-26 16:51:27,735 INFO (DirectJDKLog.java:180)- Initializing ProtocolHandler ["http-nio-6795"]
2021-04-26 16:51:27,747 INFO (DirectJDKLog.java:180)- Starting service [Tomcat]
2021-04-26 16:51:27,747 INFO (DirectJDKLog.java:180)- Starting Servlet Engine: Apache Tomcat/8.5.31
2021-04-26 16:51:27,764 INFO (DirectJDKLog.java:180)- The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\soft\jdk1.8.0_172\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\soft\jdk1.8.0_172\bin;C:\Program Files\Git\cmd;D:/demo/maven/apache-maven-3.6.3\bin;C:\cmder;D:\soft\jdk1.8.0_172\jre\bin;;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\admin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\IntelliJ IDEA 2020.2\bin;C:\Users\admin\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2021-04-26 16:51:27,857 INFO (DirectJDKLog.java:180)- Initializing Spring embedded WebApplicationContext
2021-04-26 16:51:27,858 INFO (ServletWebServerApplicationContext.java:285)- Root WebApplicationContext: initialization completed in 1773 ms
2021-04-26 16:51:28,010 INFO (ServletRegistrationBean.java:185)- Servlet dispatcherServlet mapped to [/]
2021-04-26 16:51:28,014 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'characterEncodingFilter' to: [/*]
2021-04-26 16:51:28,015 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-04-26 16:51:28,015 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-04-26 16:51:28,015 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'requestContextFilter' to: [/*]
2021-04-26 16:51:28,737 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getEnvCoverResult],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getEnvCoverResult(java.lang.String)
2021-04-26 16:51:28,739 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getLocalCoverResult],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getEnvLocalCoverResult(com.xiaoju.basetech.entity.LocalHostRequestParam)
2021-04-26 16:51:28,740 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/triggerEnvCov],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<java.lang.Boolean> com.xiaoju.basetech.controller.CodeCovController.triggerEnvCov(com.xiaoju.basetech.entity.EnvCoverRequest)
2021-04-26 16:51:28,740 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getUnitCoverResult],methods=[GET]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getCoverResult(java.lang.String)
2021-04-26 16:51:28,741 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/triggerUnitCover],methods=[POST]}" onto public com.xiaoju.basetech.entity.HttpResult<java.lang.Boolean> com.xiaoju.basetech.controller.CodeCovController.triggerUnitCover(com.xiaoju.basetech.entity.UnitCoverRequest)
2021-04-26 16:51:28,748 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-04-26 16:51:28,749 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-04-26 16:51:28,749 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-04-26 16:51:28,752 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2021-04-26 16:51:28,753 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-04-26 16:51:28,892 INFO (PropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2021-04-26 16:51:28,986 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 16:51:29,161 INFO (RequestMappingHandlerAdapter.java:574)- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@703de86a: startup date [Mon Apr 26 16:51:26 CST 2021]; root of context hierarchy
2021-04-26 16:51:29,223 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 16:51:29,223 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 16:51:29,239 INFO (ExceptionHandlerExceptionResolver.java:288)- Detected @ExceptionHandler methods in globalExceptionHandler
2021-04-26 16:51:29,533 WARN (OptionalLiveReloadServer.java:61)- Unable to start LiveReload server
2021-04-26 16:51:29,564 INFO (MBeanExporter.java:433)- Registering beans for JMX exposure on startup
2021-04-26 16:51:29,566 INFO (MBeanExporter.java:895)- Bean with name 'dataSource' has been autodetected for JMX exposure
2021-04-26 16:51:29,571 INFO (MBeanExporter.java:668)- Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2021-04-26 16:51:29,576 INFO (DefaultLifecycleProcessor.java:351)- Starting beans in phase 2147483647
2021-04-26 16:51:29,576 INFO (DocumentationPluginsBootstrapper.java:147)- Context refreshed
2021-04-26 16:51:29,591 INFO (DocumentationPluginsBootstrapper.java:150)- Found 1 custom documentation plugin(s)
2021-04-26 16:51:29,626 INFO (ApiListingReferenceScanner.java:41)- Scanning for api listing references
2021-04-26 16:51:29,804 INFO (DirectJDKLog.java:180)- Starting ProtocolHandler ["http-nio-6795"]
2021-04-26 16:51:29,810 ERROR (DirectJDKLog.java:182)- Failed to start connector [Connector[HTTP/1.1-6795]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-6795]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.xiaoju.basetech.CodeCovApplication.main(CodeCovApplication.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 18 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 19 common frames omitted
2021-04-26 16:51:29,814 INFO (DirectJDKLog.java:180)- Pausing ProtocolHandler ["http-nio-6795"]
2021-04-26 16:51:29,815 INFO (DirectJDKLog.java:180)- Stopping service [Tomcat]
2021-04-26 16:51:29,822 INFO (DirectJDKLog.java:180)- The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2021-04-26 16:51:29,822 INFO (DirectJDKLog.java:180)- Stopping ProtocolHandler ["http-nio-6795"]
2021-04-26 16:51:29,822 INFO (DirectJDKLog.java:180)- Destroying ProtocolHandler ["http-nio-6795"]
2021-04-26 16:51:29,827 INFO (ConditionEvaluationReportLoggingListener.java:101)- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-04-26 16:51:29,832 ERROR (LoggingFailureAnalysisReporter.java:42)- 

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 6795 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 6795, or configure this application to listen on another port.

2021-04-26 16:51:29,833 INFO (AbstractApplicationContext.java:993)- Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@703de86a: startup date [Mon Apr 26 16:51:26 CST 2021]; root of context hierarchy
2021-04-26 16:51:29,835 INFO (DefaultLifecycleProcessor.java:366)- Stopping beans in phase 2147483647
2021-04-26 16:51:29,837 INFO (MBeanExporter.java:451)- Unregistering JMX-exposed beans on shutdown
2021-04-26 16:51:29,838 INFO (MBeanRegistrationSupport.java:183)- Unregistering JMX-exposed beans
2021-04-26 16:51:35,363 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 16:51:35,363 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 16:51:35,365 INFO (HikariDataSource.java:110)- HikariPool-4 - Starting...
2021-04-26 16:51:35,390 INFO (HikariDataSource.java:123)- HikariPool-4 - Start completed.
2021-04-26 16:51:35,391 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 16:51:35,391 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 16:51:35,392 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 14:51:35(String)
2021-04-26 16:51:35,392 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 14:51:35(String)
2021-04-26 16:51:35,394 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 16:51:35,394 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 16:51:35,395 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:51:35,395 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:51:35,396 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:51:35,396 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:51:35,400 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:51:35,400 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:51:35,400 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:51:35,400 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:51:45,433 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:51:45,433 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:51:45,433 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:51:45,433 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:51:45,446 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:51:45,446 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:51:45,446 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:51:45,446 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:51:55,452 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:51:55,452 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:51:55,452 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:51:55,452 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:51:55,454 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:51:55,454 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:51:55,454 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:51:55,454 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:52:05,466 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:52:05,466 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:52:05,466 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:52:05,466 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:52:05,468 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:52:05,468 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:52:05,468 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:52:05,468 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:52:15,483 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:52:15,483 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:52:15,484 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:52:15,484 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:52:15,485 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:52:15,485 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:52:15,485 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:52:15,485 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:52:25,489 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:52:25,489 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:52:25,490 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:52:25,490 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:52:25,491 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:52:25,491 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:52:25,492 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:52:25,492 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:52:35,506 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:52:35,506 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:52:35,507 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:52:35,507 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:52:35,508 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:52:35,508 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:52:35,508 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:52:35,508 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:52:45,522 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:52:45,522 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:52:45,523 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:52:45,523 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:52:45,524 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:52:45,524 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:52:45,524 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:52:45,524 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:52:55,541 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:52:55,541 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:52:55,542 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:52:55,542 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:52:55,558 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:52:55,558 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:52:55,566 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:52:55,566 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:53:05,569 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:53:05,569 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:53:05,569 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:53:05,569 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:53:05,570 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:53:05,570 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:53:05,571 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:53:05,571 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:53:15,571 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:53:15,571 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:53:15,572 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:53:15,572 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:53:15,573 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:53:15,573 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:53:15,574 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:53:15,574 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:58:19,591 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 19392 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 16:58:19,591 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 19392 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 16:58:19,594 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 16:58:19,594 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 16:58:19,596 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 16:58:19,596 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 16:58:19,949 INFO (AbstractApplicationContext.java:590)- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d0c0f4: startup date [Mon Apr 26 16:58:19 CST 2021]; root of context hierarchy
2021-04-26 16:58:21,413 INFO (PostProcessorRegistrationDelegate.java:328)- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4b1e4b9d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-26 16:58:21,851 INFO (TomcatWebServer.java:91)- Tomcat initialized with port(s): 6795 (http)
2021-04-26 16:58:21,866 INFO (DirectJDKLog.java:180)- Initializing ProtocolHandler ["http-nio-6795"]
2021-04-26 16:58:21,877 INFO (DirectJDKLog.java:180)- Starting service [Tomcat]
2021-04-26 16:58:21,877 INFO (DirectJDKLog.java:180)- Starting Servlet Engine: Apache Tomcat/8.5.31
2021-04-26 16:58:21,881 INFO (DirectJDKLog.java:180)- The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\soft\jdk1.8.0_172\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\soft\jdk1.8.0_172\bin;C:\Program Files\Git\cmd;D:/demo/maven/apache-maven-3.6.3\bin;C:\cmder;D:\soft\jdk1.8.0_172\jre\bin;;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\admin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\IntelliJ IDEA 2020.2\bin;C:\Users\admin\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2021-04-26 16:58:21,969 INFO (DirectJDKLog.java:180)- Initializing Spring embedded WebApplicationContext
2021-04-26 16:58:21,970 INFO (ServletWebServerApplicationContext.java:285)- Root WebApplicationContext: initialization completed in 2021 ms
2021-04-26 16:58:22,108 INFO (ServletRegistrationBean.java:185)- Servlet dispatcherServlet mapped to [/]
2021-04-26 16:58:22,113 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'characterEncodingFilter' to: [/*]
2021-04-26 16:58:22,114 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-04-26 16:58:22,114 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-04-26 16:58:22,114 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'requestContextFilter' to: [/*]
2021-04-26 16:58:23,005 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getEnvCoverResult],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getEnvCoverResult(java.lang.String)
2021-04-26 16:58:23,007 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getLocalCoverResult],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getEnvLocalCoverResult(com.xiaoju.basetech.entity.LocalHostRequestParam)
2021-04-26 16:58:23,007 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/triggerEnvCov],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<java.lang.Boolean> com.xiaoju.basetech.controller.CodeCovController.triggerEnvCov(com.xiaoju.basetech.entity.EnvCoverRequest)
2021-04-26 16:58:23,008 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getUnitCoverResult],methods=[GET]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getCoverResult(java.lang.String)
2021-04-26 16:58:23,008 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/triggerUnitCover],methods=[POST]}" onto public com.xiaoju.basetech.entity.HttpResult<java.lang.Boolean> com.xiaoju.basetech.controller.CodeCovController.triggerUnitCover(com.xiaoju.basetech.entity.UnitCoverRequest)
2021-04-26 16:58:23,014 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-04-26 16:58:23,015 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-04-26 16:58:23,016 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-04-26 16:58:23,019 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2021-04-26 16:58:23,020 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-04-26 16:58:23,169 INFO (PropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2021-04-26 16:58:23,258 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 16:58:23,426 INFO (RequestMappingHandlerAdapter.java:574)- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d0c0f4: startup date [Mon Apr 26 16:58:19 CST 2021]; root of context hierarchy
2021-04-26 16:58:23,474 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 16:58:23,475 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 16:58:23,489 INFO (ExceptionHandlerExceptionResolver.java:288)- Detected @ExceptionHandler methods in globalExceptionHandler
2021-04-26 16:58:23,736 INFO (OptionalLiveReloadServer.java:57)- LiveReload server is running on port 35729
2021-04-26 16:58:23,782 INFO (MBeanExporter.java:433)- Registering beans for JMX exposure on startup
2021-04-26 16:58:23,784 INFO (MBeanExporter.java:895)- Bean with name 'dataSource' has been autodetected for JMX exposure
2021-04-26 16:58:23,790 INFO (MBeanExporter.java:668)- Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2021-04-26 16:58:23,794 INFO (DefaultLifecycleProcessor.java:351)- Starting beans in phase 2147483647
2021-04-26 16:58:23,794 INFO (DocumentationPluginsBootstrapper.java:147)- Context refreshed
2021-04-26 16:58:23,807 INFO (DocumentationPluginsBootstrapper.java:150)- Found 1 custom documentation plugin(s)
2021-04-26 16:58:23,841 INFO (ApiListingReferenceScanner.java:41)- Scanning for api listing references
2021-04-26 16:58:24,029 INFO (DirectJDKLog.java:180)- Starting ProtocolHandler ["http-nio-6795"]
2021-04-26 16:58:24,040 INFO (DirectJDKLog.java:180)- Using a shared selector for servlet write/read
2021-04-26 16:58:24,054 INFO (TomcatWebServer.java:206)- Tomcat started on port(s): 6795 (http) with context path ''
2021-04-26 16:58:24,059 INFO (StartupInfoLogger.java:59)- Started CodeCovApplication in 4.844 seconds (JVM running for 7.133)
2021-04-26 16:58:24,059 INFO (StartupInfoLogger.java:59)- Started CodeCovApplication in 4.844 seconds (JVM running for 7.133)
2021-04-26 16:58:34,030 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 16:58:34,030 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 16:58:34,052 INFO (HikariDataSource.java:110)- HikariPool-1 - Starting...
2021-04-26 16:58:35,041 INFO (HikariDataSource.java:123)- HikariPool-1 - Start completed.
2021-04-26 16:58:35,049 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 16:58:35,049 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 16:58:35,065 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 14:58:34(String)
2021-04-26 16:58:35,065 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 14:58:34(String)
2021-04-26 16:58:35,067 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 16:58:35,067 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 16:58:35,070 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:58:35,070 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:58:35,071 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:58:35,071 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:58:35,083 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:58:35,083 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:58:35,084 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:58:35,084 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:58:45,094 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:58:45,094 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:58:45,095 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:58:45,095 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:58:45,099 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:58:45,099 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:58:45,100 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:58:45,100 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:58:55,105 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:58:55,105 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:58:55,106 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:58:55,106 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:58:55,108 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:58:55,108 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:58:55,109 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:58:55,109 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:59:05,117 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:59:05,117 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:59:05,117 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:59:05,117 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:59:05,119 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:59:05,119 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:59:05,119 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:59:05,119 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:59:15,125 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:59:15,125 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:59:15,126 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:59:15,126 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:59:15,128 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:59:15,128 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:59:15,128 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:59:15,128 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:59:25,138 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:59:25,138 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:59:25,139 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:59:25,139 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:59:25,141 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:59:25,141 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:59:25,141 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:59:25,141 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:59:35,154 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:59:35,154 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:59:35,154 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:59:35,154 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:59:35,156 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:59:35,156 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:59:35,156 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:59:35,156 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:59:45,161 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:59:45,161 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:59:45,162 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:59:45,162 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:59:45,163 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:59:45,163 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:59:45,164 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:59:45,164 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:59:55,169 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:59:55,169 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 16:59:55,170 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:59:55,170 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 16:59:55,171 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:59:55,171 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 16:59:55,172 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 16:59:55,172 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:00:05,174 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:00:05,174 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:00:05,174 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:00:05,174 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:00:05,176 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:00:05,176 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:00:05,176 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:00:05,176 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:00:15,179 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:00:15,179 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:00:15,180 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:00:15,180 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:00:15,182 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:00:15,182 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:00:15,182 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:00:15,182 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:00:25,189 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:00:25,189 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:00:25,190 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:00:25,190 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:00:25,192 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:00:25,192 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:00:25,192 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:00:25,192 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:00:35,204 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:00:35,204 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:00:35,205 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:00:35,205 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:00:35,207 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:00:35,207 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:00:35,208 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:00:35,208 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:00:45,223 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:00:45,223 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:00:45,223 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:00:45,223 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:00:45,225 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:00:45,225 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:00:45,225 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:00:45,225 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:00:55,241 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:00:55,241 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:00:55,242 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:00:55,242 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:00:55,243 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:00:55,243 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:00:55,244 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:00:55,244 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:01:05,249 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:01:05,249 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:01:05,249 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:01:05,249 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:01:05,252 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:01:05,252 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:01:05,254 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:01:05,254 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:01:15,263 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:01:15,263 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:01:15,264 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:01:15,264 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:01:15,265 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:01:15,265 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:01:15,266 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:01:15,266 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:01:25,280 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:01:25,280 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:01:25,281 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:01:25,281 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:01:25,282 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:01:25,282 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:01:25,283 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:01:25,283 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:01:35,290 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:01:35,290 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:01:35,290 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:01:35,290 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:01:35,291 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:01:35,291 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:01:35,292 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:01:35,292 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:01:45,309 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:01:45,309 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:01:45,310 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:01:45,310 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:01:45,311 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:01:45,311 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:01:45,312 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:01:45,312 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:01:55,328 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:01:55,328 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:01:55,328 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:01:55,328 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:01:55,329 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:01:55,329 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:01:55,330 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:01:55,330 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:02:05,341 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:02:05,341 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:02:05,342 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:02:05,342 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:02:05,343 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:02:05,343 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:02:05,344 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:02:05,344 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:02:15,359 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:02:15,359 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:02:15,360 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:02:15,360 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:02:15,361 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:02:15,361 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:02:15,362 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:02:15,362 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:02:25,368 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:02:25,368 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:02:25,369 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:02:25,369 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:02:25,371 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:02:25,371 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:02:25,372 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:02:25,372 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:02:35,387 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:02:35,387 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:02:35,388 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:02:35,388 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:02:35,389 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:02:35,389 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:02:35,390 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:02:35,390 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:02:45,395 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:02:45,395 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:02:45,396 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:02:45,396 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:02:45,397 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:02:45,397 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:02:45,397 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:02:45,397 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:02:55,399 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:02:55,399 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:02:55,399 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:02:55,399 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:02:55,401 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:02:55,401 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:02:55,401 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:02:55,401 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:03:05,404 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:03:05,404 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:03:05,405 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:03:05,405 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:03:05,406 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:03:05,406 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:03:05,407 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:03:05,407 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:03:15,420 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:03:15,420 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:03:15,421 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:03:15,421 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:03:15,423 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:03:15,423 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:03:15,423 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:03:15,423 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:03:24,026 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:03:24,026 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:03:24,027 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 17:03:24,027 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 17:03:24,028 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:03:24,028 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:03:24,029 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 17:03:24,029 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 17:03:25,430 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:03:25,430 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:03:25,430 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:03:25,430 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:03:25,431 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:03:25,431 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:03:25,432 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:03:25,432 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:03:35,441 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:03:35,441 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:03:35,441 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:03:35,441 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:03:35,442 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:03:35,442 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:03:35,442 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:03:35,442 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:03:45,454 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:03:45,454 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:03:45,455 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:03:45,455 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:03:45,456 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:03:45,456 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:03:45,457 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:03:45,457 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:03:55,467 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:03:55,467 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:03:55,467 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:03:55,467 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:03:55,469 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:03:55,469 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:03:55,470 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:03:55,470 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:04:05,486 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:04:05,486 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:04:05,487 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:04:05,487 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:04:05,488 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:04:05,488 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:04:05,488 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:04:05,488 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:04:15,504 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:04:15,504 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:04:15,504 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:04:15,504 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:04:15,506 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:04:15,506 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:04:15,507 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:04:15,507 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:04:25,523 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:04:25,523 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:04:25,523 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:04:25,523 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:04:25,524 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:04:25,524 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:04:25,525 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:04:25,525 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:04:35,534 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:04:35,534 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:04:35,534 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:04:35,534 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:04:35,535 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:04:35,535 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:04:35,536 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:04:35,536 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:04:45,553 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:04:45,553 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:04:45,553 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:04:45,553 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:04:45,555 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:04:45,555 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:04:45,555 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:04:45,555 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:04:55,571 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:04:55,571 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:04:55,571 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:04:55,571 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:04:55,572 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:04:55,572 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:04:55,573 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:04:55,573 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:05:05,580 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:05:05,580 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:05:05,581 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:05:05,581 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:05:05,582 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:05:05,582 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:05:05,582 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:05:05,582 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:05:15,586 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:05:15,586 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:05:15,587 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:05:15,587 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:05:15,588 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:05:15,588 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:05:15,589 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:05:15,589 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:05:25,605 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:05:25,605 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:05:25,605 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:05:25,605 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:05:25,606 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:05:25,606 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:05:25,607 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:05:25,607 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:05:35,624 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:05:35,624 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:05:35,624 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:05:35,624 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:05:35,626 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:05:35,626 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:05:35,626 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:05:35,626 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:05:45,631 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:05:45,631 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:05:45,632 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:05:45,632 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:05:45,633 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:05:45,633 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:05:45,634 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:05:45,634 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:05:55,637 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:05:55,637 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:05:55,638 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:05:55,638 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:05:55,639 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:05:55,639 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:05:55,640 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:05:55,640 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:06:05,653 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:06:05,653 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:06:05,654 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:06:05,654 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:06:05,655 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:06:05,655 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:06:05,655 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:06:05,655 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:06:15,669 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:06:15,669 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:06:15,669 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:06:15,669 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:06:15,670 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:06:15,670 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:06:15,670 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:06:15,670 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:06:25,676 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:06:25,676 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:06:25,677 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:06:25,677 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:06:25,678 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:06:25,678 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:06:25,679 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:06:25,679 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:06:35,686 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:06:35,686 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:06:35,687 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:06:35,687 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:06:35,688 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:06:35,688 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:06:35,689 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:06:35,689 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:06:45,705 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:06:45,705 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:06:45,706 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:06:45,706 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:06:45,707 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:06:45,707 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:06:45,707 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:06:45,707 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:06:55,718 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:06:55,718 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:06:55,718 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:06:55,718 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:06:55,719 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:06:55,719 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:06:55,720 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:06:55,720 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:07:05,735 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:07:05,735 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:07:05,735 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:07:05,735 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:07:05,736 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:07:05,736 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:07:05,736 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:07:05,736 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:07:15,751 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:07:15,751 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:07:15,751 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:07:15,751 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:07:15,752 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:07:15,752 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:07:15,752 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:07:15,752 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:07:25,765 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:07:25,765 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:07:25,765 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:07:25,765 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:07:25,766 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:07:25,766 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:07:25,767 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:07:25,767 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:07:35,781 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:07:35,781 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:07:35,782 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:07:35,782 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:07:35,783 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:07:35,783 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:07:35,784 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:07:35,784 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:07:45,798 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:07:45,798 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:07:45,799 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:07:45,799 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:07:45,800 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:07:45,800 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:07:45,800 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:07:45,800 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:07:55,811 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:07:55,811 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:07:55,812 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:07:55,812 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:07:55,813 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:07:55,813 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:07:55,813 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:07:55,813 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:08:05,818 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:08:05,818 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:08:05,818 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:08:05,818 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:08:05,819 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:08:05,819 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:08:05,820 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:08:05,820 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:08:15,825 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:08:15,825 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:08:15,826 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:08:15,826 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:08:15,827 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:08:15,827 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:08:15,828 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:08:15,828 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:08:24,034 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:08:24,034 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:08:24,034 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 17:08:24,034 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 17:08:24,035 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:08:24,035 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:08:24,035 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 17:08:24,035 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 17:08:25,837 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:08:25,837 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:08:25,838 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:08:25,838 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:08:25,839 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:08:25,839 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:08:25,840 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:08:25,840 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:08:35,070 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 17:08:35,070 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 17:08:35,071 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 17:08:35,071 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 17:08:35,071 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 15:08:35(String)
2021-04-26 17:08:35,071 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 15:08:35(String)
2021-04-26 17:08:35,073 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 17:08:35,073 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 17:08:35,868 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:08:35,868 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:08:35,868 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:08:35,868 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:08:35,877 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:08:35,877 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:08:35,877 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:08:35,877 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:08:45,884 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:08:45,884 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:08:45,885 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:08:45,885 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:08:45,888 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:08:45,888 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:08:45,888 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:08:45,888 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:08:55,891 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:08:55,891 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:08:55,892 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:08:55,892 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:08:55,893 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:08:55,893 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:08:55,894 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:08:55,894 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:09:05,907 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:09:05,907 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:09:05,907 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:09:05,907 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:09:05,908 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:09:05,908 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:09:05,909 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:09:05,909 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:09:15,917 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:09:15,917 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:09:15,917 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:09:15,917 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:09:15,919 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:09:15,919 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:09:15,919 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:09:15,919 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:09:25,925 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:09:25,925 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:09:25,925 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:09:25,925 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:09:25,926 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:09:25,926 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:09:25,927 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:09:25,927 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:09:35,934 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:09:35,934 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:09:35,934 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:09:35,934 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:09:35,935 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:09:35,935 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:09:35,935 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:09:35,935 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:09:45,954 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:09:45,954 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:09:45,954 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:09:45,954 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:09:45,960 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:09:45,960 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:09:45,960 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:09:45,960 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:09:55,966 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:09:55,966 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:09:55,967 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:09:55,967 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:09:55,968 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:09:55,968 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:09:55,968 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:09:55,968 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:10:05,970 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:10:05,970 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:10:05,971 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:10:05,971 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:10:05,972 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:10:05,972 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:10:05,972 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:10:05,972 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:10:15,988 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:10:15,988 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:10:15,988 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:10:15,988 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:10:15,989 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:10:15,989 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:10:15,990 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:10:15,990 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:10:26,008 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:10:26,008 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:10:26,009 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:10:26,009 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:10:26,010 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:10:26,010 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:10:26,010 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:10:26,010 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:10:36,020 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:10:36,020 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:10:36,020 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:10:36,020 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:10:36,022 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:10:36,022 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:10:36,022 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:10:36,022 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:10:46,039 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:10:46,039 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:10:46,040 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:10:46,040 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:10:46,041 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:10:46,041 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:10:46,042 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:10:46,042 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:10:56,043 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:10:56,043 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:10:56,044 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:10:56,044 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:10:56,045 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:10:56,045 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:10:56,046 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:10:56,046 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:11:06,061 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:11:06,061 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:11:06,062 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:11:06,062 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:11:06,063 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:11:06,063 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:11:06,064 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:11:06,064 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:11:16,069 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:11:16,069 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:11:16,069 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:11:16,069 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:11:16,071 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:11:16,071 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:11:16,071 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:11:16,071 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:11:26,077 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:11:26,077 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:11:26,077 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:11:26,077 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:11:26,085 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:11:26,085 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:11:26,086 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:11:26,086 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:11:36,093 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:11:36,093 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:11:36,093 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:11:36,093 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:11:36,095 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:11:36,095 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:11:36,095 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:11:36,095 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:11:46,102 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:11:46,102 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:11:46,102 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:11:46,102 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:11:46,106 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:11:46,106 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:11:46,106 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:11:46,106 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:11:56,114 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:11:56,114 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:11:56,114 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:11:56,114 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:11:56,115 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:11:56,115 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:11:56,116 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:11:56,116 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:12:06,121 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:12:06,121 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:12:06,121 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:12:06,121 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:12:06,123 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:12:06,123 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:12:06,123 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:12:06,123 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:12:16,138 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:12:16,138 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:12:16,138 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:12:16,138 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:12:16,140 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:12:16,140 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:12:16,140 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:12:16,140 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:12:26,150 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:12:26,150 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:12:26,150 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:12:26,150 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:12:26,152 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:12:26,152 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:12:26,152 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:12:26,152 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:12:36,164 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:12:36,164 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:12:36,164 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:12:36,164 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:12:36,166 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:12:36,166 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:12:36,166 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:12:36,166 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:12:46,183 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:12:46,183 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:12:46,183 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:12:46,183 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:12:46,185 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:12:46,185 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:12:46,186 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:12:46,186 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:12:56,191 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:12:56,191 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:12:56,192 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:12:56,192 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:12:56,193 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:12:56,193 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:12:56,193 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:12:56,193 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:13:06,208 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:13:06,208 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:13:06,208 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:13:06,208 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:13:06,210 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:13:06,210 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:13:06,210 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:13:06,210 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:13:16,221 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:13:16,221 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:13:16,221 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:13:16,221 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:13:16,223 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:13:16,223 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:13:16,223 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:13:16,223 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:13:24,047 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:13:24,047 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:13:24,047 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 17:13:24,047 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 17:13:24,048 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:13:24,048 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:13:24,049 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 17:13:24,049 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 17:13:26,239 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:13:26,239 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:13:26,240 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:13:26,240 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:13:26,243 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:13:26,243 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:13:26,243 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:13:26,243 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:13:36,251 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:13:36,251 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:13:36,251 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:13:36,251 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:13:36,253 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:13:36,253 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:13:36,253 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:13:36,253 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:13:46,269 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:13:46,269 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:13:46,270 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:13:46,270 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:13:46,271 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:13:46,271 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:13:46,271 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:13:46,271 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:13:56,288 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:13:56,288 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:13:56,289 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:13:56,289 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:13:56,290 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:13:56,290 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:13:56,290 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:13:56,290 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:14:06,294 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:14:06,294 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:14:06,294 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:14:06,294 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:14:06,296 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:14:06,296 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:14:06,296 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:14:06,296 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:14:16,312 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:14:16,312 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:14:16,312 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:14:16,312 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:14:16,313 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:14:16,313 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:14:16,314 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:14:16,314 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:14:26,323 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:14:26,323 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:14:26,323 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:14:26,323 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:14:26,325 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:14:26,325 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:14:26,326 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:14:26,326 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:14:36,342 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:14:36,342 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:14:36,342 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:14:36,342 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:14:36,343 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:14:36,343 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:14:36,344 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:14:36,344 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:14:40,022 INFO (DirectJDKLog.java:180)- Initializing Spring FrameworkServlet 'dispatcherServlet'
2021-04-26 17:14:40,022 INFO (FrameworkServlet.java:494)- FrameworkServlet 'dispatcherServlet': initialization started
2021-04-26 17:14:40,048 INFO (FrameworkServlet.java:509)- FrameworkServlet 'dispatcherServlet': initialization completed in 26 ms
2021-04-26 17:14:40,202 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: INSERT INTO diff_coverage_report( `job_record_uuid`, `request_status`, `type`, `giturl`, `err_msg`, `sub_module`, `base_version`, `now_version`, `now_local_path` , `base_local_path`, `from` )VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-04-26 17:14:40,202 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: INSERT INTO diff_coverage_report( `job_record_uuid`, `request_status`, `type`, `giturl`, `err_msg`, `sub_module`, `base_version`, `now_version`, `now_local_path` , `base_local_path`, `from` )VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-04-26 17:14:40,207 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 123456(String), 1(Integer), 1(Integer), https://git.qiweioa.cn/hnnh/do1cloud-ask.git(String), (String), (String), master(String), testjacoco(String), (String), (String), 2(Integer)
2021-04-26 17:14:40,207 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 123456(String), 1(Integer), 1(Integer), https://git.qiweioa.cn/hnnh/do1cloud-ask.git(String), (String), (String), master(String), testjacoco(String), (String), (String), 2(Integer)
2021-04-26 17:14:40,211 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 17:14:40,211 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 17:14:40,212 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: INSERT INTO diff_deploy_info( `job_record_uuid`, `address`, `port` )VALUES ( ?, ?, ? ) 
2021-04-26 17:14:40,212 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: INSERT INTO diff_deploy_info( `job_record_uuid`, `address`, `port` )VALUES ( ?, ?, ? ) 
2021-04-26 17:14:40,213 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 123456(String), 127.0.0.1(String), 18513(Integer)
2021-04-26 17:14:40,213 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 123456(String), 127.0.0.1(String), 18513(Integer)
2021-04-26 17:14:40,216 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 17:14:40,216 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 17:14:40,219 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 17:14:40,219 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 17:14:40,220 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), (String), (String), 123456(String)
2021-04-26 17:14:40,220 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), (String), (String), 123456(String)
2021-04-26 17:14:40,230 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 17:14:40,230 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 17:14:40,725 INFO (CodeCloneExecutor.java:45)- uuid 123456开始下载代码...
2021-04-26 17:14:40,725 INFO (CodeCloneExecutor.java:45)- uuid 123456开始下载代码...
2021-04-26 17:14:46,352 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:14:46,352 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:14:46,352 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:14:46,352 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:14:46,354 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:14:46,354 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:14:46,355 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:14:46,355 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:14:55,790 INFO (CodeCloneExecutor.java:52)- uuid 123456完成下载代码...
2021-04-26 17:14:55,790 INFO (CodeCloneExecutor.java:52)- uuid 123456完成下载代码...
2021-04-26 17:14:55,791 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 17:14:55,791 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 17:14:55,792 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 102(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), http://172.21.96.1:8899/logs/123456.log(String), C:\Users\admin/app/super_jacoco/clonecode/123456/testjacoco(String), 123456(String)
2021-04-26 17:14:55,792 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 102(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), http://172.21.96.1:8899/logs/123456.log(String), C:\Users\admin/app/super_jacoco/clonecode/123456/testjacoco(String), 123456(String)
2021-04-26 17:14:55,794 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 17:14:55,794 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 17:14:55,794 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 17:14:55,794 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 17:14:55,795 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 3(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), http://172.21.96.1:8899/logs/123456.log(String), C:\Users\admin/app/super_jacoco/clonecode/123456/testjacoco(String), 123456(String)
2021-04-26 17:14:55,795 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 3(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), http://172.21.96.1:8899/logs/123456.log(String), C:\Users\admin/app/super_jacoco/clonecode/123456/testjacoco(String), 123456(String)
2021-04-26 17:14:55,797 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 17:14:55,797 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 17:14:56,246 INFO (CmdExecutor.java:43)- CmdThreadPool:java.util.concurrent.ThreadPoolExecutor@7cdfdff7[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]
2021-04-26 17:14:56,246 INFO (CmdExecutor.java:43)- CmdThreadPool:java.util.concurrent.ThreadPoolExecutor@7cdfdff7[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]
2021-04-26 17:14:56,246 INFO (CmdExecutor.java:48)- executeCmd : bash -c cd C:\Users\admin/app/super_jacoco/clonecode/123456/testjacoco&&mvn clean compile >>C:\Users\admin/report/logs/123456.log
2021-04-26 17:14:56,246 INFO (CmdExecutor.java:48)- executeCmd : bash -c cd C:\Users\admin/app/super_jacoco/clonecode/123456/testjacoco&&mvn clean compile >>C:\Users\admin/report/logs/123456.log
2021-04-26 17:14:56,368 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:14:56,368 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:14:56,369 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:14:56,369 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:14:56,370 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:14:56,370 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:14:56,370 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:14:56,370 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:14:56,436 INFO (CmdExecutor.java:101)- /bin/bash: line 0: cd: C:Usersadmin/app/super_jacoco/clonecode/123456/testjacoco: No such file or directory
2021-04-26 17:14:57,036 INFO (CmdExecutor.java:56)- readLine.stop();
2021-04-26 17:14:57,036 INFO (CmdExecutor.java:56)- readLine.stop();
2021-04-26 17:14:57,036 INFO (CmdExecutor.java:58)- progressBar.stop();
2021-04-26 17:14:57,036 INFO (CmdExecutor.java:58)- progressBar.stop();
2021-04-26 17:14:57,036 INFO (CmdExecutor.java:59)- executeCmd done !!!!!!
2021-04-26 17:14:57,036 INFO (CmdExecutor.java:59)- executeCmd done !!!!!!
2021-04-26 17:14:57,036 INFO (CmdExecutor.java:60)- worker done !!!!!! times = 0s
2021-04-26 17:14:57,036 INFO (CmdExecutor.java:60)- worker done !!!!!! times = 0s
2021-04-26 17:14:57,037 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 17:14:57,037 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 17:14:57,038 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 203(Integer), 编译代码出错(String), -1.0(Double), -1.0(Double), (String), (String), http://172.21.96.1:8899/logs/123456.log(String), C:\Users\admin/app/super_jacoco/clonecode/123456/testjacoco(String), 123456(String)
2021-04-26 17:14:57,038 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 203(Integer), 编译代码出错(String), -1.0(Double), -1.0(Double), (String), (String), http://172.21.96.1:8899/logs/123456.log(String), C:\Users\admin/app/super_jacoco/clonecode/123456/testjacoco(String), 123456(String)
2021-04-26 17:14:57,042 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 17:14:57,042 DEBUG (BaseJdbcLogger.java:18计算覆盖率具体步骤...编译失败1)- <==    Updates: 1
2021-04-26 17:14:57,043 INFO (CodeCovServiceImpl.java:252)- Thread-25计算覆盖率具体步骤...编译失败uuid=123456
2021-04-26 17:14:57,043 INFO (CodeCovServiceImpl.java:252)- Thread-25计算覆盖率具体步骤...编译失败uuid=123456
2021-04-26 17:14:57,043 INFO (CodeCovServiceImpl.java:309)- Thread-25计算覆盖率具体步骤...编译失败uuid=123456
2021-04-26 17:14:57,043 INFO (CodeCovServiceImpl.java:309)- Thread-25计算覆盖率具体步骤...编译失败uuid=123456
2021-04-26 17:15:06,378 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:15:06,378 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:15:06,378 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:15:06,378 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:15:06,380 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:15:06,380 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:15:06,380 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:15:06,380 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:15:16,394 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:15:16,394 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:15:16,394 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:15:16,394 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:15:16,396 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:15:16,396 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:15:16,397 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:15:16,397 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:15:26,419 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:15:26,419 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:15:26,420 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:15:26,420 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:15:26,422 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:15:26,422 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:15:26,422 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:15:26,422 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:15:36,436 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:15:36,436 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:15:36,437 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:15:36,437 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:15:36,438 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:15:36,438 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:15:36,438 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:15:36,438 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:15:46,450 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:15:46,450 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:15:46,451 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:15:46,451 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:15:46,452 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:15:46,452 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:15:46,452 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:15:46,452 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:15:56,467 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:15:56,467 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:15:56,468 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:15:56,468 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:15:56,469 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:15:56,469 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:15:56,469 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:15:56,469 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:16:06,485 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:16:06,485 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:16:06,485 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:16:06,485 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:16:06,486 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:16:06,486 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:16:06,486 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:16:06,486 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:16:16,502 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:16:16,502 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:16:16,502 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:16:16,502 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:16:16,504 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:16:16,504 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:16:16,504 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:16:16,504 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:16:26,521 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:16:26,521 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:16:26,521 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:16:26,521 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:16:26,526 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:16:26,526 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:16:26,526 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:16:26,526 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:16:36,535 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:16:36,535 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:16:36,536 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:16:36,536 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:16:36,537 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:16:36,537 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:16:36,537 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:16:36,537 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:16:46,551 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:16:46,551 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:16:46,551 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:16:46,551 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:16:46,553 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:16:46,553 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:16:46,553 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:16:46,553 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:16:56,560 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:16:56,560 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:16:56,560 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:16:56,560 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:16:56,563 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:16:56,563 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:16:56,563 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:16:56,563 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:17:06,577 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:17:06,577 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:17:06,577 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:17:06,577 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:17:06,579 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:17:06,579 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:17:06,579 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:17:06,579 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:17:16,583 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:17:16,583 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:17:16,583 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:17:16,583 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:17:16,585 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:17:16,585 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:17:16,585 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:17:16,585 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:17:26,591 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:17:26,591 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:17:26,592 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:17:26,592 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:17:26,595 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:17:26,595 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:17:26,596 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:17:26,596 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:17:36,598 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:17:36,598 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:17:36,598 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:17:36,598 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:17:36,600 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:17:36,600 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:17:36,601 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:17:36,601 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:17:46,616 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:17:46,616 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:17:46,618 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:17:46,618 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:17:46,618 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:17:46,618 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:17:46,618 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:17:46,618 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:17:56,624 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:17:56,624 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:17:56,624 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:17:56,624 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:17:56,625 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:17:56,625 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:17:56,626 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:17:56,626 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:18:06,644 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:18:06,644 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:18:06,644 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:18:06,644 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:18:06,645 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:18:06,645 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:18:06,645 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:18:06,645 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:18:16,657 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:18:16,657 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:18:16,657 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:18:16,657 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:18:16,659 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:18:16,659 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:18:16,659 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:18:16,659 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:18:24,054 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:18:24,054 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:18:24,054 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 17:18:24,054 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 17:18:24,056 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:18:24,056 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:18:24,056 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 17:18:24,056 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 17:18:26,667 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:18:26,667 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:18:26,668 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:18:26,668 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:18:26,669 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:18:26,669 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:18:26,670 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:18:26,670 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:18:35,079 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 17:18:35,079 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 17:18:35,084 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 17:18:35,084 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 17:18:35,084 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 15:18:35(String)
2021-04-26 17:18:35,084 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 15:18:35(String)
2021-04-26 17:18:35,086 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 17:18:35,086 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 17:18:36,674 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:18:36,674 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:18:36,674 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:18:36,674 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:18:36,675 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:18:36,675 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:18:36,676 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:18:36,676 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:18:46,686 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:18:46,686 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:18:46,687 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:18:46,687 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:18:46,688 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:18:46,688 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:18:46,689 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:18:46,689 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:18:56,700 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:18:56,700 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:18:56,700 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:18:56,700 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:18:56,701 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:18:56,701 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:18:56,702 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:18:56,702 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:19:06,709 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:19:06,709 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:19:06,710 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:19:06,710 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:19:06,712 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:19:06,712 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:19:06,713 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:19:06,713 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:19:16,728 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:19:16,728 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:19:16,728 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:19:16,728 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:19:16,729 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:19:16,729 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:19:16,729 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:19:16,729 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:19:26,737 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:19:26,737 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:19:26,738 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:19:26,738 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:19:26,740 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:19:26,740 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:19:26,741 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:19:26,741 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:19:36,752 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:19:36,752 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:19:36,752 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:19:36,752 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:19:36,753 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:19:36,753 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:19:36,753 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:19:36,753 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:19:46,768 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:19:46,768 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:19:46,768 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:19:46,768 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:19:46,770 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:19:46,770 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:19:46,770 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:19:46,770 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:19:56,776 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:19:56,776 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:19:56,776 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:19:56,776 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:19:56,777 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:19:56,777 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:19:56,777 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:19:56,777 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:20:06,785 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:20:06,785 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:20:06,785 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:20:06,785 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:20:06,786 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:20:06,786 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:20:06,787 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:20:06,787 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:20:16,792 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:20:16,792 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:20:16,793 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:20:16,793 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:20:16,795 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:20:16,795 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:20:16,795 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:20:16,795 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:20:20,181 ERROR (GlobalExceptionHandler.java:28)- {}
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:198)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:376)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:316)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:62)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:350)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1188)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:964)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-04-26 17:20:20,181 ERROR (GlobalExceptionHandler.java:28)- {}
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:198)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:376)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:316)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:62)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:350)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1188)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:964)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-04-26 17:20:20,192 WARN (AbstractHandlerExceptionResolver.java:192)- Resolved exception caused by Handler execution: org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported
2021-04-26 17:20:26,802 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:20:26,802 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:20:26,803 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:20:26,803 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:20:26,804 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:20:26,804 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:20:26,804 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:20:26,804 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:20:36,821 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:20:36,821 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:20:36,821 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:20:36,821 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:20:36,822 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:20:36,822 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:20:36,822 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:20:36,822 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:20:38,943 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * FROM diff_coverage_report WHERE `job_record_uuid`=? limit 1 
2021-04-26 17:20:38,943 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * FROM diff_coverage_report WHERE `job_record_uuid`=? limit 1 
2021-04-26 17:20:38,943 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: '123456'(String)
2021-04-26 17:20:38,943 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: '123456'(String)
2021-04-26 17:20:38,944 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:20:38,944 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:20:46,834 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:20:46,834 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:20:46,834 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:20:46,834 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:20:46,836 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:20:46,836 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:20:46,836 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:20:46,836 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:20:56,852 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:20:56,852 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:20:56,852 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:20:56,852 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:20:56,853 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:20:56,853 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:20:56,853 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:20:56,853 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:21:06,865 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:21:06,865 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:21:06,865 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:21:06,865 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:21:06,867 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:21:06,867 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:21:06,867 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:21:06,867 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:21:16,874 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:21:16,874 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:21:16,874 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:21:16,874 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:21:16,876 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:21:16,876 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:21:16,877 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:21:16,877 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:21:26,884 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:21:26,884 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:21:26,884 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:21:26,884 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:21:26,886 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:21:26,886 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:21:26,886 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:21:26,886 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:21:36,899 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:21:36,899 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:21:36,899 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:21:36,899 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:21:36,901 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:21:36,901 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:21:36,902 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:21:36,902 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:21:46,903 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:21:46,903 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:21:46,904 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:21:46,904 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:21:46,908 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:21:46,908 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:21:46,908 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:21:46,908 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:21:56,923 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:21:56,923 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:21:56,923 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:21:56,923 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:21:56,925 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:21:56,925 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:21:56,925 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:21:56,925 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:22:06,939 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:22:06,939 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:22:06,939 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:22:06,939 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:22:06,940 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:22:06,940 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:22:06,941 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:22:06,941 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:22:16,946 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:22:16,946 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:22:16,946 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:22:16,946 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:22:16,947 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:22:16,947 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:22:16,948 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:22:16,948 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:22:26,963 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:22:26,963 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:22:26,963 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:22:26,963 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:22:26,965 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:22:26,965 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:22:26,965 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:22:26,965 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:22:36,979 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:22:36,979 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:22:36,980 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:22:36,980 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:22:36,981 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:22:36,981 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:22:36,981 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:22:36,981 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:22:46,993 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:22:46,993 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:22:46,994 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:22:46,994 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:22:46,995 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:22:46,995 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:22:46,996 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:22:46,996 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:22:57,007 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:22:57,007 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:22:57,007 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:22:57,007 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:22:57,008 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:22:57,008 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:22:57,009 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:22:57,009 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:23:07,021 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:23:07,021 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:23:07,021 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:23:07,021 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:23:07,023 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:23:07,023 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:23:07,023 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:23:07,023 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:23:17,025 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:23:17,025 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:23:17,025 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:23:17,025 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:23:17,027 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:23:17,027 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:23:17,027 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:23:17,027 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:23:24,064 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:23:24,064 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:23:24,065 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 17:23:24,065 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 17:23:24,066 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:23:24,066 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:23:24,066 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 17:23:24,066 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 17:23:27,039 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:23:27,039 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:23:27,039 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:23:27,039 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:23:27,041 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:23:27,041 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:23:27,041 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:23:27,041 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:23:37,054 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:23:37,054 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:23:37,055 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:23:37,055 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:23:37,056 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:23:37,056 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:23:37,056 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:23:37,056 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:23:47,067 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:23:47,067 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:23:47,068 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:23:47,068 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:23:47,069 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:23:47,069 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:23:47,070 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:23:47,070 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:23:57,075 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:23:57,075 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:23:57,075 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:23:57,075 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:23:57,077 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:23:57,077 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:23:57,078 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:23:57,078 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:24:07,086 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:24:07,086 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:24:07,086 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:24:07,086 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:24:07,088 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:24:07,088 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:24:07,088 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:24:07,088 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:24:17,105 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:24:17,105 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:24:17,105 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:24:17,105 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:24:17,107 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:24:17,107 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:24:17,107 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:24:17,107 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:24:27,125 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:24:27,125 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:24:27,125 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:24:27,125 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:24:27,127 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:24:27,127 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:24:27,127 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:24:27,127 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:24:37,139 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:24:37,139 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:24:37,140 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:24:37,140 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:24:37,141 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:24:37,141 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:24:37,141 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:24:37,141 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:24:47,150 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:24:47,150 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:24:47,151 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:24:47,151 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:24:47,154 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:24:47,154 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:24:47,155 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:24:47,155 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:24:57,165 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:24:57,165 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:24:57,165 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:24:57,165 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:24:57,167 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:24:57,167 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:24:57,167 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:24:57,167 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:25:07,192 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:25:07,192 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:25:07,193 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:25:07,193 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:25:07,207 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:25:07,207 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:25:07,207 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:25:07,207 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:25:17,209 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:25:17,209 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:25:17,210 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:25:17,210 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:25:17,211 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:25:17,211 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:25:17,211 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:25:17,211 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:25:27,215 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:25:27,215 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:25:27,215 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:25:27,215 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:25:27,216 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:25:27,216 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:25:27,217 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:25:27,217 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:25:37,219 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:25:37,219 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:25:37,219 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:25:37,219 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:25:37,221 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:25:37,221 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:25:37,222 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:25:37,222 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:25:47,238 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:25:47,238 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:25:47,239 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:25:47,239 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:25:47,240 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:25:47,240 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:25:47,240 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:25:47,240 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:25:57,243 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:25:57,243 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:25:57,243 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:25:57,243 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:25:57,244 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:25:57,244 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:25:57,245 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:25:57,245 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:26:25,048 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 20844 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 17:26:25,048 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 20844 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 17:26:25,050 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 17:26:25,050 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 17:26:25,052 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 17:26:25,052 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 17:26:25,325 INFO (AbstractApplicationContext.java:590)- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@41d13bc3: startup date [Mon Apr 26 17:26:25 CST 2021]; root of context hierarchy
2021-04-26 17:26:26,557 INFO (PostProcessorRegistrationDelegate.java:328)- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9aa0b55e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-26 17:26:26,983 INFO (TomcatWebServer.java:91)- Tomcat initialized with port(s): 6795 (http)
2021-04-26 17:26:26,994 INFO (DirectJDKLog.java:180)- Initializing ProtocolHandler ["http-nio-6795"]
2021-04-26 17:26:27,003 INFO (DirectJDKLog.java:180)- Starting service [Tomcat]
2021-04-26 17:26:27,004 INFO (DirectJDKLog.java:180)- Starting Servlet Engine: Apache Tomcat/8.5.31
2021-04-26 17:26:27,008 INFO (DirectJDKLog.java:180)- The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\soft\jdk1.8.0_172\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\soft\jdk1.8.0_172\bin;C:\Program Files\Git\cmd;D:/demo/maven/apache-maven-3.6.3\bin;C:\cmder;D:\soft\jdk1.8.0_172\jre\bin;;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\admin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\IntelliJ IDEA 2020.2\bin;C:\Users\admin\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2021-04-26 17:26:27,096 INFO (DirectJDKLog.java:180)- Initializing Spring embedded WebApplicationContext
2021-04-26 17:26:27,096 INFO (ServletWebServerApplicationContext.java:285)- Root WebApplicationContext: initialization completed in 1771 ms
2021-04-26 17:26:27,238 INFO (ServletRegistrationBean.java:185)- Servlet dispatcherServlet mapped to [/]
2021-04-26 17:26:27,242 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'characterEncodingFilter' to: [/*]
2021-04-26 17:26:27,243 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-04-26 17:26:27,243 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-04-26 17:26:27,243 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'requestContextFilter' to: [/*]
2021-04-26 17:26:27,976 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getEnvCoverResult],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getEnvCoverResult(java.lang.String)
2021-04-26 17:26:27,977 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getLocalCoverResult],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getEnvLocalCoverResult(com.xiaoju.basetech.entity.LocalHostRequestParam)
2021-04-26 17:26:27,978 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/triggerUnitCover],methods=[POST]}" onto public com.xiaoju.basetech.entity.HttpResult<java.lang.Boolean> com.xiaoju.basetech.controller.CodeCovController.triggerUnitCover(com.xiaoju.basetech.entity.UnitCoverRequest)
2021-04-26 17:26:27,979 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/triggerEnvCov],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<java.lang.Boolean> com.xiaoju.basetech.controller.CodeCovController.triggerEnvCov(com.xiaoju.basetech.entity.EnvCoverRequest)
2021-04-26 17:26:27,979 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getUnitCoverResult],methods=[GET]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getCoverResult(java.lang.String)
2021-04-26 17:26:27,985 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-04-26 17:26:27,986 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-04-26 17:26:27,987 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-04-26 17:26:27,991 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2021-04-26 17:26:27,991 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-04-26 17:26:28,121 INFO (PropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2021-04-26 17:26:28,205 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 17:26:28,376 INFO (RequestMappingHandlerAdapter.java:574)- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@41d13bc3: startup date [Mon Apr 26 17:26:25 CST 2021]; root of context hierarchy
2021-04-26 17:26:28,424 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 17:26:28,424 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 17:26:28,440 INFO (ExceptionHandlerExceptionResolver.java:288)- Detected @ExceptionHandler methods in globalExceptionHandler
2021-04-26 17:26:28,685 INFO (OptionalLiveReloadServer.java:57)- LiveReload server is running on port 35729
2021-04-26 17:26:28,713 INFO (MBeanExporter.java:433)- Registering beans for JMX exposure on startup
2021-04-26 17:26:28,715 INFO (MBeanExporter.java:895)- Bean with name 'dataSource' has been autodetected for JMX exposure
2021-04-26 17:26:28,721 INFO (MBeanExporter.java:668)- Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2021-04-26 17:26:28,725 INFO (DefaultLifecycleProcessor.java:351)- Starting beans in phase 2147483647
2021-04-26 17:26:28,725 INFO (DocumentationPluginsBootstrapper.java:147)- Context refreshed
2021-04-26 17:26:28,739 INFO (DocumentationPluginsBootstrapper.java:150)- Found 1 custom documentation plugin(s)
2021-04-26 17:26:28,769 INFO (ApiListingReferenceScanner.java:41)- Scanning for api listing references
2021-04-26 17:26:28,935 INFO (DirectJDKLog.java:180)- Starting ProtocolHandler ["http-nio-6795"]
2021-04-26 17:26:28,945 INFO (DirectJDKLog.java:180)- Using a shared selector for servlet write/read
2021-04-26 17:26:28,963 INFO (TomcatWebServer.java:206)- Tomcat started on port(s): 6795 (http) with context path ''
2021-04-26 17:26:28,967 INFO (StartupInfoLogger.java:59)- Started CodeCovApplication in 4.189 seconds (JVM running for 5.53)
2021-04-26 17:26:28,967 INFO (StartupInfoLogger.java:59)- Started CodeCovApplication in 4.189 seconds (JVM running for 5.53)
2021-04-26 17:26:38,944 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 17:26:38,944 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 17:26:38,965 INFO (HikariDataSource.java:110)- HikariPool-1 - Starting...
2021-04-26 17:26:39,811 INFO (HikariDataSource.java:123)- HikariPool-1 - Start completed.
2021-04-26 17:26:39,820 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 17:26:39,820 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 17:26:39,839 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 15:26:38(String)
2021-04-26 17:26:39,839 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 15:26:38(String)
2021-04-26 17:26:39,841 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 17:26:39,841 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 17:26:39,844 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:26:39,844 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:26:39,845 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:26:39,845 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:26:39,858 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:26:39,858 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:26:39,859 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:26:39,859 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:26:49,861 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:26:49,861 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:26:49,862 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:26:49,862 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:26:49,864 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:26:49,864 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:26:49,864 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:26:49,864 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:26:59,872 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:26:59,872 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:26:59,873 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:26:59,873 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:26:59,874 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:26:59,874 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:26:59,875 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:26:59,875 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:27:09,880 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:27:09,880 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:27:09,880 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:27:09,880 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:27:09,881 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:27:09,881 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:27:09,882 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:27:09,882 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:27:19,885 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:27:19,885 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:27:19,885 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:27:19,885 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:27:19,887 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:27:19,887 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:27:19,888 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:27:19,888 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:27:29,895 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:27:29,895 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:27:29,896 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:27:29,896 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:27:29,897 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:27:29,897 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:27:29,898 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:27:29,898 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:27:39,902 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:27:39,902 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:27:39,902 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:27:39,902 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:27:39,904 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:27:39,904 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:27:39,904 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:27:39,904 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:27:49,921 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:27:49,921 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:27:49,922 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:27:49,922 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:27:49,923 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:27:49,923 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:27:49,924 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:27:49,924 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:27:59,940 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:27:59,940 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:27:59,941 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:27:59,941 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:27:59,943 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:27:59,943 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:27:59,944 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:27:59,944 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:28:09,959 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:28:09,959 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:28:09,959 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:28:09,959 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:28:09,962 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:28:09,962 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:28:09,962 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:28:09,962 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:28:19,972 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:28:19,972 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:28:19,973 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:28:19,973 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:28:19,976 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:28:19,976 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:28:19,977 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:28:19,977 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:28:29,986 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:28:29,986 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:28:29,986 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:28:29,986 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:28:29,988 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:28:29,988 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:28:29,988 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:28:29,988 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:28:40,002 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:28:40,002 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:28:40,003 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:28:40,003 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:28:40,005 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:28:40,005 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:28:40,006 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:28:40,006 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:28:50,008 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:28:50,008 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:28:50,008 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:28:50,008 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:28:50,010 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:28:50,010 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:28:50,010 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:28:50,010 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:29:00,017 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:29:00,017 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:29:00,018 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:29:00,018 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:29:00,020 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:29:00,020 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:29:00,021 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:29:00,021 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:29:10,024 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:29:10,024 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:29:10,025 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:29:10,025 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:29:10,028 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:29:10,028 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:29:10,029 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:29:10,029 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:29:20,049 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:29:20,049 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:29:20,049 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:29:20,049 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:29:20,051 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:29:20,051 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:29:20,051 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:29:20,051 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:29:30,053 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:29:30,053 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:29:30,053 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:29:30,053 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:29:30,054 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:29:30,054 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:29:30,055 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:29:30,055 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:29:35,215 INFO (DirectJDKLog.java:180)- Initializing Spring FrameworkServlet 'dispatcherServlet'
2021-04-26 17:29:35,215 INFO (FrameworkServlet.java:494)- FrameworkServlet 'dispatcherServlet': initialization started
2021-04-26 17:29:35,241 INFO (FrameworkServlet.java:509)- FrameworkServlet 'dispatcherServlet': initialization completed in 26 ms
2021-04-26 17:29:35,417 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: INSERT INTO diff_coverage_report( `job_record_uuid`, `request_status`, `type`, `giturl`, `err_msg`, `sub_module`, `base_version`, `now_version`, `now_local_path` , `base_local_path`, `from` )VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-04-26 17:29:35,417 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: INSERT INTO diff_coverage_report( `job_record_uuid`, `request_status`, `type`, `giturl`, `err_msg`, `sub_module`, `base_version`, `now_version`, `now_local_path` , `base_local_path`, `from` )VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-04-26 17:29:35,423 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 123456(String), 1(Integer), 1(Integer), https://git.qiweioa.cn/hnnh/do1cloud-ask.git(String), (String), (String), master(String), testjacoco(String), (String), (String), 2(Integer)
2021-04-26 17:29:35,423 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 123456(String), 1(Integer), 1(Integer), https://git.qiweioa.cn/hnnh/do1cloud-ask.git(String), (String), (String), master(String), testjacoco(String), (String), (String), 2(Integer)
2021-04-26 17:29:35,425 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 17:29:35,425 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 17:29:35,426 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: INSERT INTO diff_deploy_info( `job_record_uuid`, `address`, `port` )VALUES ( ?, ?, ? ) 
2021-04-26 17:29:35,426 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: INSERT INTO diff_deploy_info( `job_record_uuid`, `address`, `port` )VALUES ( ?, ?, ? ) 
2021-04-26 17:29:35,428 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 123456(String), 127.0.0.1(String), 18513(Integer)
2021-04-26 17:29:35,428 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 123456(String), 127.0.0.1(String), 18513(Integer)
2021-04-26 17:29:35,434 INFO (XmlBeanDefinitionReader.java:316)- Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2021-04-26 17:29:35,485 INFO (SQLErrorCodesFactory.java:128)- SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2021-04-26 17:29:35,490 ERROR (GlobalExceptionHandler.java:40)- {}
com.xiaoju.basetech.entity.ResponseException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '123456' for key 'PRIMARY'
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO diff_deploy_info(         `job_record_uuid`,         `address`,         `port`         )VALUES (         ?,         ?,         ?         )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '123456' for key 'PRIMARY'
; ]; Duplicate entry '123456' for key 'PRIMARY'; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '123456' for key 'PRIMARY'
	at com.xiaoju.basetech.service.impl.CodeCovServiceImpl.triggerEnvCov(CodeCovServiceImpl.java:322)
	at com.xiaoju.basetech.controller.CodeCovController.triggerEnvCov(CodeCovController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-04-26 17:29:35,490 ERROR (GlobalExceptionHandler.java:40)- {}
com.xiaoju.basetech.entity.ResponseException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '123456' for key 'PRIMARY'
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO diff_deploy_info(         `job_record_uuid`,         `address`,         `port`         )VALUES (         ?,         ?,         ?         )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '123456' for key 'PRIMARY'
; ]; Duplicate entry '123456' for key 'PRIMARY'; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '123456' for key 'PRIMARY'
	at com.xiaoju.basetech.service.impl.CodeCovServiceImpl.triggerEnvCov(CodeCovServiceImpl.java:322)
	at com.xiaoju.basetech.controller.CodeCovController.triggerEnvCov(CodeCovController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-04-26 17:29:35,491 WARN (ExceptionHandlerExceptionResolver.java:411)- Failed to invoke @ExceptionHandler method: com.xiaoju.basetech.entity.HttpResult com.xiaoju.basetech.config.GlobalExceptionHandler.handleResponseException(com.xiaoju.basetech.entity.ResponseException)
java.lang.NullPointerException: null
	at com.xiaoju.basetech.config.GlobalExceptionHandler.handleResponseException(GlobalExceptionHandler.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-04-26 17:29:35,498 ERROR (DirectJDKLog.java:182)- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.xiaoju.basetech.entity.ResponseException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '123456' for key 'PRIMARY'
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO diff_deploy_info(         `job_record_uuid`,         `address`,         `port`         )VALUES (         ?,         ?,         ?         )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '123456' for key 'PRIMARY'
; ]; Duplicate entry '123456' for key 'PRIMARY'; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '123456' for key 'PRIMARY'] with root cause
com.xiaoju.basetech.entity.ResponseException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '123456' for key 'PRIMARY'
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO diff_deploy_info(         `job_record_uuid`,         `address`,         `port`         )VALUES (         ?,         ?,         ?         )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '123456' for key 'PRIMARY'
; ]; Duplicate entry '123456' for key 'PRIMARY'; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '123456' for key 'PRIMARY'
	at com.xiaoju.basetech.service.impl.CodeCovServiceImpl.triggerEnvCov(CodeCovServiceImpl.java:322)
	at com.xiaoju.basetech.controller.CodeCovController.triggerEnvCov(CodeCovController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-04-26 17:29:40,061 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:29:40,061 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:29:40,062 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:29:40,062 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:29:40,064 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:29:40,064 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:29:40,064 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:29:40,064 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:29:50,070 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:29:50,070 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:29:50,070 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:29:50,070 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:29:50,072 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:29:50,072 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:29:50,072 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:29:50,072 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:30:00,081 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:30:00,081 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:30:00,081 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:30:00,081 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:30:00,082 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:30:00,082 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:30:00,083 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:30:00,083 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:30:10,098 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:30:10,098 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:30:10,099 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:30:10,099 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:30:10,100 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:30:10,100 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:30:10,101 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:30:10,101 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:30:20,115 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:30:20,115 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:30:20,116 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:30:20,116 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:30:20,117 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:30:20,117 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:30:20,118 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:30:20,118 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:30:30,125 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:30:30,125 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:30:30,126 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:30:30,126 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:30:30,127 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:30:30,127 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:30:30,128 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:30:30,128 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:30:40,141 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:30:40,141 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:30:40,141 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:30:40,141 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:30:40,144 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:30:40,144 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:30:40,145 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:30:40,145 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:30:50,154 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:30:50,154 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:30:50,154 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:30:50,154 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:30:50,155 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:30:50,155 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:30:50,156 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:30:50,156 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:31:00,167 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:31:00,167 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:31:00,168 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:31:00,168 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:31:00,172 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:31:00,172 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:31:00,172 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:31:00,172 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:31:10,187 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:31:10,187 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 17:31:10,187 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:31:10,187 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 17:31:10,188 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:31:10,188 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 17:31:10,189 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 17:31:10,189 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:01:26,607 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 14668 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 19:01:26,607 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 14668 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 19:01:26,611 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 19:01:26,611 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 19:01:26,614 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 19:01:26,614 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 19:01:27,009 INFO (AbstractApplicationContext.java:590)- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@d3d30c3: startup date [Mon Apr 26 19:01:27 CST 2021]; root of context hierarchy
2021-04-26 19:01:29,144 INFO (PostProcessorRegistrationDelegate.java:328)- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$84fdd654] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-26 19:01:29,844 INFO (TomcatWebServer.java:91)- Tomcat initialized with port(s): 6795 (http)
2021-04-26 19:01:29,871 INFO (DirectJDKLog.java:180)- Initializing ProtocolHandler ["http-nio-6795"]
2021-04-26 19:01:29,908 INFO (DirectJDKLog.java:180)- Starting service [Tomcat]
2021-04-26 19:01:29,908 INFO (DirectJDKLog.java:180)- Starting Servlet Engine: Apache Tomcat/8.5.31
2021-04-26 19:01:29,916 INFO (DirectJDKLog.java:180)- The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\soft\jdk1.8.0_172\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\soft\jdk1.8.0_172\bin;C:\Program Files\Git\cmd;D:/demo/maven/apache-maven-3.6.3\bin;C:\cmder;D:\soft\jdk1.8.0_172\jre\bin;;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\admin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\IntelliJ IDEA 2020.2\bin;C:\Users\admin\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2021-04-26 19:01:30,067 INFO (DirectJDKLog.java:180)- Initializing Spring embedded WebApplicationContext
2021-04-26 19:01:30,067 INFO (ServletWebServerApplicationContext.java:285)- Root WebApplicationContext: initialization completed in 3058 ms
2021-04-26 19:01:30,303 INFO (ServletRegistrationBean.java:185)- Servlet dispatcherServlet mapped to [/]
2021-04-26 19:01:30,310 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'characterEncodingFilter' to: [/*]
2021-04-26 19:01:30,310 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-04-26 19:01:30,311 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-04-26 19:01:30,311 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'requestContextFilter' to: [/*]
2021-04-26 19:01:31,524 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getEnvCoverResult],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getEnvCoverResult(java.lang.String)
2021-04-26 19:01:31,525 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getLocalCoverResult],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getEnvLocalCoverResult(com.xiaoju.basetech.entity.LocalHostRequestParam)
2021-04-26 19:01:31,526 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/triggerEnvCov],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<java.lang.Boolean> com.xiaoju.basetech.controller.CodeCovController.triggerEnvCov(com.xiaoju.basetech.entity.EnvCoverRequest)
2021-04-26 19:01:31,527 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/triggerUnitCover],methods=[POST]}" onto public com.xiaoju.basetech.entity.HttpResult<java.lang.Boolean> com.xiaoju.basetech.controller.CodeCovController.triggerUnitCover(com.xiaoju.basetech.entity.UnitCoverRequest)
2021-04-26 19:01:31,527 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getUnitCoverResult],methods=[GET]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getCoverResult(java.lang.String)
2021-04-26 19:01:31,534 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-04-26 19:01:31,536 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-04-26 19:01:31,537 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-04-26 19:01:31,540 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2021-04-26 19:01:31,541 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-04-26 19:01:31,771 INFO (PropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2021-04-26 19:01:31,943 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 19:01:32,181 INFO (RequestMappingHandlerAdapter.java:574)- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@d3d30c3: startup date [Mon Apr 26 19:01:27 CST 2021]; root of context hierarchy
2021-04-26 19:01:32,265 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 19:01:32,266 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 19:01:32,291 INFO (ExceptionHandlerExceptionResolver.java:288)- Detected @ExceptionHandler methods in globalExceptionHandler
2021-04-26 19:01:32,808 INFO (OptionalLiveReloadServer.java:57)- LiveReload server is running on port 35729
2021-04-26 19:01:32,846 INFO (MBeanExporter.java:433)- Registering beans for JMX exposure on startup
2021-04-26 19:01:32,849 INFO (MBeanExporter.java:895)- Bean with name 'dataSource' has been autodetected for JMX exposure
2021-04-26 19:01:32,856 INFO (MBeanExporter.java:668)- Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2021-04-26 19:01:32,861 INFO (DefaultLifecycleProcessor.java:351)- Starting beans in phase 2147483647
2021-04-26 19:01:32,862 INFO (DocumentationPluginsBootstrapper.java:147)- Context refreshed
2021-04-26 19:01:32,879 INFO (DocumentationPluginsBootstrapper.java:150)- Found 1 custom documentation plugin(s)
2021-04-26 19:01:32,930 INFO (ApiListingReferenceScanner.java:41)- Scanning for api listing references
2021-04-26 19:01:33,200 INFO (DirectJDKLog.java:180)- Starting ProtocolHandler ["http-nio-6795"]
2021-04-26 19:01:33,212 INFO (DirectJDKLog.java:180)- Using a shared selector for servlet write/read
2021-04-26 19:01:33,233 INFO (TomcatWebServer.java:206)- Tomcat started on port(s): 6795 (http) with context path ''
2021-04-26 19:01:33,239 INFO (StartupInfoLogger.java:59)- Started CodeCovApplication in 7.19 seconds (JVM running for 10.479)
2021-04-26 19:01:33,239 INFO (StartupInfoLogger.java:59)- Started CodeCovApplication in 7.19 seconds (JVM running for 10.479)
2021-04-26 19:01:43,186 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 19:01:43,186 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 19:01:43,248 INFO (HikariDataSource.java:110)- HikariPool-1 - Starting...
2021-04-26 19:01:44,789 INFO (HikariDataSource.java:123)- HikariPool-1 - Start completed.
2021-04-26 19:01:44,819 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 19:01:44,819 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 19:01:44,843 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 17:01:43(String)
2021-04-26 19:01:44,843 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 17:01:43(String)
2021-04-26 19:01:44,850 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 19:01:44,850 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 19:01:44,852 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:01:44,852 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:01:44,853 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:01:44,853 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:01:44,870 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:01:44,870 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:01:44,871 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:01:44,871 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:01:54,880 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:01:54,880 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:01:54,881 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:01:54,881 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:01:54,887 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:01:54,887 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:01:54,888 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:01:54,888 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:01:56,486 INFO (DirectJDKLog.java:180)- Initializing Spring FrameworkServlet 'dispatcherServlet'
2021-04-26 19:01:56,487 INFO (FrameworkServlet.java:494)- FrameworkServlet 'dispatcherServlet': initialization started
2021-04-26 19:01:56,520 INFO (FrameworkServlet.java:509)- FrameworkServlet 'dispatcherServlet': initialization completed in 33 ms
2021-04-26 19:01:56,786 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: INSERT INTO diff_coverage_report( `job_record_uuid`, `request_status`, `type`, `giturl`, `err_msg`, `sub_module`, `base_version`, `now_version`, `now_local_path` , `base_local_path`, `from` )VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-04-26 19:01:56,786 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: INSERT INTO diff_coverage_report( `job_record_uuid`, `request_status`, `type`, `giturl`, `err_msg`, `sub_module`, `base_version`, `now_version`, `now_local_path` , `base_local_path`, `from` )VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-04-26 19:01:56,792 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 1234567(String), 1(Integer), 1(Integer), https://git.qiweioa.cn/hnnh/do1cloud-ask.git(String), (String), (String), master(String), testjacoco(String), (String), (String), 2(Integer)
2021-04-26 19:01:56,792 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 1234567(String), 1(Integer), 1(Integer), https://git.qiweioa.cn/hnnh/do1cloud-ask.git(String), (String), (String), master(String), testjacoco(String), (String), (String), 2(Integer)
2021-04-26 19:01:56,800 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:01:56,800 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:01:56,801 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: INSERT INTO diff_deploy_info( `job_record_uuid`, `address`, `port` )VALUES ( ?, ?, ? ) 
2021-04-26 19:01:56,801 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: INSERT INTO diff_deploy_info( `job_record_uuid`, `address`, `port` )VALUES ( ?, ?, ? ) 
2021-04-26 19:01:56,802 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 1234567(String), 127.0.0.1(String), 18513(Integer)
2021-04-26 19:01:56,802 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 1234567(String), 127.0.0.1(String), 18513(Integer)
2021-04-26 19:01:56,815 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:01:56,815 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:01:56,817 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 19:01:56,817 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 19:01:56,818 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), (String), (String), 1234567(String)
2021-04-26 19:01:56,818 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), (String), (String), 1234567(String)
2021-04-26 19:01:56,854 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:01:56,854 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:01:57,481 INFO (CodeCloneExecutor.java:45)- uuid 1234567开始下载代码...
2021-04-26 19:01:57,481 INFO (CodeCloneExecutor.java:45)- uuid 1234567开始下载代码...
2021-04-26 19:02:04,908 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:02:04,908 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:02:04,909 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:02:04,909 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:02:04,911 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:02:04,911 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:02:04,911 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:02:04,911 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:02:14,919 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:02:14,919 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:02:14,920 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:02:14,920 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:02:14,923 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:02:14,923 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:02:14,923 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:02:14,923 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:02:24,387 INFO (CodeCloneExecutor.java:52)- uuid 1234567完成下载代码...
2021-04-26 19:02:24,387 INFO (CodeCloneExecutor.java:52)- uuid 1234567完成下载代码...
2021-04-26 19:02:24,392 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 19:02:24,392 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 19:02:24,393 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 102(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), http://172.21.96.1:8899/logs/1234567.log(String), C:\Users\admin/app/super_jacoco/clonecode/1234567/testjacoco(String), 1234567(String)
2021-04-26 19:02:24,393 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 102(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), http://172.21.96.1:8899/logs/1234567.log(String), C:\Users\admin/app/super_jacoco/clonecode/1234567/testjacoco(String), 1234567(String)
2021-04-26 19:02:24,403 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:02:24,403 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:02:24,404 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 19:02:24,404 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 19:02:24,404 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 3(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), http://172.21.96.1:8899/logs/1234567.log(String), C:\Users\admin/app/super_jacoco/clonecode/1234567/testjacoco(String), 1234567(String)
2021-04-26 19:02:24,404 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 3(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), http://172.21.96.1:8899/logs/1234567.log(String), C:\Users\admin/app/super_jacoco/clonecode/1234567/testjacoco(String), 1234567(String)
2021-04-26 19:02:24,418 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:02:24,418 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:02:56,853 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:02:56,853 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:02:56,854 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:02:56,854 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:02:56,863 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:02:56,863 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:02:56,864 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:02:56,864 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:03:32,661 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:03:32,661 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:03:32,663 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:03:32,663 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:04:13,449 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:04:13,449 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:04:13,449 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:04:13,449 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:04:24,550 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:04:24,550 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:04:28,934 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:04:28,934 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:04:33,161 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:04:33,161 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:04:33,773 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:04:33,773 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:04:37,425 INFO (CmdExecutor.java:43)- CmdThreadPool:java.util.concurrent.ThreadPoolExecutor@1c8661ca[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]
2021-04-26 19:04:37,425 INFO (CmdExecutor.java:43)- CmdThreadPool:java.util.concurrent.ThreadPoolExecutor@1c8661ca[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]
2021-04-26 19:04:52,149 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:04:52,149 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:04:52,150 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:04:52,150 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:04:52,158 INFO (CmdExecutor.java:48)- executeCmd : bash -c cd C:\Users\admin/app/super_jacoco/clonecode/1234567/testjacoco&&mvn clean compile >>C:\Users\admin/report/logs/1234567.log
2021-04-26 19:04:52,158 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:04:52,158 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:04:52,159 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:04:52,159 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:04:52,158 INFO (CmdExecutor.java:48)- executeCmd : bash -c cd C:\Users\admin/app/super_jacoco/clonecode/1234567/testjacoco&&mvn clean compile >>C:\Users\admin/report/logs/1234567.log
2021-04-26 19:05:04,119 INFO (CmdExecutor.java:101)- /bin/bash: line 0: cd: C:Usersadmin/app/super_jacoco/clonecode/1234567/testjacoco: No such file or directory
2021-04-26 19:05:06,582 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:05:06,582 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:05:06,585 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:05:06,585 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:05:09,977 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:05:09,977 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:05:09,978 INFO (CmdExecutor.java:56)- readLine.stop();
2021-04-26 19:05:09,979 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:05:09,979 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:05:09,978 INFO (CmdExecutor.java:56)- readLine.stop();
2021-04-26 19:05:11,480 INFO (CmdExecutor.java:58)- progressBar.stop();
2021-04-26 19:05:11,480 INFO (CmdExecutor.java:58)- progressBar.stop();
2021-04-26 19:05:14,734 INFO (CmdExecutor.java:59)- executeCmd done !!!!!!
2021-04-26 19:05:14,734 INFO (CmdExecutor.java:59)- executeCmd done !!!!!!
2021-04-26 19:05:17,932 INFO (CmdExecutor.java:60)- worker done !!!!!! times = 13s
2021-04-26 19:05:17,932 INFO (CmdExecutor.java:60)- worker done !!!!!! times = 13s
2021-04-26 19:05:22,632 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:05:22,632 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:05:25,174 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:05:25,174 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:05:38,061 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:05:38,061 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:12:03,849 WARN (HikariPool.java:758)- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=6m45s920ms924µs899ns).
2021-04-26 19:12:03,850 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 19:12:03,850 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 19:12:03,851 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:12:03,851 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:12:03,863 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 19:12:03,863 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 19:12:03,863 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:12:03,863 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 17:12:03(String)
2021-04-26 19:12:03,863 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 17:12:03(String)
2021-04-26 19:12:03,863 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:12:03,864 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 19:12:03,864 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 19:12:03,864 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 19:12:03,864 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 19:12:03,865 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 203(Integer), 编译代码出错(String), -1.0(Double), -1.0(Double), (String), (String), http://172.21.96.1:8899/logs/1234567.log(String), C:\Users\admin/app/super_jacoco/clonecode/1234567/testjacoco(String), 1234567(String)
2021-04-26 19:12:03,865 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 203(Integer), 编译代码出错(String), -1.0(Double), -1.0(Double), (String), (String), http://172.21.96.1:8899/logs/1234567.log(String), C:\Users\admin/app/super_jacoco/clonecode/1234567/testjacoco(String), 1234567(String)
2021-04-26 19:12:03,873 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:12:03,873 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:12:03,874 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 19:12:03,874 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 19:12:03,878 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 19:12:03,878 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 19:12:03,879 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:12:03,879 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:12:03,880 INFO (CodeCovServiceImpl.java:252)- Thread-30计算覆盖率具体步骤...编译失败uuid=1234567
2021-04-26 19:12:03,880 INFO (CodeCovServiceImpl.java:252)- Thread-30计算覆盖率具体步骤...编译失败uuid=1234567
2021-04-26 19:12:03,880 INFO (CodeCovServiceImpl.java:309)- Thread-30计算覆盖率具体步骤...编译失败uuid=1234567
2021-04-26 19:12:03,880 INFO (CodeCovServiceImpl.java:309)- Thread-30计算覆盖率具体步骤...编译失败uuid=1234567
2021-04-26 19:12:03,883 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: INSERT INTO diff_coverage_report( `job_record_uuid`, `request_status`, `type`, `giturl`, `err_msg`, `sub_module`, `base_version`, `now_version`, `now_local_path` , `base_local_path`, `from` )VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-04-26 19:12:03,883 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: INSERT INTO diff_coverage_report( `job_record_uuid`, `request_status`, `type`, `giturl`, `err_msg`, `sub_module`, `base_version`, `now_version`, `now_local_path` , `base_local_path`, `from` )VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-04-26 19:12:03,884 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 123456(String), 1(Integer), 1(Integer), https://git.qiweioa.cn/hnnh/do1cloud-ask.git(String), (String), (String), master(String), testjacoco(String), (String), (String), 2(Integer)
2021-04-26 19:12:03,884 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 123456(String), 1(Integer), 1(Integer), https://git.qiweioa.cn/hnnh/do1cloud-ask.git(String), (String), (String), master(String), testjacoco(String), (String), (String), 2(Integer)
2021-04-26 19:12:03,938 INFO (XmlBeanDefinitionReader.java:316)- Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2021-04-26 19:12:04,145 INFO (SQLErrorCodesFactory.java:128)- SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2021-04-26 19:12:04,163 ERROR (GlobalExceptionHandler.java:40)- {}
com.xiaoju.basetech.entity.ResponseException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '123456' for key 'PRIMARY'
### The error may involve com.xiaoju.basetech.dao.CoverageReportDao.insertCoverageReportById-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO diff_coverage_report(         `job_record_uuid`,         `request_status`,         `type`,         `giturl`,         `err_msg`,         `sub_module`,         `base_version`,         `now_version`,         `now_local_path` ,         `base_local_path`,         `from`         )VALUES (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?         )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '123456' for key 'PRIMARY'
; ]; Duplicate entry '123456' for key 'PRIMARY'; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '123456' for key 'PRIMARY'
	at com.xiaoju.basetech.service.impl.CodeCovServiceImpl.triggerEnvCov(CodeCovServiceImpl.java:322)
	at com.xiaoju.basetech.controller.CodeCovController.triggerEnvCov(CodeCovController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-04-26 19:12:04,163 ERROR (GlobalExceptionHandler.java:40)- {}
com.xiaoju.basetech.entity.ResponseException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '123456' for key 'PRIMARY'
### The error may involve com.xiaoju.basetech.dao.CoverageReportDao.insertCoverageReportById-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO diff_coverage_report(         `job_record_uuid`,         `request_status`,         `type`,         `giturl`,         `err_msg`,         `sub_module`,         `base_version`,         `now_version`,         `now_local_path` ,         `base_local_path`,         `from`         )VALUES (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?         )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '123456' for key 'PRIMARY'
; ]; Duplicate entry '123456' for key 'PRIMARY'; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '123456' for key 'PRIMARY'
	at com.xiaoju.basetech.service.impl.CodeCovServiceImpl.triggerEnvCov(CodeCovServiceImpl.java:322)
	at com.xiaoju.basetech.controller.CodeCovController.triggerEnvCov(CodeCovController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-04-26 19:12:04,164 WARN (ExceptionHandlerExceptionResolver.java:411)- Failed to invoke @ExceptionHandler method: com.xiaoju.basetech.entity.HttpResult com.xiaoju.basetech.config.GlobalExceptionHandler.handleResponseException(com.xiaoju.basetech.entity.ResponseException)
java.lang.NullPointerException: null
	at com.xiaoju.basetech.config.GlobalExceptionHandler.handleResponseException(GlobalExceptionHandler.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-04-26 19:12:04,248 ERROR (DirectJDKLog.java:182)- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.xiaoju.basetech.entity.ResponseException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '123456' for key 'PRIMARY'
### The error may involve com.xiaoju.basetech.dao.CoverageReportDao.insertCoverageReportById-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO diff_coverage_report(         `job_record_uuid`,         `request_status`,         `type`,         `giturl`,         `err_msg`,         `sub_module`,         `base_version`,         `now_version`,         `now_local_path` ,         `base_local_path`,         `from`         )VALUES (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?         )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '123456' for key 'PRIMARY'
; ]; Duplicate entry '123456' for key 'PRIMARY'; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '123456' for key 'PRIMARY'] with root cause
com.xiaoju.basetech.entity.ResponseException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '123456' for key 'PRIMARY'
### The error may involve com.xiaoju.basetech.dao.CoverageReportDao.insertCoverageReportById-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO diff_coverage_report(         `job_record_uuid`,         `request_status`,         `type`,         `giturl`,         `err_msg`,         `sub_module`,         `base_version`,         `now_version`,         `now_local_path` ,         `base_local_path`,         `from`         )VALUES (         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?,         ?         )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '123456' for key 'PRIMARY'
; ]; Duplicate entry '123456' for key 'PRIMARY'; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '123456' for key 'PRIMARY'
	at com.xiaoju.basetech.service.impl.CodeCovServiceImpl.triggerEnvCov(CodeCovServiceImpl.java:322)
	at com.xiaoju.basetech.controller.CodeCovController.triggerEnvCov(CodeCovController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-04-26 19:12:14,089 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:12:14,089 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:12:14,089 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:12:14,089 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:12:14,095 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:12:14,095 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:12:14,095 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:12:14,095 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:12:24,117 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:12:24,117 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:12:24,118 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:12:24,118 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:12:24,127 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:12:24,127 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:12:24,127 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:12:24,127 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:12:25,112 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: INSERT INTO diff_coverage_report( `job_record_uuid`, `request_status`, `type`, `giturl`, `err_msg`, `sub_module`, `base_version`, `now_version`, `now_local_path` , `base_local_path`, `from` )VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-04-26 19:12:25,112 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: INSERT INTO diff_coverage_report( `job_record_uuid`, `request_status`, `type`, `giturl`, `err_msg`, `sub_module`, `base_version`, `now_version`, `now_local_path` , `base_local_path`, `from` )VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-04-26 19:12:25,113 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 123456(String), 1(Integer), 1(Integer), https://git.qiweioa.cn/hnnh/do1cloud-ask.git(String), (String), (String), master(String), testjacoco(String), (String), (String), 2(Integer)
2021-04-26 19:12:25,113 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 123456(String), 1(Integer), 1(Integer), https://git.qiweioa.cn/hnnh/do1cloud-ask.git(String), (String), (String), master(String), testjacoco(String), (String), (String), 2(Integer)
2021-04-26 19:12:25,130 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:12:25,130 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:12:25,131 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: INSERT INTO diff_deploy_info( `job_record_uuid`, `address`, `port` )VALUES ( ?, ?, ? ) 
2021-04-26 19:12:25,131 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: INSERT INTO diff_deploy_info( `job_record_uuid`, `address`, `port` )VALUES ( ?, ?, ? ) 
2021-04-26 19:12:25,131 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 123456(String), 127.0.0.1(String), 18513(Integer)
2021-04-26 19:12:25,131 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 123456(String), 127.0.0.1(String), 18513(Integer)
2021-04-26 19:12:25,157 ERROR (GlobalExceptionHandler.java:40)- {}
com.xiaoju.basetech.entity.ResponseException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '123456' for key 'PRIMARY'
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO diff_deploy_info(         `job_record_uuid`,         `address`,         `port`         )VALUES (         ?,         ?,         ?         )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '123456' for key 'PRIMARY'
; ]; Duplicate entry '123456' for key 'PRIMARY'; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '123456' for key 'PRIMARY'
	at com.xiaoju.basetech.service.impl.CodeCovServiceImpl.triggerEnvCov(CodeCovServiceImpl.java:322)
	at com.xiaoju.basetech.controller.CodeCovController.triggerEnvCov(CodeCovController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-04-26 19:12:25,157 ERROR (GlobalExceptionHandler.java:40)- {}
com.xiaoju.basetech.entity.ResponseException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '123456' for key 'PRIMARY'
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO diff_deploy_info(         `job_record_uuid`,         `address`,         `port`         )VALUES (         ?,         ?,         ?         )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '123456' for key 'PRIMARY'
; ]; Duplicate entry '123456' for key 'PRIMARY'; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '123456' for key 'PRIMARY'
	at com.xiaoju.basetech.service.impl.CodeCovServiceImpl.triggerEnvCov(CodeCovServiceImpl.java:322)
	at com.xiaoju.basetech.controller.CodeCovController.triggerEnvCov(CodeCovController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-04-26 19:12:25,158 WARN (ExceptionHandlerExceptionResolver.java:411)- Failed to invoke @ExceptionHandler method: com.xiaoju.basetech.entity.HttpResult com.xiaoju.basetech.config.GlobalExceptionHandler.handleResponseException(com.xiaoju.basetech.entity.ResponseException)
java.lang.NullPointerException: null
	at com.xiaoju.basetech.config.GlobalExceptionHandler.handleResponseException(GlobalExceptionHandler.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-04-26 19:12:25,158 ERROR (DirectJDKLog.java:182)- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.xiaoju.basetech.entity.ResponseException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '123456' for key 'PRIMARY'
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO diff_deploy_info(         `job_record_uuid`,         `address`,         `port`         )VALUES (         ?,         ?,         ?         )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '123456' for key 'PRIMARY'
; ]; Duplicate entry '123456' for key 'PRIMARY'; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '123456' for key 'PRIMARY'] with root cause
com.xiaoju.basetech.entity.ResponseException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '123456' for key 'PRIMARY'
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO diff_deploy_info(         `job_record_uuid`,         `address`,         `port`         )VALUES (         ?,         ?,         ?         )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '123456' for key 'PRIMARY'
; ]; Duplicate entry '123456' for key 'PRIMARY'; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '123456' for key 'PRIMARY'
	at com.xiaoju.basetech.service.impl.CodeCovServiceImpl.triggerEnvCov(CodeCovServiceImpl.java:322)
	at com.xiaoju.basetech.controller.CodeCovController.triggerEnvCov(CodeCovController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-04-26 19:12:34,146 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:12:34,146 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:12:34,147 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:12:34,147 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:12:34,153 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:12:34,153 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:12:34,154 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:12:34,154 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:12:41,686 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: INSERT INTO diff_coverage_report( `job_record_uuid`, `request_status`, `type`, `giturl`, `err_msg`, `sub_module`, `base_version`, `now_version`, `now_local_path` , `base_local_path`, `from` )VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-04-26 19:12:41,686 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: INSERT INTO diff_coverage_report( `job_record_uuid`, `request_status`, `type`, `giturl`, `err_msg`, `sub_module`, `base_version`, `now_version`, `now_local_path` , `base_local_path`, `from` )VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-04-26 19:12:41,687 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 1(String), 1(Integer), 1(Integer), https://git.qiweioa.cn/hnnh/do1cloud-ask.git(String), (String), (String), master(String), testjacoco(String), (String), (String), 2(Integer)
2021-04-26 19:12:41,687 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 1(String), 1(Integer), 1(Integer), https://git.qiweioa.cn/hnnh/do1cloud-ask.git(String), (String), (String), master(String), testjacoco(String), (String), (String), 2(Integer)
2021-04-26 19:12:41,692 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:12:41,692 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:12:41,693 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: INSERT INTO diff_deploy_info( `job_record_uuid`, `address`, `port` )VALUES ( ?, ?, ? ) 
2021-04-26 19:12:41,693 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: INSERT INTO diff_deploy_info( `job_record_uuid`, `address`, `port` )VALUES ( ?, ?, ? ) 
2021-04-26 19:12:41,694 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 1(String), 127.0.0.1(String), 18513(Integer)
2021-04-26 19:12:41,694 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 1(String), 127.0.0.1(String), 18513(Integer)
2021-04-26 19:12:41,704 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:12:41,704 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:12:41,712 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 19:12:41,712 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 19:12:41,713 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), (String), (String), 1(String)
2021-04-26 19:12:41,713 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), (String), (String), 1(String)
2021-04-26 19:12:41,723 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:12:41,723 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:12:42,346 INFO (CodeCloneExecutor.java:45)- uuid 1开始下载代码...
2021-04-26 19:12:42,346 INFO (CodeCloneExecutor.java:45)- uuid 1开始下载代码...
2021-04-26 19:12:44,173 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:12:44,173 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:12:44,173 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:12:44,173 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:12:44,180 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:12:44,180 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:12:44,181 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:12:44,181 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:12:54,195 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:12:54,195 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:12:54,196 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:12:54,196 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:12:54,204 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:12:54,204 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:12:54,206 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:12:54,206 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:13:04,179 INFO (CodeCloneExecutor.java:52)- uuid 1完成下载代码...
2021-04-26 19:13:04,179 INFO (CodeCloneExecutor.java:52)- uuid 1完成下载代码...
2021-04-26 19:13:04,182 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 19:13:04,182 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 19:13:04,182 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 102(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), http://172.21.96.1:8899/logs/1.log(String), C:\Users\admin/app/super_jacoco/clonecode/1/testjacoco(String), 1(String)
2021-04-26 19:13:04,182 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 102(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), http://172.21.96.1:8899/logs/1.log(String), C:\Users\admin/app/super_jacoco/clonecode/1/testjacoco(String), 1(String)
2021-04-26 19:13:04,195 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:13:04,195 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:13:04,195 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 19:13:04,195 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 19:13:04,196 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 3(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), http://172.21.96.1:8899/logs/1.log(String), C:\Users\admin/app/super_jacoco/clonecode/1/testjacoco(String), 1(String)
2021-04-26 19:13:04,196 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 3(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), http://172.21.96.1:8899/logs/1.log(String), C:\Users\admin/app/super_jacoco/clonecode/1/testjacoco(String), 1(String)
2021-04-26 19:13:04,209 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:13:04,209 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:13:08,143 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:13:08,143 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:13:08,144 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:13:08,144 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:13:08,150 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:13:08,150 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:13:08,151 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:13:08,151 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:13:27,240 INFO (CmdExecutor.java:43)- CmdThreadPool:java.util.concurrent.ThreadPoolExecutor@1c8661ca[Running, pool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1]
2021-04-26 19:13:27,240 INFO (CmdExecutor.java:43)- CmdThreadPool:java.util.concurrent.ThreadPoolExecutor@1c8661ca[Running, pool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1]
2021-04-26 19:13:27,241 INFO (CmdExecutor.java:48)- executeCmd : bash -c cd C:\Users\admin/app/super_jacoco/clonecode/1/testjacoco&&mvn clean compile >>C:\Users\admin/report/logs/1.log
2021-04-26 19:13:27,241 INFO (CmdExecutor.java:48)- executeCmd : bash -c cd C:\Users\admin/app/super_jacoco/clonecode/1/testjacoco&&mvn clean compile >>C:\Users\admin/report/logs/1.log
2021-04-26 19:14:29,363 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:14:29,363 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:14:29,364 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:14:29,364 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:14:29,363 WARN (HikariPool.java:758)- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m25s498ms117µs799ns).
2021-04-26 19:14:31,439 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:14:31,439 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:14:38,935 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:14:38,935 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:15:02,700 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:15:02,700 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:15:06,315 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:15:06,315 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:15:07,543 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:15:07,543 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:15:08,127 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:15:08,127 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:22:41,860 INFO (CmdExecutor.java:56)- readLine.stop();
2021-04-26 19:22:41,860 WARN (HikariPool.java:758)- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=7m39s160ms723µs700ns).
2021-04-26 19:22:41,860 INFO (CmdExecutor.java:56)- readLine.stop();
2021-04-26 19:22:41,861 INFO (CmdExecutor.java:58)- progressBar.stop();
2021-04-26 19:22:41,860 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 19:22:41,860 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 19:22:41,861 INFO (CmdExecutor.java:58)- progressBar.stop();
2021-04-26 19:22:41,862 INFO (CmdExecutor.java:59)- executeCmd done !!!!!!
2021-04-26 19:22:41,862 INFO (CmdExecutor.java:59)- executeCmd done !!!!!!
2021-04-26 19:22:41,862 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:22:41,862 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:22:41,862 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:22:41,863 INFO (CmdExecutor.java:60)- worker done !!!!!! times = 0s
2021-04-26 19:22:41,862 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:22:41,863 INFO (CmdExecutor.java:60)- worker done !!!!!! times = 0s
2021-04-26 19:22:41,864 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:22:41,864 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 19:22:41,864 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:22:41,864 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 19:22:41,866 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 19:22:41,866 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 19:22:41,867 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 203(Integer), 编译代码出错(String), -1.0(Double), -1.0(Double), (String), (String), http://172.21.96.1:8899/logs/1.log(String), C:\Users\admin/app/super_jacoco/clonecode/1/testjacoco(String), 1(String)
2021-04-26 19:22:41,867 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 203(Integer), 编译代码出错(String), -1.0(Double), -1.0(Double), (String), (String), http://172.21.96.1:8899/logs/1.log(String), C:\Users\admin/app/super_jacoco/clonecode/1/testjacoco(String), 1(String)
2021-04-26 19:22:41,869 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 19:22:41,870 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:22:41,869 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 19:22:41,870 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:22:41,870 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:22:41,870 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:22:41,870 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 17:22:41(String)
2021-04-26 19:22:41,870 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:22:41,870 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 17:22:41(String)
2021-04-26 19:22:41,870 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:22:41,870 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 19:22:41,870 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 19:22:41,871 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 19:22:41,871 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 19:22:41,873 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:22:41,873 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:22:41,873 INFO (CodeCovServiceImpl.java:252)- Thread-34计算覆盖率具体步骤...编译失败uuid=1
2021-04-26 19:22:41,873 INFO (CodeCovServiceImpl.java:252)- Thread-34计算覆盖率具体步骤...编译失败uuid=1
2021-04-26 19:22:41,873 INFO (CodeCovServiceImpl.java:309)- Thread-34计算覆盖率具体步骤...编译失败uuid=1
2021-04-26 19:22:41,873 INFO (CodeCovServiceImpl.java:309)- Thread-34计算覆盖率具体步骤...编译失败uuid=1
2021-04-26 19:22:42,248 INFO (AbstractApplicationContext.java:993)- Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@d3d30c3: startup date [Mon Apr 26 19:01:27 CST 2021]; root of context hierarchy
2021-04-26 19:22:42,262 INFO (DefaultLifecycleProcessor.java:366)- Stopping beans in phase 2147483647
2021-04-26 19:22:42,264 INFO (MBeanExporter.java:451)- Unregistering JMX-exposed beans on shutdown
2021-04-26 19:22:42,266 INFO (MBeanRegistrationSupport.java:183)- Unregistering JMX-exposed beans
2021-04-26 19:22:42,267 INFO (HikariDataSource.java:381)- HikariPool-1 - Shutdown initiated...
2021-04-26 19:22:42,278 INFO (HikariDataSource.java:383)- HikariPool-1 - Shutdown completed.
2021-04-26 19:23:43,702 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 4580 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 19:23:43,702 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 4580 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 19:23:43,705 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 19:23:43,705 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 19:23:43,708 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 19:23:43,708 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 19:23:44,304 INFO (AbstractApplicationContext.java:590)- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7023c21c: startup date [Mon Apr 26 19:23:44 CST 2021]; root of context hierarchy
2021-04-26 19:23:46,697 INFO (PostProcessorRegistrationDelegate.java:328)- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d91a2880] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-26 19:23:47,314 INFO (TomcatWebServer.java:91)- Tomcat initialized with port(s): 6795 (http)
2021-04-26 19:23:47,331 INFO (DirectJDKLog.java:180)- Initializing ProtocolHandler ["http-nio-6795"]
2021-04-26 19:23:47,348 INFO (DirectJDKLog.java:180)- Starting service [Tomcat]
2021-04-26 19:23:47,348 INFO (DirectJDKLog.java:180)- Starting Servlet Engine: Apache Tomcat/8.5.31
2021-04-26 19:23:47,354 INFO (DirectJDKLog.java:180)- The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\soft\jdk1.8.0_172\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\soft\jdk1.8.0_172\bin;C:\Program Files\Git\cmd;D:/demo/maven/apache-maven-3.6.3\bin;C:\cmder;D:\soft\jdk1.8.0_172\jre\bin;;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\admin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\IntelliJ IDEA 2020.2\bin;C:\Users\admin\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2021-04-26 19:23:47,475 INFO (DirectJDKLog.java:180)- Initializing Spring embedded WebApplicationContext
2021-04-26 19:23:47,475 INFO (ServletWebServerApplicationContext.java:285)- Root WebApplicationContext: initialization completed in 3171 ms
2021-04-26 19:23:47,694 INFO (ServletRegistrationBean.java:185)- Servlet dispatcherServlet mapped to [/]
2021-04-26 19:23:47,701 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'characterEncodingFilter' to: [/*]
2021-04-26 19:23:47,701 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-04-26 19:23:47,701 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-04-26 19:23:47,701 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'requestContextFilter' to: [/*]
2021-04-26 19:23:48,882 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getUnitCoverResult],methods=[GET]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getCoverResult(java.lang.String)
2021-04-26 19:23:48,884 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/triggerEnvCov],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<java.lang.Boolean> com.xiaoju.basetech.controller.CodeCovController.triggerEnvCov(com.xiaoju.basetech.entity.EnvCoverRequest)
2021-04-26 19:23:48,885 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/triggerUnitCover],methods=[POST]}" onto public com.xiaoju.basetech.entity.HttpResult<java.lang.Boolean> com.xiaoju.basetech.controller.CodeCovController.triggerUnitCover(com.xiaoju.basetech.entity.UnitCoverRequest)
2021-04-26 19:23:48,886 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getEnvCoverResult],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getEnvCoverResult(java.lang.String)
2021-04-26 19:23:48,886 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getLocalCoverResult],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getEnvLocalCoverResult(com.xiaoju.basetech.entity.LocalHostRequestParam)
2021-04-26 19:23:48,895 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-04-26 19:23:48,897 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-04-26 19:23:48,898 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-04-26 19:23:48,903 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2021-04-26 19:23:48,904 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-04-26 19:23:49,140 INFO (PropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2021-04-26 19:23:49,307 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 19:23:49,538 INFO (RequestMappingHandlerAdapter.java:574)- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7023c21c: startup date [Mon Apr 26 19:23:44 CST 2021]; root of context hierarchy
2021-04-26 19:23:49,610 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 19:23:49,610 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 19:23:49,634 INFO (ExceptionHandlerExceptionResolver.java:288)- Detected @ExceptionHandler methods in globalExceptionHandler
2021-04-26 19:23:50,083 INFO (OptionalLiveReloadServer.java:57)- LiveReload server is running on port 35729
2021-04-26 19:23:50,117 INFO (MBeanExporter.java:433)- Registering beans for JMX exposure on startup
2021-04-26 19:23:50,119 INFO (MBeanExporter.java:895)- Bean with name 'dataSource' has been autodetected for JMX exposure
2021-04-26 19:23:50,126 INFO (MBeanExporter.java:668)- Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2021-04-26 19:23:50,132 INFO (DefaultLifecycleProcessor.java:351)- Starting beans in phase 2147483647
2021-04-26 19:23:50,132 INFO (DocumentationPluginsBootstrapper.java:147)- Context refreshed
2021-04-26 19:23:50,151 INFO (DocumentationPluginsBootstrapper.java:150)- Found 1 custom documentation plugin(s)
2021-04-26 19:23:50,206 INFO (ApiListingReferenceScanner.java:41)- Scanning for api listing references
2021-04-26 19:23:50,523 INFO (DirectJDKLog.java:180)- Starting ProtocolHandler ["http-nio-6795"]
2021-04-26 19:23:50,563 INFO (DirectJDKLog.java:180)- Using a shared selector for servlet write/read
2021-04-26 19:23:50,587 INFO (TomcatWebServer.java:206)- Tomcat started on port(s): 6795 (http) with context path ''
2021-04-26 19:23:50,595 INFO (StartupInfoLogger.java:59)- Started CodeCovApplication in 7.382 seconds (JVM running for 9.688)
2021-04-26 19:23:50,595 INFO (StartupInfoLogger.java:59)- Started CodeCovApplication in 7.382 seconds (JVM running for 9.688)
2021-04-26 19:24:00,525 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 19:24:00,525 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 19:24:00,570 INFO (HikariDataSource.java:110)- HikariPool-1 - Starting...
2021-04-26 19:24:01,713 INFO (HikariDataSource.java:123)- HikariPool-1 - Start completed.
2021-04-26 19:24:01,722 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 19:24:01,722 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 19:24:01,745 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 17:24:00(String)
2021-04-26 19:24:01,745 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 17:24:00(String)
2021-04-26 19:24:01,756 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 19:24:01,756 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 19:24:01,771 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:24:01,771 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:24:01,773 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:24:01,773 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:24:01,789 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:24:01,789 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:24:01,790 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:24:01,790 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:24:07,003 INFO (DirectJDKLog.java:180)- Initializing Spring FrameworkServlet 'dispatcherServlet'
2021-04-26 19:24:07,003 INFO (FrameworkServlet.java:494)- FrameworkServlet 'dispatcherServlet': initialization started
2021-04-26 19:24:07,036 INFO (FrameworkServlet.java:509)- FrameworkServlet 'dispatcherServlet': initialization completed in 33 ms
2021-04-26 19:24:07,334 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: INSERT INTO diff_coverage_report( `job_record_uuid`, `request_status`, `type`, `giturl`, `err_msg`, `sub_module`, `base_version`, `now_version`, `now_local_path` , `base_local_path`, `from` )VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-04-26 19:24:07,334 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: INSERT INTO diff_coverage_report( `job_record_uuid`, `request_status`, `type`, `giturl`, `err_msg`, `sub_module`, `base_version`, `now_version`, `now_local_path` , `base_local_path`, `from` )VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-04-26 19:24:07,339 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2(String), 1(Integer), 1(Integer), https://git.qiweioa.cn/hnnh/do1cloud-ask.git(String), (String), (String), master(String), testjacoco(String), (String), (String), 2(Integer)
2021-04-26 19:24:07,339 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2(String), 1(Integer), 1(Integer), https://git.qiweioa.cn/hnnh/do1cloud-ask.git(String), (String), (String), master(String), testjacoco(String), (String), (String), 2(Integer)
2021-04-26 19:24:07,353 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:24:07,353 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:24:07,353 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: INSERT INTO diff_deploy_info( `job_record_uuid`, `address`, `port` )VALUES ( ?, ?, ? ) 
2021-04-26 19:24:07,353 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: INSERT INTO diff_deploy_info( `job_record_uuid`, `address`, `port` )VALUES ( ?, ?, ? ) 
2021-04-26 19:24:07,354 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2(String), 127.0.0.1(String), 18513(Integer)
2021-04-26 19:24:07,354 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2(String), 127.0.0.1(String), 18513(Integer)
2021-04-26 19:24:07,362 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:24:07,362 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:24:07,365 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 19:24:07,365 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 19:24:07,367 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), (String), (String), 2(String)
2021-04-26 19:24:07,367 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), (String), (String), 2(String)
2021-04-26 19:24:07,376 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:24:07,376 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:24:08,066 INFO (CodeCloneExecutor.java:45)- uuid 2开始下载代码...
2021-04-26 19:24:08,066 INFO (CodeCloneExecutor.java:45)- uuid 2开始下载代码...
2021-04-26 19:25:21,496 WARN (HikariPool.java:758)- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m19s673ms270µs800ns).
2021-04-26 19:25:21,514 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:25:21,514 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:25:21,514 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:25:21,514 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:25:21,522 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:25:21,522 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:25:21,524 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:25:21,524 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:25:31,542 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:25:31,542 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:25:31,543 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:25:31,543 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:25:31,546 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:25:31,546 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:25:31,546 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:25:31,546 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:25:41,557 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:25:41,557 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:25:41,558 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:25:41,558 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:25:41,566 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:25:41,566 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:25:41,566 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:25:41,566 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:25:46,864 INFO (CodeCloneExecutor.java:52)- uuid 2完成下载代码...
2021-04-26 19:25:46,864 INFO (CodeCloneExecutor.java:52)- uuid 2完成下载代码...
2021-04-26 19:25:46,867 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 19:25:46,867 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 19:25:46,868 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 102(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), http://172.21.96.1:8899/logs/2.log(String), C:\Users\admin/app/super_jacoco/clonecode/2/testjacoco(String), 2(String)
2021-04-26 19:25:46,868 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 102(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), http://172.21.96.1:8899/logs/2.log(String), C:\Users\admin/app/super_jacoco/clonecode/2/testjacoco(String), 2(String)
2021-04-26 19:25:46,873 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:25:46,873 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:25:46,873 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 19:25:46,873 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 19:25:46,874 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 3(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), http://172.21.96.1:8899/logs/2.log(String), C:\Users\admin/app/super_jacoco/clonecode/2/testjacoco(String), 2(String)
2021-04-26 19:25:46,874 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 3(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), http://172.21.96.1:8899/logs/2.log(String), C:\Users\admin/app/super_jacoco/clonecode/2/testjacoco(String), 2(String)
2021-04-26 19:25:46,878 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:25:46,878 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:25:52,286 INFO (CmdExecutor.java:43)- CmdThreadPool:java.util.concurrent.ThreadPoolExecutor@3940b716[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]
2021-04-26 19:25:52,286 INFO (CmdExecutor.java:43)- CmdThreadPool:java.util.concurrent.ThreadPoolExecutor@3940b716[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]
2021-04-26 19:25:52,286 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:25:52,286 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:25:52,287 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:25:52,286 INFO (CmdExecutor.java:48)- executeCmd : bash -c cd C:\Users\admin/app/super_jacoco/clonecode/2/testjacoco&&mvn clean compile >>C:\Users\admin/report/logs/2.log
2021-04-26 19:25:52,287 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:25:52,286 INFO (CmdExecutor.java:48)- executeCmd : bash -c cd C:\Users\admin/app/super_jacoco/clonecode/2/testjacoco&&mvn clean compile >>C:\Users\admin/report/logs/2.log
2021-04-26 19:25:58,106 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:25:58,106 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:25:59,553 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:25:59,553 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:26:06,613 INFO (AbstractApplicationContext.java:993)- Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7023c21c: startup date [Mon Apr 26 19:23:44 CST 2021]; root of context hierarchy
2021-04-26 19:26:06,617 INFO (DefaultLifecycleProcessor.java:366)- Stopping beans in phase 2147483647
2021-04-26 19:26:06,621 INFO (MBeanExporter.java:451)- Unregistering JMX-exposed beans on shutdown
2021-04-26 19:26:06,625 INFO (MBeanRegistrationSupport.java:183)- Unregistering JMX-exposed beans
2021-04-26 19:26:06,627 INFO (HikariDataSource.java:381)- HikariPool-1 - Shutdown initiated...
2021-04-26 19:26:06,651 INFO (HikariDataSource.java:383)- HikariPool-1 - Shutdown completed.
2021-04-26 19:26:08,554 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 4580 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 19:26:08,554 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 4580 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 19:26:08,555 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 19:26:08,555 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 19:26:08,556 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 19:26:08,556 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 19:26:08,563 INFO (AbstractApplicationContext.java:590)- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@308302b1: startup date [Mon Apr 26 19:26:08 CST 2021]; root of context hierarchy
2021-04-26 19:26:09,845 WARN (ClassPathMapperScanner.java:166)- No MyBatis mapper was found in '[com.xiaoju.basetech.dao]' package. Please check your configuration.
2021-04-26 19:26:10,001 WARN (ClassPathMapperScanner.java:142)- No MyBatis mapper was found in '[com.xiaoju.basetech]' package. Please check your configuration.
2021-04-26 19:26:10,009 WARN (ClassPathMapperScanner.java:166)- No MyBatis mapper was found in '[com.xiaoju.basetech]' package. Please check your configuration.
2021-04-26 19:26:10,258 INFO (PostProcessorRegistrationDelegate.java:328)- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d91a2880] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-26 19:26:10,668 INFO (TomcatWebServer.java:91)- Tomcat initialized with port(s): 6795 (http)
2021-04-26 19:26:10,669 INFO (DirectJDKLog.java:180)- Initializing ProtocolHandler ["http-nio-6795"]
2021-04-26 19:26:10,670 INFO (DirectJDKLog.java:180)- Starting service [Tomcat]
2021-04-26 19:26:10,671 INFO (DirectJDKLog.java:180)- Starting Servlet Engine: Apache Tomcat/8.5.31
2021-04-26 19:26:10,907 INFO (DirectJDKLog.java:180)- Initializing Spring embedded WebApplicationContext
2021-04-26 19:26:10,910 INFO (ServletWebServerApplicationContext.java:285)- Root WebApplicationContext: initialization completed in 2347 ms
2021-04-26 19:26:11,002 INFO (ServletRegistrationBean.java:185)- Servlet dispatcherServlet mapped to [/]
2021-04-26 19:26:11,003 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'characterEncodingFilter' to: [/*]
2021-04-26 19:26:11,003 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-04-26 19:26:11,004 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-04-26 19:26:11,004 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'requestContextFilter' to: [/*]
2021-04-26 19:26:11,314 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-04-26 19:26:11,315 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-04-26 19:26:11,315 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-04-26 19:26:11,318 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2021-04-26 19:26:11,318 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-04-26 19:26:11,441 INFO (PropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2021-04-26 19:26:11,486 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 19:26:11,545 INFO (RequestMappingHandlerAdapter.java:574)- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@308302b1: startup date [Mon Apr 26 19:26:08 CST 2021]; root of context hierarchy
2021-04-26 19:26:11,564 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 19:26:11,564 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 19:26:11,590 INFO (CmdExecutor.java:56)- readLine.stop();
2021-04-26 19:26:11,590 INFO (CmdExecutor.java:56)- readLine.stop();
2021-04-26 19:26:11,591 INFO (CmdExecutor.java:58)- progressBar.stop();
2021-04-26 19:26:11,591 INFO (CmdExecutor.java:58)- progressBar.stop();
2021-04-26 19:26:11,591 INFO (CmdExecutor.java:59)- executeCmd done !!!!!!
2021-04-26 19:26:11,591 INFO (CmdExecutor.java:59)- executeCmd done !!!!!!
2021-04-26 19:26:11,591 INFO (CmdExecutor.java:60)- worker done !!!!!! times = 10s
2021-04-26 19:26:11,591 INFO (CmdExecutor.java:60)- worker done !!!!!! times = 10s
2021-04-26 19:26:11,757 INFO (OptionalLiveReloadServer.java:57)- LiveReload server is running on port 35729
2021-04-26 19:26:11,781 INFO (MBeanExporter.java:433)- Registering beans for JMX exposure on startup
2021-04-26 19:26:11,784 INFO (MBeanExporter.java:895)- Bean with name 'dataSource' has been autodetected for JMX exposure
2021-04-26 19:26:11,791 INFO (MBeanExporter.java:668)- Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2021-04-26 19:26:11,792 INFO (DefaultLifecycleProcessor.java:351)- Starting beans in phase 2147483647
2021-04-26 19:26:11,792 INFO (DocumentationPluginsBootstrapper.java:147)- Context refreshed
2021-04-26 19:26:11,795 INFO (DocumentationPluginsBootstrapper.java:150)- Found 1 custom documentation plugin(s)
2021-04-26 19:26:11,803 INFO (ApiListingReferenceScanner.java:41)- Scanning for api listing references
2021-04-26 19:26:11,911 INFO (DirectJDKLog.java:180)- Starting ProtocolHandler ["http-nio-6795"]
2021-04-26 19:26:11,913 INFO (DirectJDKLog.java:180)- Using a shared selector for servlet write/read
2021-04-26 19:26:11,917 INFO (TomcatWebServer.java:206)- Tomcat started on port(s): 6795 (http) with context path ''
2021-04-26 19:26:11,919 INFO (StartupInfoLogger.java:59)- Started CodeCovApplication in 3.442 seconds (JVM running for 151.012)
2021-04-26 19:26:11,919 INFO (StartupInfoLogger.java:59)- Started CodeCovApplication in 3.442 seconds (JVM running for 151.012)
2021-04-26 19:26:11,928 INFO (ConditionEvaluationDeltaLoggingListener.java:50)- Condition evaluation delta:


==========================
CONDITION EVALUATION DELTA
==========================


Positive matches:
-----------------

   MapperAutoConfiguration.MapperScannerRegistrarNotFoundConfiguration matched:
      - @ConditionalOnMissingBean (types: org.mybatis.spring.mapper.MapperFactoryBean; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisAutoConfiguration.MapperScannerRegistrarNotFoundConfiguration matched:
      - @ConditionalOnMissingBean (types: org.mybatis.spring.mapper.MapperFactoryBean; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

    None


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    None



2021-04-26 19:33:04,093 INFO (DirectJDKLog.java:180)- Initializing Spring FrameworkServlet 'dispatcherServlet'
2021-04-26 19:33:04,093 INFO (FrameworkServlet.java:494)- FrameworkServlet 'dispatcherServlet': initialization started
2021-04-26 19:33:04,101 INFO (FrameworkServlet.java:509)- FrameworkServlet 'dispatcherServlet': initialization completed in 7 ms
2021-04-26 19:33:18,147 INFO (AbstractApplicationContext.java:993)- Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@308302b1: startup date [Mon Apr 26 19:26:08 CST 2021]; root of context hierarchy
2021-04-26 19:33:18,149 INFO (DefaultLifecycleProcessor.java:366)- Stopping beans in phase 2147483647
2021-04-26 19:33:18,150 INFO (MBeanExporter.java:451)- Unregistering JMX-exposed beans on shutdown
2021-04-26 19:33:18,151 INFO (MBeanRegistrationSupport.java:183)- Unregistering JMX-exposed beans
2021-04-26 19:34:03,539 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 21812 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 19:34:03,539 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 21812 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 19:34:03,542 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 19:34:03,542 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 19:34:03,544 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 19:34:03,544 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 19:34:04,933 INFO (AbstractApplicationContext.java:590)- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@35079c01: startup date [Mon Apr 26 19:34:04 CST 2021]; root of context hierarchy
2021-04-26 19:34:09,593 INFO (PostProcessorRegistrationDelegate.java:328)- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$574228c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-26 19:34:10,325 INFO (TomcatWebServer.java:91)- Tomcat initialized with port(s): 6795 (http)
2021-04-26 19:34:10,350 INFO (DirectJDKLog.java:180)- Initializing ProtocolHandler ["http-nio-6795"]
2021-04-26 19:34:10,370 INFO (DirectJDKLog.java:180)- Starting service [Tomcat]
2021-04-26 19:34:10,370 INFO (DirectJDKLog.java:180)- Starting Servlet Engine: Apache Tomcat/8.5.31
2021-04-26 19:34:10,390 INFO (DirectJDKLog.java:180)- The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\soft\jdk1.8.0_172\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\soft\jdk1.8.0_172\bin;C:\Program Files\Git\cmd;D:/demo/maven/apache-maven-3.6.3\bin;C:\cmder;D:\soft\jdk1.8.0_172\jre\bin;;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\admin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\IntelliJ IDEA 2020.2\bin;C:\Users\admin\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2021-04-26 19:34:10,556 INFO (DirectJDKLog.java:180)- Initializing Spring embedded WebApplicationContext
2021-04-26 19:34:10,556 INFO (ServletWebServerApplicationContext.java:285)- Root WebApplicationContext: initialization completed in 5623 ms
2021-04-26 19:34:10,844 INFO (ServletRegistrationBean.java:185)- Servlet dispatcherServlet mapped to [/]
2021-04-26 19:34:10,848 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'characterEncodingFilter' to: [/*]
2021-04-26 19:34:10,849 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-04-26 19:34:10,849 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-04-26 19:34:10,849 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'requestContextFilter' to: [/*]
2021-04-26 19:34:12,536 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getUnitCoverResult],methods=[GET]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getCoverResult(java.lang.String)
2021-04-26 19:34:12,537 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/triggerUnitCover],methods=[POST]}" onto public com.xiaoju.basetech.entity.HttpResult<java.lang.Boolean> com.xiaoju.basetech.controller.CodeCovController.triggerUnitCover(com.xiaoju.basetech.entity.UnitCoverRequest)
2021-04-26 19:34:12,538 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/triggerEnvCov],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<java.lang.Boolean> com.xiaoju.basetech.controller.CodeCovController.triggerEnvCov(com.xiaoju.basetech.entity.EnvCoverRequest)
2021-04-26 19:34:12,539 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getEnvCoverResult],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getEnvCoverResult(java.lang.String)
2021-04-26 19:34:12,539 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getLocalCoverResult],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getEnvLocalCoverResult(com.xiaoju.basetech.entity.LocalHostRequestParam)
2021-04-26 19:34:12,546 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-04-26 19:34:12,547 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-04-26 19:34:12,548 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-04-26 19:34:12,552 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2021-04-26 19:34:12,553 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-04-26 19:34:12,716 INFO (PropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2021-04-26 19:34:12,888 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 19:34:13,178 INFO (RequestMappingHandlerAdapter.java:574)- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@35079c01: startup date [Mon Apr 26 19:34:04 CST 2021]; root of context hierarchy
2021-04-26 19:34:13,243 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 19:34:13,244 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 19:34:13,281 INFO (ExceptionHandlerExceptionResolver.java:288)- Detected @ExceptionHandler methods in globalExceptionHandler
2021-04-26 19:34:13,726 INFO (OptionalLiveReloadServer.java:57)- LiveReload server is running on port 35729
2021-04-26 19:34:13,807 INFO (MBeanExporter.java:433)- Registering beans for JMX exposure on startup
2021-04-26 19:34:13,809 INFO (MBeanExporter.java:895)- Bean with name 'dataSource' has been autodetected for JMX exposure
2021-04-26 19:34:13,814 INFO (MBeanExporter.java:668)- Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2021-04-26 19:34:13,818 INFO (DefaultLifecycleProcessor.java:351)- Starting beans in phase 2147483647
2021-04-26 19:34:13,819 INFO (DocumentationPluginsBootstrapper.java:147)- Context refreshed
2021-04-26 19:34:13,833 INFO (DocumentationPluginsBootstrapper.java:150)- Found 1 custom documentation plugin(s)
2021-04-26 19:34:13,869 INFO (ApiListingReferenceScanner.java:41)- Scanning for api listing references
2021-04-26 19:34:14,153 INFO (DirectJDKLog.java:180)- Starting ProtocolHandler ["http-nio-6795"]
2021-04-26 19:34:14,220 INFO (DirectJDKLog.java:180)- Using a shared selector for servlet write/read
2021-04-26 19:34:14,240 INFO (TomcatWebServer.java:206)- Tomcat started on port(s): 6795 (http) with context path ''
2021-04-26 19:34:14,245 INFO (StartupInfoLogger.java:59)- Started CodeCovApplication in 14.497 seconds (JVM running for 30.3)
2021-04-26 19:34:14,245 INFO (StartupInfoLogger.java:59)- Started CodeCovApplication in 14.497 seconds (JVM running for 30.3)
2021-04-26 19:34:24,163 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 19:34:24,163 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 19:34:24,182 INFO (HikariDataSource.java:110)- HikariPool-1 - Starting...
2021-04-26 19:34:25,591 INFO (HikariDataSource.java:123)- HikariPool-1 - Start completed.
2021-04-26 19:34:25,598 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 19:34:25,598 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 19:34:25,617 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 17:34:24(String)
2021-04-26 19:34:25,617 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 17:34:24(String)
2021-04-26 19:34:25,628 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 19:34:25,628 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 19:34:25,631 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:34:25,631 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:34:25,632 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:34:25,632 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:34:25,649 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:34:25,649 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:34:25,650 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:34:25,650 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:34:35,655 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:34:35,655 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:34:35,656 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:34:35,656 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:34:35,658 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:34:35,658 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:34:35,658 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:34:35,658 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:34:45,675 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:34:45,675 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:34:45,676 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:34:45,676 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:34:45,678 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:34:45,678 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:34:45,679 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:34:45,679 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:34:47,668 INFO (DirectJDKLog.java:180)- Initializing Spring FrameworkServlet 'dispatcherServlet'
2021-04-26 19:34:47,669 INFO (FrameworkServlet.java:494)- FrameworkServlet 'dispatcherServlet': initialization started
2021-04-26 19:34:47,693 INFO (FrameworkServlet.java:509)- FrameworkServlet 'dispatcherServlet': initialization completed in 24 ms
2021-04-26 19:34:47,865 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: INSERT INTO diff_coverage_report( `job_record_uuid`, `request_status`, `type`, `giturl`, `err_msg`, `sub_module`, `base_version`, `now_version`, `now_local_path` , `base_local_path`, `from` )VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-04-26 19:34:47,865 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: INSERT INTO diff_coverage_report( `job_record_uuid`, `request_status`, `type`, `giturl`, `err_msg`, `sub_module`, `base_version`, `now_version`, `now_local_path` , `base_local_path`, `from` )VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-04-26 19:34:47,871 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 3(String), 1(Integer), 1(Integer), https://git.qiweioa.cn/hnnh/do1cloud-ask.git(String), (String), (String), master(String), testjacoco(String), (String), (String), 2(Integer)
2021-04-26 19:34:47,871 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 3(String), 1(Integer), 1(Integer), https://git.qiweioa.cn/hnnh/do1cloud-ask.git(String), (String), (String), master(String), testjacoco(String), (String), (String), 2(Integer)
2021-04-26 19:34:47,877 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:34:47,877 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:34:47,878 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: INSERT INTO diff_deploy_info( `job_record_uuid`, `address`, `port` )VALUES ( ?, ?, ? ) 
2021-04-26 19:34:47,878 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: INSERT INTO diff_deploy_info( `job_record_uuid`, `address`, `port` )VALUES ( ?, ?, ? ) 
2021-04-26 19:34:47,878 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 3(String), 127.0.0.1(String), 18513(Integer)
2021-04-26 19:34:47,878 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 3(String), 127.0.0.1(String), 18513(Integer)
2021-04-26 19:34:47,882 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:34:47,882 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:34:47,884 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 19:34:47,884 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 19:34:47,885 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), (String), (String), 3(String)
2021-04-26 19:34:47,885 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), (String), (String), 3(String)
2021-04-26 19:34:47,891 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:34:47,891 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:34:48,412 INFO (CodeCloneExecutor.java:45)- uuid 3开始下载代码...
2021-04-26 19:34:48,412 INFO (CodeCloneExecutor.java:45)- uuid 3开始下载代码...
2021-04-26 19:34:55,688 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:34:55,688 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:34:55,690 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:34:55,690 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:34:55,696 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:34:55,696 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:34:55,697 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:34:55,697 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:35:03,855 INFO (CodeCloneExecutor.java:52)- uuid 3完成下载代码...
2021-04-26 19:35:03,855 INFO (CodeCloneExecutor.java:52)- uuid 3完成下载代码...
2021-04-26 19:35:03,862 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 19:35:03,862 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 19:35:03,863 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 102(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), http://172.21.96.1:8899/logs/3.log(String), C:\Users\admin/app/super_jacoco/clonecode/3/testjacoco(String), 3(String)
2021-04-26 19:35:03,863 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 102(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), http://172.21.96.1:8899/logs/3.log(String), C:\Users\admin/app/super_jacoco/clonecode/3/testjacoco(String), 3(String)
2021-04-26 19:35:04,084 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:35:04,084 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:35:04,085 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 19:35:04,085 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 19:35:04,085 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 3(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), http://172.21.96.1:8899/logs/3.log(String), C:\Users\admin/app/super_jacoco/clonecode/3/testjacoco(String), 3(String)
2021-04-26 19:35:04,085 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 3(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), http://172.21.96.1:8899/logs/3.log(String), C:\Users\admin/app/super_jacoco/clonecode/3/testjacoco(String), 3(String)
2021-04-26 19:35:04,097 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:35:04,097 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:35:04,589 INFO (CmdExecutor.java:43)- CmdThreadPool:java.util.concurrent.ThreadPoolExecutor@560ff679[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]
2021-04-26 19:35:04,589 INFO (CmdExecutor.java:43)- CmdThreadPool:java.util.concurrent.ThreadPoolExecutor@560ff679[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]
2021-04-26 19:35:04,589 INFO (CmdExecutor.java:48)- executeCmd : bash -c cd C:\Users\admin/app/super_jacoco/clonecode/3/testjacoco&&mvn clean compile >>C:\Users\admin/report/logs/3.log
2021-04-26 19:35:04,589 INFO (CmdExecutor.java:48)- executeCmd : bash -c cd C:\Users\admin/app/super_jacoco/clonecode/3/testjacoco&&mvn clean compile >>C:\Users\admin/report/logs/3.log
2021-04-26 19:35:05,714 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:35:05,714 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:35:05,714 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:35:05,714 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:35:05,720 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:35:05,720 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:35:05,720 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:35:05,720 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:35:09,547 INFO (AbstractApplicationContext.java:993)- Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@35079c01: startup date [Mon Apr 26 19:34:04 CST 2021]; root of context hierarchy
2021-04-26 19:35:09,550 INFO (DefaultLifecycleProcessor.java:366)- Stopping beans in phase 2147483647
2021-04-26 19:35:09,552 INFO (MBeanExporter.java:451)- Unregistering JMX-exposed beans on shutdown
2021-04-26 19:35:09,553 INFO (MBeanRegistrationSupport.java:183)- Unregistering JMX-exposed beans
2021-04-26 19:35:09,556 INFO (HikariDataSource.java:381)- HikariPool-1 - Shutdown initiated...
2021-04-26 19:35:09,567 INFO (HikariDataSource.java:383)- HikariPool-1 - Shutdown completed.
2021-04-26 19:35:11,292 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 21812 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 19:35:11,292 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 21812 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 19:35:11,292 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 19:35:11,292 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 19:35:11,293 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 19:35:11,293 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 19:35:11,296 INFO (AbstractApplicationContext.java:590)- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@31a6b9ca: startup date [Mon Apr 26 19:35:11 CST 2021]; root of context hierarchy
2021-04-26 19:35:12,332 WARN (ClassPathMapperScanner.java:166)- No MyBatis mapper was found in '[com.xiaoju.basetech.dao]' package. Please check your configuration.
2021-04-26 19:35:12,424 WARN (ClassPathMapperScanner.java:142)- No MyBatis mapper was found in '[com.xiaoju.basetech]' package. Please check your configuration.
2021-04-26 19:35:12,429 WARN (ClassPathMapperScanner.java:166)- No MyBatis mapper was found in '[com.xiaoju.basetech]' package. Please check your configuration.
2021-04-26 19:35:12,586 INFO (PostProcessorRegistrationDelegate.java:328)- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$574228c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-26 19:35:12,944 INFO (TomcatWebServer.java:91)- Tomcat initialized with port(s): 6795 (http)
2021-04-26 19:35:12,945 INFO (DirectJDKLog.java:180)- Initializing ProtocolHandler ["http-nio-6795"]
2021-04-26 19:35:12,946 INFO (DirectJDKLog.java:180)- Starting service [Tomcat]
2021-04-26 19:35:12,947 INFO (DirectJDKLog.java:180)- Starting Servlet Engine: Apache Tomcat/8.5.31
2021-04-26 19:35:13,086 INFO (DirectJDKLog.java:180)- Initializing Spring embedded WebApplicationContext
2021-04-26 19:35:13,087 INFO (ServletWebServerApplicationContext.java:285)- Root WebApplicationContext: initialization completed in 1791 ms
2021-04-26 19:35:13,196 INFO (ServletRegistrationBean.java:185)- Servlet dispatcherServlet mapped to [/]
2021-04-26 19:35:13,197 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'characterEncodingFilter' to: [/*]
2021-04-26 19:35:13,197 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-04-26 19:35:13,198 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-04-26 19:35:13,198 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'requestContextFilter' to: [/*]
2021-04-26 19:35:13,542 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-04-26 19:35:13,542 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-04-26 19:35:13,546 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-04-26 19:35:13,549 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2021-04-26 19:35:13,551 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-04-26 19:35:13,687 INFO (PropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2021-04-26 19:35:13,731 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 19:35:13,831 INFO (RequestMappingHandlerAdapter.java:574)- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@31a6b9ca: startup date [Mon Apr 26 19:35:11 CST 2021]; root of context hierarchy
2021-04-26 19:35:13,878 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 19:35:13,878 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 19:35:14,036 WARN (AbstractApplicationContext.java:558)- Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [tk/mybatis/mapper/autoconfigure/MapperAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\demo\super-jacoco-master\target\classes\mapper\DeployInfoDao.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.xiaoju.basetech.entity.DeployInfoEntity'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.xiaoju.basetech.entity.DeployInfoEntity
2021-04-26 19:35:14,044 INFO (DirectJDKLog.java:180)- Stopping service [Tomcat]
2021-04-26 19:35:14,053 INFO (ConditionEvaluationReportLoggingListener.java:101)- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-04-26 19:35:14,065 ERROR (SpringApplication.java:842)- Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [tk/mybatis/mapper/autoconfigure/MapperAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\demo\super-jacoco-master\target\classes\mapper\DeployInfoDao.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.xiaoju.basetech.entity.DeployInfoEntity'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.xiaoju.basetech.entity.DeployInfoEntity
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:587)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1254)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1103)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:541)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:501)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:760)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.xiaoju.basetech.CodeCovApplication.main(CodeCovApplication.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\demo\super-jacoco-master\target\classes\mapper\DeployInfoDao.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.xiaoju.basetech.entity.DeployInfoEntity'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.xiaoju.basetech.entity.DeployInfoEntity
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:579)
	... 23 common frames omitted
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\demo\super-jacoco-master\target\classes\mapper\DeployInfoDao.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.xiaoju.basetech.entity.DeployInfoEntity'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.xiaoju.basetech.entity.DeployInfoEntity
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:523)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:380)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:547)
	at tk.mybatis.mapper.autoconfigure.MapperAutoConfiguration.sqlSessionFactory(MapperAutoConfiguration.java:155)
	at tk.mybatis.mapper.autoconfigure.MapperAutoConfiguration$$EnhancerBySpringCGLIB$$d32d062.CGLIB$sqlSessionFactory$0(<generated>)
	at tk.mybatis.mapper.autoconfigure.MapperAutoConfiguration$$EnhancerBySpringCGLIB$$d32d062$$FastClassBySpringCGLIB$$f3138ea6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361)
	at tk.mybatis.mapper.autoconfigure.MapperAutoConfiguration$$EnhancerBySpringCGLIB$$d32d062.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 24 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.xiaoju.basetech.entity.DeployInfoEntity'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.xiaoju.basetech.entity.DeployInfoEntity
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:120)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:92)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:521)
	... 37 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.xiaoju.basetech.entity.DeployInfoEntity'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.xiaoju.basetech.entity.DeployInfoEntity
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:265)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:252)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElements(XMLMapperBuilder.java:244)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:116)
	... 39 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.xiaoju.basetech.entity.DeployInfoEntity'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.xiaoju.basetech.entity.DeployInfoEntity
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:120)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:149)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 43 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.xiaoju.basetech.entity.DeployInfoEntity
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:200)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:89)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:261)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:116)
	... 45 common frames omitted
2021-04-26 19:35:14,827 INFO (CmdExecutor.java:56)- readLine.stop();
2021-04-26 19:35:14,827 INFO (CmdExecutor.java:56)- readLine.stop();
2021-04-26 19:35:14,827 INFO (CmdExecutor.java:58)- progressBar.stop();
2021-04-26 19:35:14,827 INFO (CmdExecutor.java:58)- progressBar.stop();
2021-04-26 19:35:14,827 INFO (CmdExecutor.java:59)- executeCmd done !!!!!!
2021-04-26 19:35:14,827 INFO (CmdExecutor.java:59)- executeCmd done !!!!!!
2021-04-26 19:35:14,827 INFO (CmdExecutor.java:60)- worker done !!!!!! times = 10s
2021-04-26 19:35:14,827 INFO (CmdExecutor.java:60)- worker done !!!!!! times = 10s
2021-04-26 19:35:15,571 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 21812 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 19:35:15,571 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 21812 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 19:35:15,571 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 19:35:15,571 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 19:35:15,572 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 19:35:15,572 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 19:35:15,577 INFO (AbstractApplicationContext.java:590)- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ddde2ef: startup date [Mon Apr 26 19:35:15 CST 2021]; root of context hierarchy
2021-04-26 19:35:16,145 INFO (PostProcessorRegistrationDelegate.java:328)- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$574228c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-26 19:35:16,255 INFO (TomcatWebServer.java:91)- Tomcat initialized with port(s): 6795 (http)
2021-04-26 19:35:16,255 INFO (DirectJDKLog.java:180)- Initializing ProtocolHandler ["http-nio-6795"]
2021-04-26 19:35:16,256 INFO (DirectJDKLog.java:180)- Starting service [Tomcat]
2021-04-26 19:35:16,256 INFO (DirectJDKLog.java:180)- Starting Servlet Engine: Apache Tomcat/8.5.31
2021-04-26 19:35:16,278 INFO (DirectJDKLog.java:180)- Initializing Spring embedded WebApplicationContext
2021-04-26 19:35:16,279 INFO (ServletWebServerApplicationContext.java:285)- Root WebApplicationContext: initialization completed in 703 ms
2021-04-26 19:35:16,315 INFO (ServletRegistrationBean.java:185)- Servlet dispatcherServlet mapped to [/]
2021-04-26 19:35:16,315 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'characterEncodingFilter' to: [/*]
2021-04-26 19:35:16,315 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-04-26 19:35:16,316 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-04-26 19:35:16,316 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'requestContextFilter' to: [/*]
2021-04-26 19:35:16,568 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getUnitCoverResult],methods=[GET]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getCoverResult(java.lang.String)
2021-04-26 19:35:16,569 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/triggerUnitCover],methods=[POST]}" onto public com.xiaoju.basetech.entity.HttpResult<java.lang.Boolean> com.xiaoju.basetech.controller.CodeCovController.triggerUnitCover(com.xiaoju.basetech.entity.UnitCoverRequest)
2021-04-26 19:35:16,569 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/triggerEnvCov],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<java.lang.Boolean> com.xiaoju.basetech.controller.CodeCovController.triggerEnvCov(com.xiaoju.basetech.entity.EnvCoverRequest)
2021-04-26 19:35:16,570 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getEnvCoverResult],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getEnvCoverResult(java.lang.String)
2021-04-26 19:35:16,571 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getLocalCoverResult],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getEnvLocalCoverResult(com.xiaoju.basetech.entity.LocalHostRequestParam)
2021-04-26 19:35:16,574 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-04-26 19:35:16,574 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-04-26 19:35:16,574 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-04-26 19:35:16,576 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2021-04-26 19:35:16,577 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-04-26 19:35:16,632 INFO (PropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2021-04-26 19:35:16,659 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 19:35:16,708 INFO (RequestMappingHandlerAdapter.java:574)- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ddde2ef: startup date [Mon Apr 26 19:35:15 CST 2021]; root of context hierarchy
2021-04-26 19:35:16,724 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 19:35:16,724 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 19:35:16,733 INFO (ExceptionHandlerExceptionResolver.java:288)- Detected @ExceptionHandler methods in globalExceptionHandler
2021-04-26 19:35:16,814 INFO (OptionalLiveReloadServer.java:57)- LiveReload server is running on port 35729
2021-04-26 19:35:16,837 INFO (MBeanExporter.java:433)- Registering beans for JMX exposure on startup
2021-04-26 19:35:16,838 INFO (MBeanExporter.java:895)- Bean with name 'dataSource' has been autodetected for JMX exposure
2021-04-26 19:35:16,842 INFO (MBeanExporter.java:668)- Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2021-04-26 19:35:16,843 INFO (DefaultLifecycleProcessor.java:351)- Starting beans in phase 2147483647
2021-04-26 19:35:16,844 INFO (DocumentationPluginsBootstrapper.java:147)- Context refreshed
2021-04-26 19:35:16,844 INFO (DocumentationPluginsBootstrapper.java:150)- Found 1 custom documentation plugin(s)
2021-04-26 19:35:16,850 INFO (ApiListingReferenceScanner.java:41)- Scanning for api listing references
2021-04-26 19:35:16,903 INFO (DirectJDKLog.java:180)- Starting ProtocolHandler ["http-nio-6795"]
2021-04-26 19:35:16,904 INFO (DirectJDKLog.java:180)- Using a shared selector for servlet write/read
2021-04-26 19:35:16,909 INFO (TomcatWebServer.java:206)- Tomcat started on port(s): 6795 (http) with context path ''
2021-04-26 19:35:16,911 INFO (StartupInfoLogger.java:59)- Started CodeCovApplication in 1.376 seconds (JVM running for 92.966)
2021-04-26 19:35:16,911 INFO (StartupInfoLogger.java:59)- Started CodeCovApplication in 1.376 seconds (JVM running for 92.966)
2021-04-26 19:35:17,398 INFO (ConditionEvaluationDeltaLoggingListener.java:56)- Condition evaluation unchanged
2021-04-26 19:35:26,904 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 19:35:26,904 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 19:35:26,906 INFO (HikariDataSource.java:110)- HikariPool-2 - Starting...
2021-04-26 19:35:26,947 INFO (HikariDataSource.java:123)- HikariPool-2 - Start completed.
2021-04-26 19:35:26,947 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 19:35:26,947 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 19:35:26,947 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 17:35:26(String)
2021-04-26 19:35:26,947 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 17:35:26(String)
2021-04-26 19:35:26,951 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 19:35:26,951 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 19:35:26,951 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:35:26,951 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:35:26,952 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:35:26,952 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:35:26,959 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:35:26,959 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:35:26,960 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:35:26,960 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:35:36,974 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:35:36,974 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:35:36,975 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:35:36,975 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:35:36,982 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:35:36,982 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:35:36,983 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:35:36,983 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:35:47,003 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:35:47,003 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:35:47,004 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:35:47,004 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:35:47,008 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:35:47,008 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:35:47,008 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:35:47,008 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:35:57,019 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:35:57,019 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:35:57,020 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:35:57,020 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:35:57,022 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:35:57,022 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:35:57,022 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:35:57,022 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:36:07,036 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:36:07,036 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:36:07,037 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:36:07,037 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:36:07,041 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:36:07,041 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:36:07,042 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:36:07,042 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:36:17,059 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:36:17,059 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:36:17,059 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:36:17,059 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:36:17,065 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:36:17,065 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:36:17,067 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:36:17,067 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:36:27,076 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:36:27,076 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:36:27,076 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:36:27,076 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:36:27,081 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:36:27,081 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:36:27,082 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:36:27,082 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:36:37,098 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:36:37,098 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:36:37,099 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:36:37,099 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:36:37,107 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:36:37,107 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:36:37,107 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:36:37,107 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:36:47,125 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:36:47,125 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:36:47,126 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:36:47,126 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:36:47,134 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:36:47,134 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:36:47,135 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:36:47,135 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:36:57,152 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:36:57,152 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:36:57,152 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:36:57,152 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:36:57,154 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:36:57,154 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:36:57,155 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:36:57,155 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:37:07,164 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:37:07,164 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:37:07,165 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:37:07,165 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:37:07,174 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:37:07,174 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:37:07,175 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:37:07,175 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:37:17,189 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:37:17,189 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:37:17,190 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:37:17,190 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:37:17,198 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:37:17,198 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:37:17,198 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:37:17,198 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:37:27,203 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:37:27,203 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:37:27,204 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:37:27,204 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:37:27,205 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:37:27,205 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:37:27,206 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:37:27,206 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:37:37,211 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:37:37,211 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:37:37,211 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:37:37,211 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:37:37,215 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:37:37,215 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:37:37,216 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:37:37,216 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:37:47,234 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:37:47,234 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:37:47,235 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:37:47,235 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:37:47,240 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:37:47,240 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:37:47,241 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:37:47,241 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:37:57,248 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:37:57,248 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:37:57,249 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:37:57,249 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:37:57,257 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:37:57,257 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:37:57,257 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:37:57,257 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:38:07,266 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:38:07,266 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:38:07,267 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:38:07,267 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:38:07,271 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:38:07,271 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:38:07,271 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:38:07,271 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:38:17,277 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:38:17,277 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:38:17,277 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:38:17,277 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:38:17,279 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:38:17,279 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:38:17,279 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:38:17,279 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:38:27,288 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:38:27,288 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:38:27,288 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:38:27,288 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:38:27,291 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:38:27,291 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:38:27,292 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:38:27,292 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:38:37,297 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:38:37,297 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:38:37,297 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:38:37,297 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:38:37,302 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:38:37,302 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:38:37,302 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:38:37,302 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:38:47,312 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:38:47,312 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:38:47,313 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:38:47,313 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:38:47,317 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:38:47,317 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:38:47,318 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:38:47,318 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:38:57,331 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:38:57,331 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:38:57,331 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:38:57,331 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:38:57,334 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:38:57,334 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:38:57,335 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:38:57,335 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:39:07,345 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:39:07,345 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:39:07,345 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:39:07,345 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:39:07,346 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:39:07,346 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:39:07,347 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:39:07,347 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:39:17,364 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:39:17,364 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:39:17,365 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:39:17,365 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:39:17,372 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:39:17,372 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:39:17,372 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:39:17,372 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:39:27,383 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:39:27,383 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:39:27,384 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:39:27,384 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:39:27,389 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:39:27,389 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:39:27,389 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:39:27,389 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:39:37,399 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:39:37,399 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:39:37,400 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:39:37,400 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:39:37,406 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:39:37,406 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:39:37,407 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:39:37,407 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:39:47,420 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:39:47,420 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:39:47,421 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:39:47,421 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:39:47,428 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:39:47,428 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:39:47,429 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:39:47,429 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:39:57,437 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:39:57,437 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:39:57,438 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:39:57,438 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:39:57,442 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:39:57,442 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:39:57,443 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:39:57,443 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:40:07,449 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:40:07,449 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:40:07,449 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:40:07,449 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:40:07,453 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:40:07,453 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:40:07,453 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:40:07,453 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:40:16,910 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:40:16,910 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:40:16,911 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 19:40:16,911 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 19:40:16,913 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:40:16,913 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:40:16,913 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 19:40:16,913 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 19:40:17,470 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:40:17,470 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:40:17,471 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:40:17,471 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:40:17,475 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:40:17,475 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:40:17,475 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:40:17,475 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:40:27,484 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:40:27,484 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:40:27,485 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:40:27,485 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:40:27,488 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:40:27,488 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:40:27,489 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:40:27,489 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:40:37,501 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:40:37,501 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:40:37,501 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:40:37,501 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:40:37,507 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:40:37,507 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:40:37,508 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:40:37,508 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:40:47,519 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:40:47,519 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:40:47,519 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:40:47,519 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:40:47,524 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:40:47,524 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:40:47,524 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:40:47,524 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:40:57,541 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:40:57,541 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:40:57,542 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:40:57,542 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:40:57,547 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:40:57,547 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:40:57,548 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:40:57,548 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:41:07,552 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:41:07,552 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:41:07,552 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:41:07,552 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:41:07,554 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:41:07,554 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:41:07,554 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:41:07,554 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:41:17,571 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:41:17,571 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:41:17,572 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:41:17,572 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:41:17,578 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:41:17,578 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:41:17,578 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:41:17,578 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:41:27,593 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:41:27,593 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:41:27,593 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:41:27,593 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:41:27,594 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:41:27,594 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:41:27,595 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:41:27,595 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:41:37,609 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:41:37,609 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:41:37,609 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:41:37,609 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:41:37,611 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:41:37,611 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:41:37,612 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:41:37,612 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:41:47,619 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:41:47,619 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:41:47,620 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:41:47,620 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:41:47,626 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:41:47,626 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:41:47,627 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:41:47,627 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:41:57,643 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:41:57,643 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:41:57,643 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:41:57,643 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:41:57,649 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:41:57,649 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:41:57,650 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:41:57,650 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:42:07,663 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:42:07,663 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:42:07,663 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:42:07,663 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:42:07,664 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:42:07,664 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:42:07,665 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:42:07,665 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:42:17,678 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:42:17,678 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:42:17,678 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:42:17,678 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:42:17,683 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:42:17,683 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:42:17,683 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:42:17,683 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:42:27,685 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:42:27,685 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:42:27,685 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:42:27,685 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:42:27,686 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:42:27,686 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:42:27,687 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:42:27,687 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:42:37,702 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:42:37,702 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:42:37,703 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:42:37,703 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:42:37,705 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:42:37,705 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:42:37,705 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:42:37,705 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:42:47,726 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:42:47,726 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:42:47,726 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:42:47,726 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:42:47,730 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:42:47,730 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:42:47,731 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:42:47,731 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:42:57,742 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:42:57,742 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:42:57,742 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:42:57,742 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:42:57,748 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:42:57,748 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:42:57,749 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:42:57,749 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:43:07,759 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:43:07,759 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:43:07,759 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:43:07,759 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:43:07,766 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:43:07,766 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:43:07,767 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:43:07,767 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:43:17,776 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:43:17,776 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:43:17,776 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:43:17,776 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:43:17,780 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:43:17,780 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:43:17,781 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:43:17,781 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:43:27,796 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:43:27,796 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:43:27,797 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:43:27,797 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:43:27,803 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:43:27,803 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:43:27,803 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:43:27,803 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:43:37,815 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:43:37,815 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:43:37,816 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:43:37,816 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:43:37,819 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:43:37,819 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:43:37,820 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:43:37,820 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:43:47,836 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:43:47,836 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:43:47,837 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:43:47,837 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:43:47,842 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:43:47,842 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:43:47,842 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:43:47,842 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:43:57,857 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:43:57,857 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:43:57,857 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:43:57,857 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:43:57,861 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:43:57,861 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:43:57,862 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:43:57,862 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:44:07,871 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:44:07,871 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:44:07,872 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:44:07,872 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:44:07,873 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:44:07,873 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:44:07,873 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:44:07,873 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:44:17,895 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:44:17,895 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:44:17,895 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:44:17,895 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:44:17,903 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:44:17,903 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:44:17,903 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:44:17,903 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:44:27,909 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:44:27,909 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:44:27,910 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:44:27,910 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:44:27,914 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:44:27,914 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:44:27,914 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:44:27,914 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:44:38,128 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:44:38,128 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:44:38,129 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:44:38,129 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:44:38,136 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:44:38,136 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:44:38,137 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:44:38,137 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:44:48,151 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:44:48,151 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:44:48,151 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:44:48,151 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:44:48,156 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:44:48,156 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:44:48,157 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:44:48,157 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:44:58,163 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:44:58,163 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:44:58,163 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:44:58,163 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:44:58,165 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:44:58,165 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:44:58,165 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:44:58,165 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:45:08,172 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:45:08,172 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:45:08,173 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:45:08,173 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:45:08,178 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:45:08,178 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:45:08,179 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:45:08,179 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:45:16,936 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:45:16,936 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:45:16,936 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 19:45:16,936 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 19:45:16,941 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:45:16,941 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:45:16,941 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 19:45:16,941 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 19:45:18,193 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:45:18,193 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:45:18,193 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:45:18,193 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:45:18,203 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:45:18,203 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:45:18,204 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:45:18,204 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:45:26,963 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 19:45:26,963 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 19:45:26,971 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 19:45:26,971 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 19:45:26,971 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 17:45:26(String)
2021-04-26 19:45:26,971 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 17:45:26(String)
2021-04-26 19:45:26,983 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 19:45:26,983 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 19:45:28,213 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:45:28,213 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:45:28,213 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:45:28,213 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:45:28,220 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:45:28,220 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:45:28,221 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:45:28,221 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:50:51,547 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 18332 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 19:50:51,547 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 18332 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 19:50:51,551 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 19:50:51,551 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 19:50:51,554 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 19:50:51,554 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 19:50:51,918 INFO (AbstractApplicationContext.java:590)- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@738c6eb3: startup date [Mon Apr 26 19:50:51 CST 2021]; root of context hierarchy
2021-04-26 19:50:53,985 INFO (PostProcessorRegistrationDelegate.java:328)- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$493bf1ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-26 19:50:54,603 INFO (TomcatWebServer.java:91)- Tomcat initialized with port(s): 6795 (http)
2021-04-26 19:50:54,619 INFO (DirectJDKLog.java:180)- Initializing ProtocolHandler ["http-nio-6795"]
2021-04-26 19:50:54,633 INFO (DirectJDKLog.java:180)- Starting service [Tomcat]
2021-04-26 19:50:54,633 INFO (DirectJDKLog.java:180)- Starting Servlet Engine: Apache Tomcat/8.5.31
2021-04-26 19:50:54,638 INFO (DirectJDKLog.java:180)- The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\soft\jdk1.8.0_172\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\soft\jdk1.8.0_172\bin;C:\Program Files\Git\cmd;D:/demo/maven/apache-maven-3.6.3\bin;C:\cmder;D:\soft\jdk1.8.0_172\jre\bin;;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\admin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\IntelliJ IDEA 2020.2\bin;C:\Users\admin\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2021-04-26 19:50:54,756 INFO (DirectJDKLog.java:180)- Initializing Spring embedded WebApplicationContext
2021-04-26 19:50:54,756 INFO (ServletWebServerApplicationContext.java:285)- Root WebApplicationContext: initialization completed in 2838 ms
2021-04-26 19:50:54,967 INFO (ServletRegistrationBean.java:185)- Servlet dispatcherServlet mapped to [/]
2021-04-26 19:50:54,973 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'characterEncodingFilter' to: [/*]
2021-04-26 19:50:54,974 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-04-26 19:50:54,974 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-04-26 19:50:54,975 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'requestContextFilter' to: [/*]
2021-04-26 19:50:56,313 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getEnvCoverResult],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getEnvCoverResult(java.lang.String)
2021-04-26 19:50:56,315 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getLocalCoverResult],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getEnvLocalCoverResult(com.xiaoju.basetech.entity.LocalHostRequestParam)
2021-04-26 19:50:56,317 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/triggerEnvCov],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<java.lang.Boolean> com.xiaoju.basetech.controller.CodeCovController.triggerEnvCov(com.xiaoju.basetech.entity.EnvCoverRequest)
2021-04-26 19:50:56,318 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/triggerUnitCover],methods=[POST]}" onto public com.xiaoju.basetech.entity.HttpResult<java.lang.Boolean> com.xiaoju.basetech.controller.CodeCovController.triggerUnitCover(com.xiaoju.basetech.entity.UnitCoverRequest)
2021-04-26 19:50:56,319 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getUnitCoverResult],methods=[GET]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getCoverResult(java.lang.String)
2021-04-26 19:50:56,333 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-04-26 19:50:56,334 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-04-26 19:50:56,336 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-04-26 19:50:56,342 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2021-04-26 19:50:56,343 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-04-26 19:50:56,657 INFO (PropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2021-04-26 19:50:56,862 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 19:50:57,121 INFO (RequestMappingHandlerAdapter.java:574)- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@738c6eb3: startup date [Mon Apr 26 19:50:51 CST 2021]; root of context hierarchy
2021-04-26 19:50:57,194 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 19:50:57,194 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 19:50:57,215 INFO (ExceptionHandlerExceptionResolver.java:288)- Detected @ExceptionHandler methods in globalExceptionHandler
2021-04-26 19:50:57,702 INFO (OptionalLiveReloadServer.java:57)- LiveReload server is running on port 35729
2021-04-26 19:50:57,739 INFO (MBeanExporter.java:433)- Registering beans for JMX exposure on startup
2021-04-26 19:50:57,741 INFO (MBeanExporter.java:895)- Bean with name 'dataSource' has been autodetected for JMX exposure
2021-04-26 19:50:57,750 INFO (MBeanExporter.java:668)- Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2021-04-26 19:50:57,787 INFO (DefaultLifecycleProcessor.java:351)- Starting beans in phase 2147483647
2021-04-26 19:50:57,787 INFO (DocumentationPluginsBootstrapper.java:147)- Context refreshed
2021-04-26 19:50:57,808 INFO (DocumentationPluginsBootstrapper.java:150)- Found 1 custom documentation plugin(s)
2021-04-26 19:50:57,861 INFO (ApiListingReferenceScanner.java:41)- Scanning for api listing references
2021-04-26 19:50:58,119 INFO (DirectJDKLog.java:180)- Starting ProtocolHandler ["http-nio-6795"]
2021-04-26 19:50:58,176 INFO (DirectJDKLog.java:180)- Using a shared selector for servlet write/read
2021-04-26 19:50:58,196 INFO (TomcatWebServer.java:206)- Tomcat started on port(s): 6795 (http) with context path ''
2021-04-26 19:50:58,201 INFO (StartupInfoLogger.java:59)- Started CodeCovApplication in 7.337 seconds (JVM running for 9.753)
2021-04-26 19:50:58,201 INFO (StartupInfoLogger.java:59)- Started CodeCovApplication in 7.337 seconds (JVM running for 9.753)
2021-04-26 19:51:08,107 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 19:51:08,107 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 19:51:08,133 INFO (HikariDataSource.java:110)- HikariPool-1 - Starting...
2021-04-26 19:51:08,878 INFO (DirectJDKLog.java:180)- Initializing Spring FrameworkServlet 'dispatcherServlet'
2021-04-26 19:51:08,879 INFO (FrameworkServlet.java:494)- FrameworkServlet 'dispatcherServlet': initialization started
2021-04-26 19:51:08,915 INFO (FrameworkServlet.java:509)- FrameworkServlet 'dispatcherServlet': initialization completed in 35 ms
2021-04-26 19:51:10,970 INFO (HikariDataSource.java:123)- HikariPool-1 - Start completed.
2021-04-26 19:51:11,015 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 19:51:11,015 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 19:51:11,037 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 17:51:08(String)
2021-04-26 19:51:11,037 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 17:51:08(String)
2021-04-26 19:51:11,049 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 19:51:11,049 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 19:51:11,049 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: INSERT INTO diff_coverage_report( `job_record_uuid`, `request_status`, `type`, `giturl`, `err_msg`, `sub_module`, `base_version`, `now_version`, `now_local_path` , `base_local_path`, `from` )VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-04-26 19:51:11,049 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: INSERT INTO diff_coverage_report( `job_record_uuid`, `request_status`, `type`, `giturl`, `err_msg`, `sub_module`, `base_version`, `now_version`, `now_local_path` , `base_local_path`, `from` )VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-04-26 19:51:11,052 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:51:11,052 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:51:11,053 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:51:11,053 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:51:11,059 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 4(String), 1(Integer), 1(Integer), https://git.qiweioa.cn/hnnh/do1cloud-ask.git(String), (String), (String), master(String), testjacoco(String), (String), (String), 2(Integer)
2021-04-26 19:51:11,059 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 4(String), 1(Integer), 1(Integer), https://git.qiweioa.cn/hnnh/do1cloud-ask.git(String), (String), (String), master(String), testjacoco(String), (String), (String), 2(Integer)
2021-04-26 19:51:11,098 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:51:11,098 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:51:11,099 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: INSERT INTO diff_deploy_info( `job_record_uuid`, `address`, `port` )VALUES ( ?, ?, ? ) 
2021-04-26 19:51:11,099 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: INSERT INTO diff_deploy_info( `job_record_uuid`, `address`, `port` )VALUES ( ?, ?, ? ) 
2021-04-26 19:51:11,102 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 4(String), 127.0.0.1(String), 18513(Integer)
2021-04-26 19:51:11,102 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 4(String), 127.0.0.1(String), 18513(Integer)
2021-04-26 19:51:11,110 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:51:11,110 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:51:11,111 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:51:11,111 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:51:11,117 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:51:11,117 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:51:11,118 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 19:51:11,118 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 19:51:11,121 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), (String), (String), 4(String)
2021-04-26 19:51:11,121 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), (String), (String), 4(String)
2021-04-26 19:51:11,126 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:51:11,126 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:51:11,679 INFO (CodeCloneExecutor.java:45)- uuid 4开始下载代码...
2021-04-26 19:51:11,679 INFO (CodeCloneExecutor.java:45)- uuid 4开始下载代码...
2021-04-26 19:51:49,457 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:51:49,457 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:51:49,458 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:51:49,458 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:51:49,464 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:51:49,464 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:51:49,464 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:51:49,464 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:51:59,475 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:51:59,475 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:51:59,475 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:51:59,475 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:51:59,479 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:51:59,479 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:51:59,480 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:51:59,480 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:52:05,327 INFO (CodeCloneExecutor.java:52)- uuid 4完成下载代码...
2021-04-26 19:52:05,327 INFO (CodeCloneExecutor.java:52)- uuid 4完成下载代码...
2021-04-26 19:52:05,547 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 19:52:05,547 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 19:52:05,548 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 102(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), http://172.21.96.1:8899/logs/4.log(String), C:\Users\admin/app/super_jacoco/clonecode/4/testjacoco(String), 4(String)
2021-04-26 19:52:05,548 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 102(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), http://172.21.96.1:8899/logs/4.log(String), C:\Users\admin/app/super_jacoco/clonecode/4/testjacoco(String), 4(String)
2021-04-26 19:52:05,556 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:52:05,556 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:52:05,557 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 19:52:05,557 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 19:52:05,558 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 3(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), http://172.21.96.1:8899/logs/4.log(String), C:\Users\admin/app/super_jacoco/clonecode/4/testjacoco(String), 4(String)
2021-04-26 19:52:05,558 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 3(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), http://172.21.96.1:8899/logs/4.log(String), C:\Users\admin/app/super_jacoco/clonecode/4/testjacoco(String), 4(String)
2021-04-26 19:52:05,571 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:52:05,571 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 19:52:09,688 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:52:09,688 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:52:09,689 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:52:09,689 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:52:09,692 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:52:09,692 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:52:09,692 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:52:09,692 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:52:14,870 INFO (CmdExecutor.java:43)- CmdThreadPool:java.util.concurrent.ThreadPoolExecutor@1c59a424[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]
2021-04-26 19:52:14,870 INFO (CmdExecutor.java:43)- CmdThreadPool:java.util.concurrent.ThreadPoolExecutor@1c59a424[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]
2021-04-26 19:52:14,870 INFO (CmdExecutor.java:48)- executeCmd : cmd /c cd C:\Users\admin/app/super_jacoco/clonecode/4/testjacoco&&mvn clean compile >>C:\Users\admin/report/logs/4.log
2021-04-26 19:52:14,870 INFO (CmdExecutor.java:48)- executeCmd : cmd /c cd C:\Users\admin/app/super_jacoco/clonecode/4/testjacoco&&mvn clean compile >>C:\Users\admin/report/logs/4.log
2021-04-26 19:52:54,749 WARN (HikariPool.java:758)- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m6s762ms913µs900ns).
2021-04-26 19:53:16,376 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:53:16,376 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 19:53:16,377 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:53:16,377 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 19:53:22,016 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:53:22,016 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 19:53:48,270 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:53:48,270 WARN (HikariPool.java:758)- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=53s521ms360µs400ns).
2021-04-26 19:53:48,270 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 19:55:14,157 WARN (HikariPool.java:758)- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m25s886ms896µs900ns).
2021-04-26 20:00:26,772 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:00:26,772 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:00:26,778 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:00:26,773 WARN (HikariPool.java:758)- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=5m12s616ms395µs700ns).
2021-04-26 20:00:26,778 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:00:26,782 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:00:26,782 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:00:26,783 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 20:00:26,783 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 20:00:26,784 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:00:26,784 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:00:26,784 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:00:26,784 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:00:26,789 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:00:26,789 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:00:26,790 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 20:00:26,790 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 20:00:36,799 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:00:36,799 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:00:36,800 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:00:36,800 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:00:36,808 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:00:36,808 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:00:36,809 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:00:36,809 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:00:46,816 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:00:46,816 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:00:46,817 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:00:46,817 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:00:46,822 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:00:46,822 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:00:46,822 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:00:46,822 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:00:56,845 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:00:56,845 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:00:56,847 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:00:56,847 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:00:56,857 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:00:56,857 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:00:56,858 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:00:56,858 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:01:06,867 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:01:06,867 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:01:06,867 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:01:06,867 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:01:06,870 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:01:06,870 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:01:06,872 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:01:06,872 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:01:07,588 INFO (CmdExecutor.java:56)- readLine.stop();
2021-04-26 20:01:07,588 INFO (CmdExecutor.java:56)- readLine.stop();
2021-04-26 20:01:07,588 INFO (CmdExecutor.java:58)- progressBar.stop();
2021-04-26 20:01:07,588 INFO (CmdExecutor.java:58)- progressBar.stop();
2021-04-26 20:01:07,588 INFO (CmdExecutor.java:59)- executeCmd done !!!!!!
2021-04-26 20:01:07,588 INFO (CmdExecutor.java:59)- executeCmd done !!!!!!
2021-04-26 20:01:07,589 INFO (CmdExecutor.java:60)- worker done !!!!!! times = 40s
2021-04-26 20:01:07,589 INFO (CmdExecutor.java:60)- worker done !!!!!! times = 40s
2021-04-26 20:01:07,590 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 20:01:07,590 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 20:01:07,591 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 103(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), http://172.21.96.1:8899/logs/4.log(String), C:\Users\admin/app/super_jacoco/clonecode/4/testjacoco(String), 4(String)
2021-04-26 20:01:07,591 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 103(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), http://172.21.96.1:8899/logs/4.log(String), C:\Users\admin/app/super_jacoco/clonecode/4/testjacoco(String), 4(String)
2021-04-26 20:01:07,596 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 20:01:07,596 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 20:01:07,598 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_deploy_info SET `code_path`=?, `child_modules`=? WHERE job_record_uuid=? 
2021-04-26 20:01:07,598 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_deploy_info SET `code_path`=?, `child_modules`=? WHERE job_record_uuid=? 
2021-04-26 20:01:07,598 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: C:\Users\admin/app/super_jacoco/clonecode/4/testjacoco(String), model,common,client,application,core,(String), 4(String)
2021-04-26 20:01:07,598 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: C:\Users\admin/app/super_jacoco/clonecode/4/testjacoco(String), model,common,client,application,core,(String), 4(String)
2021-04-26 20:01:07,609 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 20:01:07,609 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 20:01:08,122 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * FROM diff_deploy_info WHERE `job_record_uuid`=? 
2021-04-26 20:01:08,122 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * FROM diff_deploy_info WHERE `job_record_uuid`=? 
2021-04-26 20:01:08,122 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 4(String)
2021-04-26 20:01:08,122 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 4(String)
2021-04-26 20:01:08,128 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 1
2021-04-26 20:01:08,128 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 1
2021-04-26 20:01:08,129 INFO (CmdExecutor.java:43)- CmdThreadPool:java.util.concurrent.ThreadPoolExecutor@1c59a424[Running, pool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1]
2021-04-26 20:01:08,129 INFO (CmdExecutor.java:43)- CmdThreadPool:java.util.concurrent.ThreadPoolExecutor@1c59a424[Running, pool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1]
2021-04-26 20:01:08,129 INFO (CmdExecutor.java:48)- executeCmd : cmd /c cd C:\Users\admin/app/super_jacoco/clonecode/4/testjacoco&&java -jar C:\Users\admin/org.jacoco.cli-1.0.2-SNAPSHOT-nodeps.jar dump --address 127.0.0.1 --port 18513 --destfile ./jacoco.exec
2021-04-26 20:01:08,129 INFO (CmdExecutor.java:48)- executeCmd : cmd /c cd C:\Users\admin/app/super_jacoco/clonecode/4/testjacoco&&java -jar C:\Users\admin/org.jacoco.cli-1.0.2-SNAPSHOT-nodeps.jar dump --address 127.0.0.1 --port 18513 --destfile ./jacoco.exec
2021-04-26 20:01:08,935 INFO (CmdExecutor.java:101)- Error: Unable to access jarfile C:\Users\admin/org.jacoco.cli-1.0.2-SNAPSHOT-nodeps.jar
2021-04-26 20:01:08,943 INFO (CmdExecutor.java:56)- readLine.stop();
2021-04-26 20:01:08,943 INFO (CmdExecutor.java:56)- readLine.stop();
2021-04-26 20:01:08,944 INFO (CmdExecutor.java:58)- progressBar.stop();
2021-04-26 20:01:08,944 INFO (CmdExecutor.java:58)- progressBar.stop();
2021-04-26 20:01:08,944 INFO (CmdExecutor.java:59)- executeCmd done !!!!!!
2021-04-26 20:01:08,944 INFO (CmdExecutor.java:59)- executeCmd done !!!!!!
2021-04-26 20:01:08,944 INFO (CmdExecutor.java:60)- worker done !!!!!! times = 0s
2021-04-26 20:01:08,944 INFO (CmdExecutor.java:60)- worker done !!!!!! times = 0s
2021-04-26 20:01:08,944 ERROR (CodeCovServiceImpl.java:448)- uuid=4
2021-04-26 20:01:08,944 ERROR (CodeCovServiceImpl.java:448)- uuid=4
2021-04-26 20:01:09,425 ERROR (CodeCovServiceImpl.java:456)- uuid=4获取jacoco.exec 文件发生未知错误
java.io.IOException: Unable to delete: C:\Users\admin\app\super_jacoco\clonecode\4\testjacoco\.git\objects\pack
	at jodd.io.FileUtil.checkDeleteSuccessful(FileUtil.java:1628)
	at jodd.io.FileUtil.deleteDir(FileUtil.java:506)
	at jodd.io.FileUtil.cleanDir(FileUtil.java:535)
	at jodd.io.FileUtil.deleteDir(FileUtil.java:505)
	at jodd.io.FileUtil.cleanDir(FileUtil.java:535)
	at jodd.io.FileUtil.deleteDir(FileUtil.java:505)
	at jodd.io.FileUtil.cleanDir(FileUtil.java:535)
	at jodd.io.FileUtil.deleteDir(FileUtil.java:505)
	at jodd.io.FileUtil.cleanDir(FileUtil.java:535)
	at jodd.io.FileUtil.cleanDir(FileUtil.java:513)
	at com.xiaoju.basetech.service.impl.CodeCovServiceImpl.calculateEnvCov(CodeCovServiceImpl.java:449)
	at com.xiaoju.basetech.service.impl.CodeCovServiceImpl.lambda$triggerEnvCov$0(CodeCovServiceImpl.java:319)
	at java.lang.Thread.run(Thread.java:748)
2021-04-26 20:01:09,425 ERROR (CodeCovServiceImpl.java:456)- uuid=4获取jacoco.exec 文件发生未知错误
java.io.IOException: Unable to delete: C:\Users\admin\app\super_jacoco\clonecode\4\testjacoco\.git\objects\pack
	at jodd.io.FileUtil.checkDeleteSuccessful(FileUtil.java:1628)
	at jodd.io.FileUtil.deleteDir(FileUtil.java:506)
	at jodd.io.FileUtil.cleanDir(FileUtil.java:535)
	at jodd.io.FileUtil.deleteDir(FileUtil.java:505)
	at jodd.io.FileUtil.cleanDir(FileUtil.java:535)
	at jodd.io.FileUtil.deleteDir(FileUtil.java:505)
	at jodd.io.FileUtil.cleanDir(FileUtil.java:535)
	at jodd.io.FileUtil.deleteDir(FileUtil.java:505)
	at jodd.io.FileUtil.cleanDir(FileUtil.java:535)
	at jodd.io.FileUtil.cleanDir(FileUtil.java:513)
	at com.xiaoju.basetech.service.impl.CodeCovServiceImpl.calculateEnvCov(CodeCovServiceImpl.java:449)
	at com.xiaoju.basetech.service.impl.CodeCovServiceImpl.lambda$triggerEnvCov$0(CodeCovServiceImpl.java:319)
	at java.lang.Thread.run(Thread.java:748)
2021-04-26 20:01:09,426 ERROR (CodeCovServiceImpl.java:457)- uuid=4
2021-04-26 20:01:09,426 ERROR (CodeCovServiceImpl.java:457)- uuid=4
2021-04-26 20:01:09,428 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 20:01:09,428 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 20:01:09,429 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 212(Integer), 获取jacoco.exec 文件发生未知错误(String), -1.0(Double), -1.0(Double), (String), (String), http://172.21.96.1:8899/logs/4.log(String), C:\Users\admin/app/super_jacoco/clonecode/4/testjacoco(String), 4(String)
2021-04-26 20:01:09,429 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 212(Integer), 获取jacoco.exec 文件发生未知错误(String), -1.0(Double), -1.0(Double), (String), (String), http://172.21.96.1:8899/logs/4.log(String), C:\Users\admin/app/super_jacoco/clonecode/4/testjacoco(String), 4(String)
2021-04-26 20:01:09,434 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 20:01:09,434 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 20:01:11,060 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 20:01:11,060 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 20:01:11,066 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 20:01:11,066 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 20:01:11,067 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 18:01:11(String)
2021-04-26 20:01:11,067 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 18:01:11(String)
2021-04-26 20:01:11,069 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 20:01:11,069 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 20:01:16,879 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:01:16,879 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:01:16,880 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:01:16,880 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:01:16,886 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:01:16,886 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:01:16,887 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:01:16,887 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:01:26,903 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:01:26,903 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:01:26,904 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:01:26,904 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:01:26,907 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:01:26,907 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:01:26,908 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:01:26,908 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:01:36,917 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:01:36,917 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:01:36,918 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:01:36,918 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:01:36,924 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:01:36,924 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:01:36,925 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:01:36,925 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:01:46,939 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:01:46,939 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:01:46,939 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:01:46,939 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:01:46,951 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:01:46,951 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:01:46,953 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:01:46,953 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:01:57,027 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:01:57,027 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:01:57,027 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:01:57,027 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:01:57,029 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:01:57,029 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:01:57,030 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:01:57,030 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:02:07,061 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:02:07,061 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:02:07,063 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:02:07,063 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:02:07,077 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:02:07,077 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:02:07,077 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:02:07,077 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:02:17,092 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:02:17,092 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:02:17,093 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:02:17,093 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:02:17,165 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:02:17,165 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:02:17,165 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:02:17,165 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:02:27,184 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:02:27,184 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:02:27,185 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:02:27,185 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:02:27,198 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:02:27,198 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:02:27,200 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:02:27,200 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:02:37,339 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:02:37,339 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:02:37,340 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:02:37,340 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:02:37,349 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:02:37,349 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:02:37,350 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:02:37,350 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:02:47,394 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:02:47,394 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:02:47,395 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:02:47,395 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:02:47,401 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:02:47,401 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:02:47,402 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:02:47,402 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:02:57,421 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:02:57,421 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:02:57,422 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:02:57,422 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:02:57,433 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:02:57,433 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:02:57,433 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:02:57,433 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:03:08,004 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:03:08,004 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:03:08,005 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:03:08,005 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:03:08,702 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:03:08,702 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:03:08,702 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:03:08,702 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:03:18,713 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:03:18,713 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:03:18,714 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:03:18,714 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:03:18,716 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:03:18,716 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:03:18,717 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:03:18,717 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:03:29,031 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:03:29,031 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:03:29,032 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:03:29,032 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:03:29,059 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:03:29,059 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:03:29,060 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:03:29,060 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:03:39,076 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:03:39,076 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:03:39,077 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:03:39,077 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:03:39,084 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:03:39,084 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:03:39,084 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:03:39,084 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:03:49,162 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:03:49,162 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:03:49,162 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:03:49,162 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:03:49,166 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:03:49,166 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:03:49,167 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:03:49,167 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:03:59,192 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:03:59,192 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:03:59,192 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:03:59,192 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:03:59,194 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:03:59,194 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:03:59,195 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:03:59,195 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:04:09,212 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:04:09,212 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:04:09,213 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:04:09,213 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:04:09,217 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:04:09,217 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:04:09,218 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:04:09,218 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:04:19,227 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:04:19,227 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:04:19,228 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:04:19,228 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:04:19,234 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:04:19,234 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:04:19,235 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:04:19,235 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:04:29,247 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:04:29,247 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:04:29,247 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:04:29,247 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:04:29,254 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:04:29,254 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:04:29,255 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:04:29,255 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:04:39,262 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:04:39,262 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:04:39,263 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:04:39,263 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:04:39,265 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:04:39,265 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:04:39,265 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:04:39,265 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:04:49,276 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:04:49,276 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:04:49,277 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:04:49,277 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:04:49,279 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:04:49,279 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:04:49,279 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:04:49,279 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:04:59,287 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:04:59,287 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:04:59,288 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:04:59,288 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:04:59,295 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:04:59,295 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:04:59,296 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:04:59,296 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:05:09,307 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:05:09,307 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:05:09,308 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:05:09,308 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:05:09,311 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:05:09,311 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:05:09,312 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:05:09,312 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:05:19,345 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:05:19,345 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:05:19,348 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:05:19,348 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:05:19,356 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:05:19,356 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:05:19,358 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:05:19,358 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:05:26,799 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:05:26,799 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:05:26,800 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 20:05:26,800 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 20:05:26,806 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:05:26,806 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:05:26,807 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 20:05:26,807 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 20:05:29,375 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:05:29,375 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:05:29,376 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:05:29,376 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:05:29,381 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:05:29,381 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:05:29,382 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:05:29,382 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:05:39,428 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:05:39,428 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:05:39,429 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:05:39,429 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:05:39,460 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:05:39,460 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:05:39,460 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:05:39,460 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:05:49,476 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:05:49,476 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:05:49,477 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:05:49,477 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:05:49,480 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:05:49,480 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:05:49,480 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:05:49,480 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:05:59,488 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:05:59,488 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:05:59,489 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:05:59,489 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:05:59,491 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:05:59,491 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:05:59,492 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:05:59,492 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:06:09,506 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:06:09,506 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:06:09,507 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:06:09,507 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:06:09,510 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:06:09,510 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:06:09,511 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:06:09,511 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:06:19,523 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:06:19,523 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:06:19,524 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:06:19,524 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:06:19,528 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:06:19,528 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:06:19,528 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:06:19,528 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:06:29,532 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:06:29,532 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:06:29,532 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:06:29,532 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:06:29,535 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:06:29,535 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:06:29,536 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:06:29,536 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:06:39,550 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:06:39,550 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:06:39,551 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:06:39,551 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:06:39,555 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:06:39,555 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:06:39,555 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:06:39,555 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:06:49,565 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:06:49,565 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:06:49,566 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:06:49,566 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:06:49,568 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:06:49,568 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:06:49,569 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:06:49,569 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:06:59,586 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:06:59,586 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:06:59,586 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:06:59,586 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:06:59,591 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:06:59,591 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:06:59,592 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:06:59,592 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:07:09,601 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:07:09,601 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:07:09,602 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:07:09,602 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:07:09,609 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:07:09,609 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:07:09,610 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:07:09,610 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:07:19,627 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:07:19,627 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:07:19,628 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:07:19,628 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:07:19,635 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:07:19,635 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:07:19,635 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:07:19,635 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:07:29,645 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:07:29,645 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:07:29,645 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:07:29,645 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:07:29,652 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:07:29,652 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:07:29,652 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:07:29,652 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:07:39,669 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:07:39,669 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:07:39,670 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:07:39,670 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:07:39,677 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:07:39,677 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:07:39,677 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:07:39,677 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:07:49,691 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:07:49,691 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:07:49,692 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:07:49,692 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:07:49,697 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:07:49,697 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:07:49,698 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:07:49,698 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:07:59,715 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:07:59,715 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:07:59,716 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:07:59,716 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:07:59,721 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:07:59,721 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:07:59,721 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:07:59,721 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:08:09,740 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:08:09,740 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:08:09,741 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:08:09,741 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:08:09,748 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:08:09,748 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:08:09,749 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:08:09,749 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:08:19,766 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:08:19,766 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:08:19,767 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:08:19,767 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:08:19,773 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:08:19,773 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:08:19,773 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:08:19,773 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:08:29,780 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:08:29,780 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:08:29,780 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:08:29,780 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:08:29,784 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:08:29,784 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:08:29,785 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:08:29,785 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:08:39,791 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:08:39,791 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:08:39,791 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:08:39,791 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:08:39,796 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:08:39,796 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:08:39,797 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:08:39,797 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:08:49,807 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:08:49,807 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:08:49,807 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:08:49,807 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:08:49,810 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:08:49,810 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:08:49,811 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:08:49,811 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:08:59,830 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:08:59,830 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:08:59,830 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:08:59,830 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:08:59,834 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:08:59,834 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:08:59,835 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:08:59,835 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:09:09,847 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:09:09,847 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:09:09,848 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:09:09,848 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:09:09,855 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:09:09,855 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:09:09,856 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:09:09,856 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:09:19,876 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:09:19,876 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:09:19,877 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:09:19,877 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:09:19,885 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:09:19,885 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:09:19,886 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:09:19,886 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:09:29,906 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:09:29,906 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:09:29,907 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:09:29,907 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:09:29,913 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:09:29,913 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:09:29,914 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:09:29,914 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:09:39,919 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:09:39,919 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:09:39,920 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:09:39,920 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:09:39,925 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:09:39,925 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:09:39,926 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:09:39,926 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:09:49,934 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:09:49,934 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:09:49,935 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:09:49,935 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:09:49,939 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:09:49,939 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:09:49,939 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:09:49,939 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:09:59,946 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:09:59,946 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:09:59,947 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:09:59,947 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:09:59,953 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:09:59,953 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:09:59,953 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:09:59,953 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:10:09,966 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:10:09,966 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:10:09,967 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:10:09,967 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:10:09,972 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:10:09,972 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:10:09,972 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:10:09,972 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:10:19,985 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:10:19,985 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:10:19,986 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:10:19,986 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:10:19,990 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:10:19,990 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:10:19,990 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:10:19,990 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:10:26,815 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:10:26,815 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:10:26,816 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 20:10:26,816 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 20:10:26,823 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:10:26,823 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:10:26,824 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 20:10:26,824 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 20:10:30,009 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:10:30,009 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:10:30,010 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:10:30,010 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:10:30,016 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:10:30,016 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:10:30,017 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:10:30,017 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:10:40,034 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:10:40,034 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:10:40,035 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:10:40,035 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:10:40,037 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:10:40,037 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:10:40,038 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:10:40,038 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:10:50,046 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:10:50,046 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:10:50,047 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:10:50,047 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:10:50,051 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:10:50,051 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:10:50,052 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:10:50,052 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:11:00,058 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:11:00,058 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:11:00,059 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:11:00,059 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:11:00,064 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:11:00,064 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:11:00,065 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:11:00,065 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:11:10,088 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:11:10,088 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:11:10,089 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:11:10,089 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:11:10,093 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:11:10,093 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:11:10,094 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:11:10,094 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:11:11,080 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 20:11:11,080 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 20:11:11,084 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 20:11:11,084 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 20:11:11,085 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 18:11:11(String)
2021-04-26 20:11:11,085 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 18:11:11(String)
2021-04-26 20:11:11,096 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 20:11:11,096 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 20:11:20,106 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:11:20,106 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:11:20,106 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:11:20,106 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:11:20,110 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:11:20,110 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:11:20,111 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:11:20,111 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:11:30,119 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:11:30,119 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:11:30,120 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:11:30,120 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:11:30,124 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:11:30,124 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:11:30,124 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:11:30,124 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:11:40,128 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:11:40,128 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:11:40,128 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:11:40,128 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:11:40,133 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:11:40,133 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:11:40,134 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:11:40,134 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:11:50,149 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:11:50,149 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:11:50,149 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:11:50,149 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:11:50,157 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:11:50,157 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:11:50,158 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:11:50,158 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:12:00,176 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:12:00,176 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:12:00,176 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:12:00,176 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:12:00,181 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:12:00,181 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:12:00,181 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:12:00,181 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:12:10,198 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:12:10,198 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:12:10,199 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:12:10,199 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:12:10,206 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:12:10,206 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:12:10,207 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:12:10,207 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:12:20,213 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:12:20,213 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:12:20,214 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:12:20,214 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:12:20,223 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:12:20,223 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:12:20,224 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:12:20,224 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:12:30,245 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:12:30,245 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:12:30,246 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:12:30,246 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:12:30,250 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:12:30,250 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:12:30,251 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:12:30,251 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:12:40,272 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:12:40,272 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:12:40,273 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:12:40,273 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:12:40,278 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:12:40,278 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:12:40,279 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:12:40,279 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:12:50,301 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:12:50,301 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:12:50,302 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:12:50,302 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:12:50,309 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:12:50,309 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:12:50,310 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:12:50,310 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:13:00,329 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:13:00,329 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:13:00,330 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:13:00,330 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:13:00,338 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:13:00,338 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:13:00,339 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:13:00,339 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:13:10,348 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:13:10,348 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:13:10,348 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:13:10,348 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:13:10,354 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:13:10,354 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:13:10,354 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:13:10,354 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:13:20,377 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:13:20,377 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:13:20,378 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:13:20,378 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:13:20,385 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:13:20,385 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:13:20,385 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:13:20,385 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:13:30,403 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:13:30,403 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:13:30,404 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:13:30,404 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:13:30,408 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:13:30,408 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:13:30,408 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:13:30,408 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:13:40,417 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:13:40,417 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:13:40,417 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:13:40,417 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:13:40,421 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:13:40,421 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:13:40,422 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:13:40,422 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:13:50,427 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:13:50,427 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:13:50,428 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:13:50,428 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:13:50,429 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:13:50,429 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:13:50,430 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:13:50,430 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:14:00,440 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:14:00,440 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:14:00,440 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:14:00,440 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:14:00,443 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:14:00,443 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:14:00,443 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:14:00,443 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:14:10,452 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:14:10,452 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:14:10,453 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:14:10,453 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:14:10,456 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:14:10,456 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:14:10,456 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:14:10,456 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:14:20,465 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:14:20,465 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:14:20,466 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:14:20,466 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:14:20,467 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:14:20,467 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:14:20,468 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:14:20,468 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:14:30,476 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:14:30,476 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:14:30,477 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:14:30,477 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:14:30,481 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:14:30,481 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:14:30,482 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:14:30,482 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:14:40,498 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:14:40,498 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:14:40,498 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:14:40,498 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:14:40,520 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:14:40,520 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:14:40,521 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:14:40,521 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:14:50,541 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:14:50,541 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:14:50,541 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:14:50,541 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:14:50,546 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:14:50,546 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:14:50,546 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:14:50,546 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:15:00,566 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:15:00,566 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:15:00,567 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:15:00,567 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:15:00,575 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:15:00,575 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:15:00,576 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:15:00,576 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:15:10,594 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:15:10,594 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:15:10,594 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:15:10,594 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:15:10,600 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:15:10,600 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:15:10,601 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:15:10,601 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:15:20,611 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:15:20,611 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:15:20,611 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:15:20,611 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:15:20,616 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:15:20,616 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:15:20,617 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:15:20,617 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:15:26,836 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:15:26,836 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:15:26,836 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 20:15:26,836 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 20:15:26,842 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:15:26,842 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:15:26,843 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 20:15:26,843 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 20:15:30,638 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:15:30,638 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:15:30,638 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:15:30,638 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:15:30,643 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:15:30,643 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:15:30,644 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:15:30,644 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:15:40,655 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:15:40,655 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:15:40,656 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:15:40,656 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:15:40,663 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:15:40,663 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:15:40,663 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:15:40,663 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:15:50,674 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:15:50,674 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:15:50,675 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:15:50,675 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:15:50,677 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:15:50,677 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:15:50,678 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:15:50,678 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:16:00,683 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:16:00,683 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:16:00,684 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:16:00,684 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:16:00,688 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:16:00,688 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:16:00,688 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:16:00,688 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:16:10,700 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:16:10,700 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:16:10,701 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:16:10,701 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:16:10,708 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:16:10,708 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:16:10,708 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:16:10,708 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:16:20,726 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:16:20,726 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:16:20,727 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:16:20,727 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:16:20,734 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:16:20,734 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:16:20,735 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:16:20,735 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:16:30,740 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:16:30,740 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:16:30,742 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:16:30,742 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:16:30,743 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:16:30,743 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:16:30,743 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:16:30,743 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:16:40,764 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:16:40,764 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:16:40,765 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:16:40,765 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:16:40,771 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:16:40,771 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:16:40,772 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:16:40,772 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:16:50,787 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:16:50,787 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:16:50,788 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:16:50,788 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:16:50,794 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:16:50,794 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:16:50,795 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:16:50,795 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:17:00,799 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:17:00,799 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:17:00,800 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:17:00,800 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:17:00,803 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:17:00,803 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:17:00,804 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:17:00,804 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:17:10,818 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:17:10,818 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:17:10,819 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:17:10,819 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:17:10,824 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:17:10,824 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:17:10,824 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:17:10,824 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:17:20,839 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:17:20,839 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:17:20,839 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:17:20,839 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:17:20,846 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:17:20,846 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:17:20,847 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:17:20,847 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:17:30,860 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:17:30,860 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:17:30,861 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:17:30,861 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:17:30,866 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:17:30,866 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:17:30,867 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:17:30,867 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:17:40,877 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:17:40,877 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:17:40,877 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:17:40,877 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:17:40,881 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:17:40,881 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:17:40,881 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:17:40,881 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:17:50,893 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:17:50,893 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:17:50,893 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:17:50,893 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:17:50,895 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:17:50,895 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:17:50,895 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:17:50,895 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:18:00,908 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:18:00,908 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:18:00,908 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:18:00,908 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:18:00,915 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:18:00,915 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:18:00,916 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:18:00,916 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:18:10,935 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:18:10,935 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:18:10,936 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:18:10,936 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:18:10,941 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:18:10,941 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:18:10,942 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:18:10,942 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:18:20,949 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:18:20,949 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:18:20,950 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:18:20,950 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:18:20,955 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:18:20,955 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:18:20,955 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:18:20,955 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:18:30,970 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:18:30,970 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:18:30,971 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:18:30,971 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:18:30,974 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:18:30,974 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:18:30,975 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:18:30,975 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:18:41,010 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:18:41,010 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:18:41,010 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:18:41,010 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:18:41,016 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:18:41,016 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:18:41,016 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:18:41,016 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:18:51,036 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:18:51,036 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:18:51,037 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:18:51,037 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:18:51,044 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:18:51,044 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:18:51,045 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:18:51,045 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:19:01,050 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:19:01,050 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:19:01,051 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:19:01,051 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:19:01,054 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:19:01,054 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:19:01,054 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:19:01,054 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:19:11,066 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:19:11,066 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:19:11,067 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:19:11,067 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:19:11,072 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:19:11,072 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:19:11,073 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:19:11,073 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:19:21,091 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:19:21,091 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:19:21,092 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:19:21,092 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:19:21,095 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:19:21,095 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:19:21,096 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:19:21,096 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:19:31,112 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:19:31,112 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:19:31,113 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:19:31,113 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:19:31,117 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:19:31,117 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:19:31,118 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:19:31,118 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:19:41,129 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:19:41,129 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:19:41,130 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:19:41,130 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:19:41,138 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:19:41,138 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:19:41,138 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:19:41,138 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:19:51,145 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:19:51,145 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:19:51,146 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:19:51,146 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:19:51,150 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:19:51,150 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:19:51,151 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:19:51,151 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:20:01,167 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:20:01,167 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:20:01,167 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:20:01,167 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:20:01,172 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:20:01,172 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:20:01,172 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:20:01,172 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:20:11,188 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:20:11,188 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:20:11,189 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:20:11,189 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:20:11,194 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:20:11,194 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:20:11,194 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:20:11,194 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:20:21,210 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:20:21,210 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:20:21,210 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:20:21,210 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:20:21,213 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:20:21,213 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:20:21,214 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:20:21,214 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:20:26,854 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:20:26,854 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:20:26,855 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 20:20:26,855 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 20:20:26,859 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:20:26,859 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:20:26,860 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 20:20:26,860 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 20:20:31,228 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:20:31,228 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:20:31,228 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:20:31,228 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:20:31,237 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:20:31,237 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:20:31,238 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:20:31,238 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:20:41,253 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:20:41,253 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:20:41,254 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:20:41,254 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:20:41,260 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:20:41,260 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:20:41,261 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:20:41,261 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:20:51,279 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:20:51,279 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:20:51,280 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:20:51,280 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:20:51,285 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:20:51,285 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:20:51,286 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:20:51,286 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:21:01,303 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:21:01,303 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:21:01,304 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:21:01,304 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:21:01,306 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:21:01,306 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:21:01,307 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:21:01,307 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:21:11,112 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 20:21:11,112 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 20:21:11,115 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 20:21:11,115 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 20:21:11,116 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 18:21:11(String)
2021-04-26 20:21:11,116 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 18:21:11(String)
2021-04-26 20:21:11,118 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 20:21:11,118 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 20:21:11,310 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:21:11,310 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:21:11,310 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:21:11,310 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:21:11,313 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:21:11,313 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:21:11,314 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:21:11,314 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:21:21,335 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:21:21,335 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:21:21,336 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:21:21,336 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:21:21,341 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:21:21,341 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:21:21,342 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:21:21,342 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:21:31,358 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:21:31,358 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:21:31,359 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:21:31,359 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:21:31,364 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:21:31,364 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:21:31,365 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:21:31,365 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:21:41,381 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:21:41,381 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:21:41,382 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:21:41,382 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:21:41,383 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:21:41,383 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:21:41,384 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:21:41,384 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:21:51,395 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:21:51,395 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:21:51,395 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:21:51,395 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:21:51,398 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:21:51,398 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:21:51,398 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:21:51,398 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:22:01,411 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:22:01,411 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:22:01,411 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:22:01,411 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:22:01,420 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:22:01,420 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:22:01,420 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:22:01,420 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:22:11,435 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:22:11,435 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:22:11,436 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:22:11,436 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:22:11,441 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:22:11,441 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:22:11,442 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:22:11,442 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:22:21,459 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:22:21,459 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:22:21,459 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:22:21,459 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:22:21,461 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:22:21,461 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:22:21,462 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:22:21,462 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:22:31,468 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:22:31,468 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:22:31,469 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:22:31,469 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:22:31,472 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:22:31,472 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:22:31,473 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:22:31,473 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:22:41,481 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:22:41,481 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:22:41,482 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:22:41,482 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:22:41,484 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:22:41,484 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:22:41,485 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:22:41,485 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:22:51,498 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:22:51,498 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:22:51,499 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:22:51,499 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:22:51,503 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:22:51,503 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:22:51,503 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:22:51,503 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:23:01,519 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:23:01,519 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:23:01,520 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:23:01,520 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:23:01,527 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:23:01,527 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:23:01,528 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:23:01,528 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:23:11,541 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:23:11,541 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:23:11,542 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:23:11,542 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:23:11,546 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:23:11,546 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:23:11,546 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:23:11,546 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:23:21,564 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:23:21,564 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:23:21,564 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:23:21,564 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:23:21,567 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:23:21,567 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:23:21,567 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:23:21,567 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:23:31,578 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:23:31,578 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:23:31,578 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:23:31,578 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:23:31,586 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:23:31,586 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:23:31,587 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:23:31,587 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:23:41,599 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:23:41,599 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:23:41,600 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:23:41,600 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:23:41,606 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:23:41,606 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:23:41,607 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:23:41,607 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:23:51,622 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:23:51,622 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:23:51,622 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:23:51,622 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:23:51,627 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:23:51,627 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:23:51,628 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:23:51,628 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:24:01,640 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:24:01,640 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:24:01,641 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:24:01,641 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:24:01,643 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:24:01,643 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:24:01,643 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:24:01,643 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:24:11,657 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:24:11,657 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:24:11,658 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:24:11,658 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:24:11,665 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:24:11,665 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:24:11,666 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:24:11,666 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:24:21,673 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:24:21,673 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:24:21,674 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:24:21,674 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:24:21,675 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:24:21,675 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:24:21,676 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:24:21,676 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:24:31,685 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:24:31,685 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:24:31,686 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:24:31,686 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:24:31,687 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:24:31,687 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:24:31,688 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:24:31,688 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:24:41,705 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:24:41,705 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:24:41,706 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:24:41,706 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:24:41,709 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:24:41,709 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:24:41,711 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:24:41,711 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:24:51,721 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:24:51,721 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:24:51,722 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:24:51,722 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:24:51,728 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:24:51,728 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:24:51,729 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:24:51,729 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:25:01,741 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:25:01,741 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:25:01,742 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:25:01,742 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:25:01,748 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:25:01,748 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:25:01,749 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:25:01,749 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:25:11,768 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:25:11,768 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:25:11,768 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:25:11,768 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:25:11,774 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:25:11,774 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:25:11,774 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:25:11,774 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:25:21,790 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:25:21,790 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:25:21,791 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:25:21,791 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:25:21,794 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:25:21,794 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:25:21,794 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:25:21,794 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:25:26,882 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:25:26,882 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:25:26,883 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 20:25:26,883 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 20:25:26,890 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:25:26,890 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:25:26,890 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 20:25:26,890 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 20:25:31,814 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:25:31,814 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:25:31,814 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:25:31,814 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:25:31,832 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:25:31,832 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:25:31,832 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:25:31,832 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:25:41,840 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:25:41,840 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:25:41,840 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:25:41,840 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:25:41,844 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:25:41,844 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:25:41,845 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:25:41,845 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:25:51,848 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:25:51,848 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:25:51,849 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:25:51,849 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:25:51,856 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:25:51,856 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:25:51,856 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:25:51,856 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:26:02,075 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:26:02,075 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:26:02,075 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:26:02,075 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:26:02,078 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:26:02,078 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:26:02,078 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:26:02,078 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:26:12,083 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:26:12,083 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:26:12,084 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:26:12,084 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:26:12,087 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:26:12,087 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:26:12,088 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:26:12,088 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:26:22,099 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:26:22,099 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:26:22,100 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:26:22,100 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:26:22,101 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:26:22,101 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:26:22,102 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:26:22,102 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:26:32,112 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:26:32,112 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:26:32,113 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:26:32,113 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:26:32,120 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:26:32,120 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:26:32,120 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:26:32,120 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:26:42,134 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:26:42,134 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:26:42,135 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:26:42,135 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:26:42,141 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:26:42,141 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:26:42,142 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:26:42,142 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:26:52,154 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:26:52,154 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:26:52,155 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:26:52,155 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:26:52,162 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:26:52,162 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:26:52,163 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:26:52,163 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:27:02,178 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:27:02,178 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:27:02,179 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:27:02,179 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:27:02,181 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:27:02,181 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:27:02,182 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:27:02,182 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:27:12,201 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:27:12,201 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:27:12,202 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:27:12,202 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:27:12,208 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:27:12,208 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:27:12,208 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:27:12,208 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:27:22,213 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:27:22,213 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:27:22,214 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:27:22,214 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:27:22,222 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:27:22,222 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:27:22,223 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:27:22,223 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:27:32,238 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:27:32,238 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:27:32,238 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:27:32,238 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:27:32,245 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:27:32,245 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:27:32,246 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:27:32,246 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:27:42,255 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:27:42,255 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:27:42,256 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:27:42,256 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:27:42,263 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:27:42,263 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:27:42,264 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:27:42,264 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:27:52,284 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:27:52,284 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:27:52,285 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:27:52,285 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:27:52,290 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:27:52,290 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:27:52,291 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:27:52,291 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:28:02,300 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:28:02,300 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:28:02,301 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:28:02,301 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:28:02,305 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:28:02,305 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:28:02,306 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:28:02,306 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:28:12,312 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:28:12,312 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:28:12,313 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:28:12,313 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:28:12,315 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:28:12,315 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:28:12,316 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:28:12,316 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:28:22,318 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:28:22,318 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:28:22,318 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:28:22,318 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:28:22,320 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:28:22,320 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:28:22,321 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:28:22,321 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:28:32,337 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:28:32,337 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:28:32,337 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:28:32,337 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:28:32,341 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:28:32,341 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:28:32,341 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:28:32,341 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:28:42,343 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:28:42,343 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:28:42,344 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:28:42,344 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:28:42,345 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:28:42,345 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:28:42,346 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:28:42,346 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:28:52,361 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:28:52,361 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:28:52,362 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:28:52,362 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:28:52,368 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:28:52,368 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:28:52,369 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:28:52,369 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:29:02,371 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:29:02,371 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:29:02,372 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:29:02,372 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:29:02,375 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:29:02,375 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:29:02,376 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:29:02,376 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:29:12,393 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:29:12,393 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:29:12,393 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:29:12,393 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:29:12,400 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:29:12,400 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:29:12,401 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:29:12,401 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:29:22,418 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:29:22,418 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:29:22,419 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:29:22,419 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:29:22,426 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:29:22,426 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:29:22,427 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:29:22,427 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:29:32,431 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:29:32,431 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:29:32,432 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:29:32,432 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:29:32,435 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:29:32,435 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:29:32,436 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:29:32,436 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:29:42,437 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:29:42,437 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:29:42,438 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:29:42,438 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:29:42,440 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:29:42,440 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:29:42,441 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:29:42,441 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:29:52,453 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:29:52,453 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:29:52,454 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:29:52,454 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:29:52,456 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:29:52,456 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:29:52,456 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:29:52,456 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:30:02,470 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:30:02,470 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:30:02,471 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:30:02,471 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:30:02,474 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:30:02,474 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:30:02,475 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:30:02,475 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:30:12,489 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:30:12,489 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:30:12,490 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:30:12,490 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:30:12,492 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:30:12,492 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:30:12,493 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:30:12,493 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:30:22,498 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:30:22,498 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:30:22,499 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:30:22,499 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:30:22,502 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:30:22,502 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:30:22,502 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:30:22,502 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:30:26,896 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:30:26,896 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:30:26,896 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 20:30:26,896 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 20:30:26,898 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:30:26,898 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:30:26,898 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 20:30:26,898 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 20:30:32,516 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:30:32,516 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:30:32,516 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:30:32,516 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:30:32,517 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:30:32,517 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:30:32,518 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:30:32,518 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:30:42,536 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:30:42,536 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:30:42,536 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:30:42,536 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:30:42,539 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:30:42,539 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:30:42,540 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:30:42,540 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:30:52,552 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:30:52,552 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:30:52,552 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:30:52,552 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:30:52,560 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:30:52,560 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:30:52,561 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:30:52,561 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:31:02,576 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:31:02,576 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:31:02,576 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:31:02,576 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:31:02,579 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:31:02,579 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:31:02,580 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:31:02,580 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:31:11,119 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 20:31:11,119 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 20:31:11,125 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 20:31:11,125 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 20:31:11,125 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 18:31:11(String)
2021-04-26 20:31:11,125 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 18:31:11(String)
2021-04-26 20:31:11,132 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 20:31:11,132 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 20:31:12,593 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:31:12,593 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:31:12,594 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:31:12,594 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:31:12,599 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:31:12,599 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:31:12,600 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:31:12,600 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:31:22,613 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:31:22,613 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:31:22,613 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:31:22,613 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:31:22,621 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:31:22,621 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:31:22,621 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:31:22,621 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:31:32,639 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:31:32,639 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:31:32,640 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:31:32,640 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:31:32,645 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:31:32,645 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:31:32,646 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:31:32,646 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:31:42,660 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:31:42,660 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:31:42,660 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:31:42,660 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:31:42,668 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:31:42,668 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:31:42,669 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:31:42,669 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:31:52,687 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:31:52,687 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:31:52,687 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:31:52,687 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:31:52,692 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:31:52,692 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:31:52,692 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:31:52,692 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:32:02,705 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:32:02,705 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:32:02,705 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:32:02,705 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:32:02,712 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:32:02,712 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:32:02,712 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:32:02,712 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:32:12,727 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:32:12,727 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:32:12,728 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:32:12,728 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:32:12,730 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:32:12,730 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:32:12,731 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:32:12,731 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:32:22,744 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:32:22,744 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:32:22,745 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:32:22,745 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:32:22,751 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:32:22,751 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:32:22,751 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:32:22,751 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:32:32,755 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:32:32,755 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:32:32,756 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:32:32,756 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:32:32,758 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:32:32,758 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:32:32,759 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:32:32,759 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:32:42,772 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:32:42,772 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:32:42,773 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:32:42,773 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:32:42,774 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:32:42,774 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:32:42,775 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:32:42,775 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:32:52,792 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:32:52,792 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:32:52,792 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:32:52,792 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:32:52,793 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:32:52,793 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:32:52,794 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:32:52,794 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:33:02,804 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:33:02,804 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:33:02,805 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:33:02,805 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:33:02,810 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:33:02,810 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:33:02,810 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:33:02,810 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:33:12,824 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:33:12,824 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:33:12,825 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:33:12,825 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:33:12,830 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:33:12,830 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:33:12,830 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:33:12,830 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:33:22,843 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:33:22,843 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:33:22,844 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:33:22,844 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:33:22,848 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:33:22,848 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:33:22,849 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:33:22,849 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:33:32,856 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:33:32,856 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:33:32,857 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:33:32,857 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:33:32,863 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:33:32,863 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:33:32,863 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:33:32,863 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:33:42,876 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:33:42,876 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:33:42,876 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:33:42,876 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:33:42,884 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:33:42,884 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:33:42,885 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:33:42,885 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:33:52,898 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:33:52,898 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:33:52,899 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:33:52,899 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:33:52,901 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:33:52,901 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:33:52,902 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:33:52,902 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:34:02,913 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:34:02,913 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:34:02,914 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:34:02,914 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:34:02,918 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:34:02,918 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:34:02,919 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:34:02,919 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:34:12,925 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:34:12,925 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:34:12,926 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:34:12,926 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:34:12,932 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:34:12,932 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:34:12,933 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:34:12,933 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:34:22,942 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:34:22,942 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:34:22,943 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:34:22,943 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:34:22,949 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:34:22,949 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:34:22,950 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:34:22,950 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:34:32,964 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:34:32,964 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:34:32,965 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:34:32,965 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:34:32,972 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:34:32,972 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:34:32,972 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:34:32,972 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:34:42,992 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:34:42,992 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:34:42,993 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:34:42,993 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:34:42,998 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:34:42,998 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:34:42,998 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:34:42,998 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:34:53,019 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:34:53,019 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:34:53,020 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:34:53,020 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:34:53,024 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:34:53,024 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:34:53,025 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:34:53,025 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:35:03,037 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:35:03,037 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:35:03,038 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:35:03,038 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:35:03,039 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:35:03,039 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:35:03,040 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:35:03,040 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:35:13,251 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:35:13,251 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:35:13,252 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:35:13,252 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:35:13,260 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:35:13,260 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:35:13,261 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:35:13,261 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:35:23,271 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:35:23,271 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:35:23,271 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:35:23,271 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:35:23,277 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:35:23,277 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:35:23,278 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:35:23,278 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:35:26,906 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:35:26,906 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:35:26,907 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 20:35:26,907 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 20:35:26,912 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:35:26,912 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:35:26,912 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 20:35:26,912 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 20:35:33,295 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:35:33,295 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:35:33,296 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:35:33,296 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:35:33,300 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:35:33,300 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:35:33,300 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:35:33,300 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:35:43,318 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:35:43,318 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:35:43,318 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:35:43,318 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:35:43,323 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:35:43,323 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:35:43,323 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:35:43,323 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:35:53,340 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:35:53,340 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:35:53,341 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:35:53,341 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:35:53,346 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:35:53,346 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:35:53,347 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:35:53,347 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:36:03,358 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:36:03,358 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:36:03,359 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:36:03,359 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:36:03,364 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:36:03,364 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:36:03,365 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:36:03,365 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:36:13,375 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:36:13,375 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:36:13,375 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:36:13,375 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:36:13,380 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:36:13,380 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:36:13,381 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:36:13,381 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:36:23,398 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:36:23,398 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:36:23,399 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:36:23,399 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:36:23,406 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:36:23,406 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:36:23,407 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:36:23,407 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:36:33,419 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:36:33,419 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:36:33,420 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:36:33,420 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:36:33,423 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:36:33,423 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:36:33,424 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:36:33,424 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:36:43,440 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:36:43,440 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:36:43,441 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:36:43,441 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:36:43,446 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:36:43,446 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:36:43,447 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:36:43,447 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:36:53,456 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:36:53,456 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:36:53,457 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:36:53,457 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:36:53,462 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:36:53,462 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:36:53,462 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:36:53,462 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:37:03,471 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:37:03,471 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:37:03,472 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:37:03,472 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:37:03,475 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:37:03,475 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:37:03,475 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:37:03,475 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:37:13,484 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:37:13,484 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:37:13,485 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:37:13,485 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:37:13,492 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:37:13,492 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:37:13,492 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:37:13,492 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:37:23,506 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:37:23,506 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:37:23,506 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:37:23,506 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:37:23,512 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:37:23,512 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:37:23,512 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:37:23,512 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:37:33,527 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:37:33,527 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:37:33,528 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:37:33,528 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:37:33,535 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:37:33,535 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:37:33,536 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:37:33,536 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:37:43,552 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:37:43,552 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:37:43,553 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:37:43,553 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:37:43,556 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:37:43,556 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:37:43,557 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:37:43,557 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:37:53,570 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:37:53,570 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:37:53,571 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:37:53,571 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:37:53,578 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:37:53,578 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:37:53,578 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:37:53,578 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:38:03,590 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:38:03,590 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:38:03,592 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:38:03,592 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:38:03,597 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:38:03,597 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:38:03,598 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:38:03,598 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:38:13,602 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:38:13,602 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:38:13,603 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:38:13,603 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:38:13,604 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:38:13,604 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:38:13,605 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:38:13,605 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:38:23,608 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:38:23,608 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:38:23,609 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:38:23,609 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:38:23,614 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:38:23,614 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:38:23,614 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:38:23,614 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:38:33,628 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:38:33,628 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:38:33,629 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:38:33,629 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:38:33,632 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:38:33,632 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:38:33,632 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:38:33,632 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:38:43,648 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:38:43,648 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:38:43,649 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:38:43,649 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:38:43,654 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:38:43,654 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:38:43,655 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:38:43,655 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:38:53,661 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:38:53,661 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:38:53,661 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:38:53,661 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:38:53,665 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:38:53,665 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:38:53,666 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:38:53,666 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:39:03,683 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:39:03,683 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:39:03,683 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:39:03,683 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:39:03,688 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:39:03,688 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:39:03,689 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:39:03,689 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:39:13,906 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:39:13,906 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:39:13,906 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:39:13,906 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:39:13,912 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:39:13,912 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:39:13,913 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:39:13,913 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:39:23,926 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:39:23,926 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:39:23,926 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:39:23,926 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:39:23,943 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:39:23,943 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:39:23,944 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:39:23,944 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:39:33,964 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:39:33,964 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:39:33,964 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:39:33,964 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:39:33,972 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:39:33,972 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:39:33,973 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:39:33,973 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:39:43,981 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:39:43,981 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:39:43,981 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:39:43,981 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:39:43,985 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:39:43,985 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:39:43,985 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:39:43,985 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:39:53,998 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:39:53,998 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:39:53,998 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:39:53,998 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:39:54,005 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:39:54,005 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:39:54,005 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:39:54,005 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:40:04,015 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:40:04,015 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:40:04,016 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:40:04,016 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:40:04,019 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:40:04,019 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:40:04,019 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:40:04,019 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:40:14,034 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:40:14,034 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:40:14,035 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:40:14,035 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:40:14,041 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:40:14,041 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:40:14,042 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:40:14,042 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:40:24,049 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:40:24,049 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:40:24,049 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:40:24,049 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:40:24,054 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:40:24,054 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:40:24,055 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:40:24,055 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:40:26,918 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:40:26,918 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:40:26,919 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 20:40:26,919 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 20:40:26,926 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:40:26,926 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:40:26,926 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 20:40:26,926 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 20:40:34,068 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:40:34,068 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:40:34,069 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:40:34,069 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:40:34,072 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:40:34,072 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:40:34,072 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:40:34,072 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:40:44,080 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:40:44,080 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:40:44,081 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:40:44,081 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:40:44,085 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:40:44,085 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:40:44,085 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:40:44,085 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:40:54,101 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:40:54,101 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:40:54,102 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:40:54,102 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:40:54,107 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:40:54,107 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:40:54,107 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:40:54,107 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:41:04,122 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:41:04,122 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:41:04,122 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:41:04,122 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:41:04,129 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:41:04,129 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:41:04,131 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:41:04,131 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:41:11,144 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 20:41:11,144 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 20:41:11,150 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 20:41:11,150 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 20:41:11,151 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 18:41:11(String)
2021-04-26 20:41:11,151 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 18:41:11(String)
2021-04-26 20:41:11,161 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 20:41:11,161 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 20:41:14,140 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:41:14,140 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:41:14,140 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:41:14,140 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:41:14,146 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:41:14,146 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:41:14,147 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:41:14,147 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:41:24,154 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:41:24,154 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:41:24,154 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:41:24,154 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:41:24,159 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:41:24,159 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:41:24,159 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:41:24,159 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:41:34,173 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:41:34,173 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:41:34,174 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:41:34,174 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:41:34,177 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:41:34,177 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:41:34,177 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:41:34,177 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:41:44,184 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:41:44,184 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:41:44,184 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:41:44,184 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:41:44,193 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:41:44,193 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:41:44,193 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:41:44,193 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:41:54,205 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:41:54,205 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:41:54,205 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:41:54,205 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:41:54,211 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:41:54,211 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:41:54,211 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:41:54,211 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:42:04,220 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:42:04,220 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:42:04,220 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:42:04,220 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:42:04,227 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:42:04,227 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:42:04,228 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:42:04,228 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:42:14,243 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:42:14,243 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:42:14,244 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:42:14,244 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:42:14,265 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:42:14,265 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:42:14,266 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:42:14,266 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:42:24,283 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:42:24,283 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:42:24,284 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:42:24,284 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:42:24,289 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:42:24,289 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:42:24,290 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:42:24,290 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:42:34,304 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:42:34,304 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:42:34,304 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:42:34,304 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:42:34,306 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:42:34,306 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:42:34,306 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:42:34,306 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:42:44,323 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:42:44,323 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:42:44,324 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:42:44,324 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:42:44,330 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:42:44,330 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:42:44,330 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:42:44,330 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:42:54,339 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:42:54,339 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:42:54,340 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:42:54,340 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:42:54,346 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:42:54,346 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:42:54,347 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:42:54,347 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:43:04,351 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:43:04,351 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:43:04,352 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:43:04,352 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:43:04,356 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:43:04,356 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:43:04,356 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:43:04,356 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:43:14,375 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:43:14,375 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:43:14,376 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:43:14,376 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:43:14,381 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:43:14,381 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:43:14,381 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:43:14,381 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:43:24,397 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:43:24,397 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:43:24,398 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:43:24,398 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:43:24,403 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:43:24,403 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:43:24,404 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:43:24,404 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:43:34,413 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:43:34,413 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:43:34,413 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:43:34,413 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:43:34,418 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:43:34,418 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:43:34,418 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:43:34,418 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:43:44,434 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:43:44,434 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:43:44,434 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:43:44,434 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:43:44,440 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:43:44,440 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:43:44,440 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:43:44,440 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:43:54,452 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:43:54,452 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:43:54,453 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:43:54,453 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:43:54,457 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:43:54,457 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:43:54,458 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:43:54,458 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:44:04,469 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:44:04,469 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:44:04,469 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:44:04,469 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:44:04,472 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:44:04,472 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:44:04,472 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:44:04,472 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:44:14,482 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:44:14,482 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:44:14,482 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:44:14,482 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:44:14,488 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:44:14,488 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:44:14,489 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:44:14,489 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:44:24,497 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:44:24,497 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:44:24,497 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:44:24,497 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:44:24,498 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:44:24,498 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:44:24,499 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:44:24,499 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:44:34,515 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:44:34,515 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:44:34,516 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:44:34,516 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:44:34,519 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:44:34,519 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:44:34,519 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:44:34,519 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:44:44,527 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:44:44,527 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:44:44,527 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:44:44,527 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:44:44,530 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:44:44,530 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:44:44,531 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:44:44,531 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:44:54,541 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:44:54,541 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:44:54,541 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:44:54,541 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:44:54,545 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:44:54,545 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:44:54,545 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:44:54,545 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:45:04,552 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:45:04,552 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:45:04,553 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:45:04,553 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:45:04,554 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:45:04,554 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:45:04,554 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:45:04,554 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:45:14,569 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:45:14,569 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:45:14,570 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:45:14,570 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:45:14,571 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:45:14,571 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:45:14,572 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:45:14,572 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:45:24,581 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:45:24,581 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:45:24,582 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:45:24,582 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:45:24,587 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:45:24,587 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:45:24,587 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:45:24,587 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:45:26,931 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:45:26,931 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:45:26,932 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 20:45:26,932 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 20:45:26,934 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:45:26,934 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:45:26,934 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 20:45:26,934 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 20:45:34,596 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:45:34,596 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:45:34,597 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:45:34,597 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:45:34,603 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:45:34,603 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:45:34,604 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:45:34,604 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:45:44,615 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:45:44,615 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:45:44,615 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:45:44,615 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:45:44,616 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:45:44,616 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:45:44,617 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:45:44,617 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:45:54,635 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:45:54,635 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:45:54,636 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:45:54,636 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:45:54,642 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:45:54,642 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:45:54,643 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:45:54,643 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:46:04,662 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:46:04,662 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:46:04,663 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:46:04,663 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:46:04,667 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:46:04,667 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:46:04,667 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:46:04,667 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:46:14,677 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:46:14,677 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:46:14,678 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:46:14,678 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:46:14,679 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:46:14,679 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:46:14,679 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:46:14,679 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:46:24,686 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:46:24,686 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:46:24,687 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:46:24,687 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:46:24,688 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:46:24,688 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:46:24,689 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:46:24,689 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:46:34,692 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:46:34,692 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:46:34,692 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:46:34,692 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:46:34,694 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:46:34,694 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:46:34,694 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:46:34,694 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:46:44,706 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:46:44,706 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:46:44,707 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:46:44,707 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:46:44,709 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:46:44,709 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:46:44,710 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:46:44,710 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:46:54,715 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:46:54,715 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:46:54,716 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:46:54,716 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:46:54,717 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:46:54,717 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:46:54,717 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:46:54,717 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:47:04,730 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:47:04,730 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:47:04,732 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:47:04,732 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:47:04,733 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:47:04,733 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:47:04,733 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:47:04,733 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:47:14,749 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:47:14,749 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:47:14,749 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:47:14,749 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:47:14,750 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:47:14,750 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:47:14,751 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:47:14,751 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:47:24,764 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:47:24,764 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:47:24,764 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:47:24,764 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:47:24,765 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:47:24,765 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:47:24,766 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:47:24,766 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:47:34,771 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:47:34,771 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:47:34,772 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:47:34,772 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:47:34,773 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:47:34,773 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:47:34,774 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:47:34,774 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:47:44,779 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:47:44,779 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:47:44,779 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:47:44,779 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:47:44,781 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:47:44,781 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:47:44,782 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:47:44,782 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:47:54,788 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:47:54,788 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:47:54,789 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:47:54,789 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:47:54,790 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:47:54,790 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:47:54,791 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:47:54,791 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:48:04,804 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:48:04,804 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:48:04,804 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:48:04,804 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:48:04,806 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:48:04,806 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:48:04,807 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:48:04,807 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:48:14,820 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:48:14,820 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:48:14,821 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:48:14,821 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:48:14,823 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:48:14,823 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:48:14,823 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:48:14,823 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:48:24,830 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:48:24,830 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:48:24,830 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:48:24,830 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:48:24,832 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:48:24,832 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:48:24,833 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:48:24,833 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:48:34,841 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:48:34,841 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:48:34,842 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:48:34,842 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:48:34,843 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:48:34,843 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:48:34,844 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:48:34,844 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:48:44,855 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:48:44,855 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:48:44,856 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:48:44,856 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:48:44,857 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:48:44,857 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:48:44,858 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:48:44,858 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:48:54,869 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:48:54,869 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:48:54,870 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:48:54,870 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:48:54,871 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:48:54,871 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:48:54,872 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:48:54,872 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:49:04,877 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:49:04,877 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:49:04,877 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:49:04,877 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:49:04,879 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:49:04,879 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:49:04,879 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:49:04,879 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:49:14,889 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:49:14,889 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:49:14,890 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:49:14,890 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:49:14,892 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:49:14,892 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:49:14,892 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:49:14,892 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:49:24,896 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:49:24,896 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:49:24,896 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:49:24,896 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:49:24,898 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:49:24,898 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:49:24,899 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:49:24,899 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:49:34,910 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:49:34,910 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:49:34,911 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:49:34,911 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:49:34,912 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:49:34,912 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:49:34,913 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:49:34,913 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:49:44,924 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:49:44,924 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:49:44,924 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:49:44,924 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:49:44,926 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:49:44,926 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:49:44,926 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:49:44,926 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:49:54,938 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:49:54,938 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:49:54,939 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:49:54,939 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:49:54,940 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:49:54,940 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:49:54,940 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:49:54,940 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:50:04,945 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:50:04,945 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:50:04,946 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:50:04,946 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:50:04,947 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:50:04,947 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:50:04,948 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:50:04,948 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:50:14,961 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:50:14,961 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:50:14,963 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:50:14,963 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:50:14,964 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:50:14,964 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:50:14,965 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:50:14,965 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:50:24,978 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:50:24,978 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:50:24,979 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:50:24,979 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:50:24,983 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:50:24,983 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:50:24,983 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:50:24,983 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:50:26,941 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:50:26,941 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:50:26,941 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 20:50:26,941 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 20:50:26,942 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:50:26,942 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:50:26,943 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 20:50:26,943 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 20:50:34,989 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:50:34,989 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:50:34,989 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:50:34,989 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:50:34,994 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:50:34,994 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:50:34,995 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:50:34,995 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:50:45,006 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:50:45,006 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:50:45,007 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:50:45,007 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:50:45,008 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:50:45,008 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:50:45,009 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:50:45,009 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:50:55,016 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:50:55,016 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:50:55,017 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:50:55,017 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:50:55,018 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:50:55,018 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:50:55,019 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:50:55,019 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:51:05,026 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:51:05,026 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:51:05,027 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:51:05,027 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:51:05,028 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:51:05,028 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:51:05,028 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:51:05,028 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:51:11,163 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 20:51:11,163 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 20:51:11,166 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 20:51:11,166 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 20:51:11,167 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 18:51:11(String)
2021-04-26 20:51:11,167 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 18:51:11(String)
2021-04-26 20:51:11,169 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 20:51:11,169 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 20:51:15,034 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:51:15,034 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:51:15,035 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:51:15,035 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:51:15,037 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:51:15,037 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:51:15,038 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:51:15,038 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:51:25,046 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:51:25,046 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:51:25,047 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:51:25,047 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:51:25,049 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:51:25,049 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:51:25,049 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:51:25,049 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:51:35,057 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:51:35,057 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:51:35,057 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:51:35,057 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:51:35,058 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:51:35,058 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:51:35,059 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:51:35,059 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:51:45,070 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:51:45,070 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:51:45,071 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:51:45,071 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:51:45,072 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:51:45,072 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:51:45,073 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:51:45,073 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:51:55,083 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:51:55,083 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:51:55,084 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:51:55,084 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:51:55,085 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:51:55,085 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:51:55,085 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:51:55,085 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:52:05,091 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:52:05,091 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:52:05,091 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:52:05,091 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:52:05,093 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:52:05,093 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:52:05,093 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:52:05,093 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:52:15,109 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:52:15,109 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:52:15,110 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:52:15,110 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:52:15,111 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:52:15,111 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:52:15,112 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:52:15,112 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:52:25,127 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:52:25,127 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:52:25,128 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:52:25,128 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:52:25,129 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:52:25,129 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:52:25,130 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:52:25,130 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:52:35,137 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:52:35,137 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:52:35,138 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:52:35,138 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:52:35,139 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:52:35,139 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:52:35,140 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:52:35,140 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:52:45,152 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:52:45,152 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:52:45,153 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:52:45,153 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:52:45,154 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:52:45,154 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:52:45,155 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:52:45,155 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:52:55,162 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:52:55,162 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:52:55,162 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:52:55,162 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:52:55,164 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:52:55,164 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:52:55,165 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:52:55,165 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:53:05,171 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:53:05,171 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:53:05,172 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:53:05,172 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:53:05,173 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:53:05,173 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:53:05,174 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:53:05,174 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:53:15,194 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:53:15,194 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:53:15,195 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:53:15,195 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:53:15,198 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:53:15,198 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:53:15,198 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:53:15,198 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:53:25,206 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:53:25,206 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:53:25,207 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:53:25,207 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:53:25,209 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:53:25,209 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:53:25,209 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:53:25,209 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:53:35,215 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:53:35,215 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:53:35,215 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:53:35,215 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:53:35,216 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:53:35,216 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:53:35,217 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:53:35,217 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:53:45,226 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:53:45,226 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:53:45,227 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:53:45,227 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:53:45,228 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:53:45,228 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:53:45,228 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:53:45,228 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:53:55,243 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:53:55,243 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:53:55,243 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:53:55,243 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:53:55,245 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:53:55,245 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:53:55,245 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:53:55,245 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:54:05,253 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:54:05,253 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:54:05,254 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:54:05,254 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:54:05,255 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:54:05,255 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:54:05,256 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:54:05,256 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:54:15,273 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:54:15,273 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:54:15,273 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:54:15,273 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:54:15,275 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:54:15,275 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:54:15,276 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:54:15,276 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:54:25,285 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:54:25,285 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:54:25,286 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:54:25,286 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:54:25,288 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:54:25,288 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:54:25,289 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:54:25,289 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:54:35,292 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:54:35,292 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:54:35,293 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:54:35,293 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:54:35,294 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:54:35,294 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:54:35,295 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:54:35,295 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:54:45,306 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:54:45,306 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:54:45,307 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:54:45,307 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:54:45,308 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:54:45,308 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:54:45,309 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:54:45,309 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:54:55,322 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:54:55,322 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:54:55,323 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:54:55,323 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:54:55,324 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:54:55,324 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:54:55,325 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:54:55,325 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:55:05,326 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:55:05,326 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:55:05,327 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:55:05,327 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:55:05,328 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:55:05,328 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:55:05,328 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:55:05,328 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:55:15,343 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:55:15,343 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:55:15,343 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:55:15,343 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:55:15,344 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:55:15,344 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:55:15,345 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:55:15,345 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:55:25,348 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:55:25,348 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:55:25,349 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:55:25,349 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:55:25,350 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:55:25,350 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:55:25,351 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:55:25,351 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:55:26,963 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:55:26,963 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:55:26,963 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 20:55:26,963 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 20:55:26,965 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:55:26,965 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:55:26,965 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 20:55:26,965 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 20:55:35,366 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:55:35,366 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:55:35,367 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:55:35,367 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:55:35,368 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:55:35,368 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:55:35,369 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:55:35,369 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:55:45,379 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:55:45,379 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:55:45,380 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:55:45,380 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:55:45,382 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:55:45,382 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:55:45,383 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:55:45,383 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:55:55,390 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:55:55,390 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:55:55,390 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:55:55,390 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:55:55,392 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:55:55,392 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:55:55,392 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:55:55,392 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:56:05,399 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:56:05,399 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:56:05,400 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:56:05,400 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:56:05,401 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:56:05,401 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:56:05,402 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:56:05,402 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:56:15,409 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:56:15,409 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:56:15,409 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:56:15,409 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:56:15,410 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:56:15,410 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:56:15,411 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:56:15,411 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:56:25,414 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:56:25,414 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:56:25,415 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:56:25,415 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:56:25,416 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:56:25,416 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:56:25,417 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:56:25,417 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:56:35,426 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:56:35,426 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:56:35,427 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:56:35,427 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:56:35,428 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:56:35,428 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:56:35,429 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:56:35,429 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:56:45,435 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:56:45,435 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:56:45,436 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:56:45,436 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:56:45,437 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:56:45,437 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:56:45,438 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:56:45,438 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:56:55,441 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:56:55,441 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:56:55,442 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:56:55,442 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:56:55,444 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:56:55,444 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:56:55,445 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:56:55,445 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:57:05,458 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:57:05,458 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:57:05,459 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:57:05,459 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:57:05,460 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:57:05,460 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:57:05,461 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:57:05,461 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:57:15,462 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:57:15,462 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:57:15,463 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:57:15,463 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:57:15,465 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:57:15,465 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:57:15,466 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:57:15,466 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:57:25,479 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:57:25,479 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:57:25,480 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:57:25,480 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:57:25,481 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:57:25,481 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:57:25,482 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:57:25,482 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:57:35,493 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:57:35,493 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:57:35,494 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:57:35,494 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:57:35,495 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:57:35,495 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:57:35,496 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:57:35,496 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:57:45,501 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:57:45,501 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:57:45,501 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:57:45,501 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:57:45,503 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:57:45,503 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:57:45,504 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:57:45,504 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:57:55,519 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:57:55,519 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:57:55,519 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:57:55,519 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:57:55,521 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:57:55,521 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:57:55,522 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:57:55,522 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:58:05,534 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:58:05,534 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:58:05,535 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:58:05,535 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:58:05,536 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:58:05,536 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:58:05,537 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:58:05,537 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:58:15,548 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:58:15,548 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:58:15,549 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:58:15,549 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:58:15,550 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:58:15,550 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:58:15,550 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:58:15,550 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:58:25,559 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:58:25,559 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:58:25,559 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:58:25,559 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:58:25,562 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:58:25,562 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:58:25,562 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:58:25,562 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:58:35,580 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:58:35,580 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:58:35,580 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:58:35,580 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:58:35,582 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:58:35,582 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:58:35,583 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:58:35,583 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:58:45,597 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:58:45,597 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:58:45,598 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:58:45,598 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:58:45,599 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:58:45,599 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:58:45,600 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:58:45,600 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:58:55,617 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:58:55,617 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:58:55,617 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:58:55,617 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:58:55,618 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:58:55,618 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:58:55,619 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:58:55,619 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:59:05,628 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:59:05,628 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:59:05,629 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:59:05,629 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:59:05,630 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:59:05,630 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:59:05,631 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:59:05,631 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:59:15,635 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:59:15,635 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:59:15,636 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:59:15,636 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:59:15,637 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:59:15,637 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:59:15,638 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:59:15,638 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:59:25,644 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:59:25,644 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:59:25,645 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:59:25,645 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:59:25,646 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:59:25,646 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:59:25,647 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:59:25,647 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:59:35,657 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:59:35,657 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:59:35,658 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:59:35,658 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:59:35,660 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:59:35,660 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:59:35,660 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:59:35,660 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:59:45,664 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:59:45,664 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:59:45,665 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:59:45,665 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:59:45,667 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:59:45,667 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:59:45,668 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:59:45,668 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:59:55,671 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:59:55,671 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 20:59:55,672 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:59:55,672 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 20:59:55,673 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:59:55,673 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 20:59:55,673 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 20:59:55,673 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:00:05,688 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:00:05,688 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:00:05,688 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:00:05,688 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:00:05,691 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:00:05,691 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:00:05,691 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:00:05,691 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:00:15,699 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:00:15,699 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:00:15,700 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:00:15,700 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:00:15,701 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:00:15,701 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:00:15,702 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:00:15,702 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:00:25,708 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:00:25,708 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:00:25,708 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:00:25,708 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:00:25,710 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:00:25,710 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:00:25,710 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:00:25,710 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:00:26,971 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:00:26,971 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:00:26,971 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 21:00:26,971 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 21:00:26,972 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:00:26,972 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:00:26,973 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 21:00:26,973 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 21:00:35,715 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:00:35,715 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:00:35,716 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:00:35,716 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:00:35,717 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:00:35,717 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:00:35,718 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:00:35,718 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:00:45,729 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:00:45,729 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:00:45,730 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:00:45,730 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:00:45,731 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:00:45,731 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:00:45,732 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:00:45,732 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:00:55,739 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:00:55,739 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:00:55,739 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:00:55,739 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:00:55,740 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:00:55,740 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:00:55,741 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:00:55,741 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:01:05,754 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:01:05,754 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:01:05,755 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:01:05,755 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:01:05,757 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:01:05,757 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:01:05,757 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:01:05,757 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:01:11,174 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 21:01:11,174 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 21:01:11,175 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 21:01:11,175 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 21:01:11,176 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 19:01:11(String)
2021-04-26 21:01:11,176 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 19:01:11(String)
2021-04-26 21:01:11,178 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 21:01:11,178 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 21:01:15,765 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:01:15,765 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:01:15,765 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:01:15,765 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:01:15,766 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:01:15,766 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:01:15,767 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:01:15,767 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:01:25,773 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:01:25,773 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:01:25,773 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:01:25,773 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:01:25,775 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:01:25,775 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:01:25,776 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:01:25,776 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:01:35,790 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:01:35,790 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:01:35,791 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:01:35,791 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:01:35,792 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:01:35,792 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:01:35,793 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:01:35,793 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:01:45,800 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:01:45,800 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:01:45,800 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:01:45,800 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:01:45,801 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:01:45,801 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:01:45,801 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:01:45,801 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:01:55,814 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:01:55,814 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:01:55,815 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:01:55,815 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:01:55,816 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:01:55,816 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:01:55,817 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:01:55,817 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:02:05,821 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:02:05,821 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:02:05,822 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:02:05,822 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:02:05,823 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:02:05,823 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:02:05,824 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:02:05,824 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:02:15,825 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:02:15,825 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:02:15,826 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:02:15,826 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:02:15,827 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:02:15,827 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:02:15,828 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:02:15,828 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:02:25,837 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:02:25,837 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:02:25,837 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:02:25,837 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:02:25,839 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:02:25,839 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:02:25,840 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:02:25,840 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:02:35,846 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:02:35,846 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:02:35,847 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:02:35,847 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:02:35,848 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:02:35,848 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:02:35,849 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:02:35,849 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:02:45,850 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:02:45,850 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:02:45,851 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:02:45,851 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:02:45,852 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:02:45,852 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:02:45,853 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:02:45,853 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:02:55,864 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:02:55,864 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:02:55,865 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:02:55,865 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:02:55,867 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:02:55,867 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:02:55,868 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:02:55,868 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:03:05,871 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:03:05,871 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:03:05,872 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:03:05,872 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:03:05,873 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:03:05,873 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:03:05,874 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:03:05,874 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:03:15,885 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:03:15,885 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:03:15,886 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:03:15,886 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:03:15,888 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:03:15,888 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:03:15,888 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:03:15,888 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:03:25,890 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:03:25,890 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:03:25,891 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:03:25,891 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:03:25,892 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:03:25,892 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:03:25,893 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:03:25,893 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:03:35,902 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:03:35,902 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:03:35,903 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:03:35,903 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:03:35,904 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:03:35,904 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:03:35,905 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:03:35,905 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:03:45,916 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:03:45,916 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:03:45,917 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:03:45,917 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:03:45,918 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:03:45,918 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:03:45,919 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:03:45,919 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:03:55,925 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:03:55,925 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:03:55,925 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:03:55,925 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:03:55,927 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:03:55,927 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:03:55,928 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:03:55,928 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:04:05,944 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:04:05,944 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:04:05,945 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:04:05,945 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:04:05,946 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:04:05,946 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:04:05,947 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:04:05,947 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:04:15,962 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:04:15,962 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:04:15,963 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:04:15,963 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:04:15,964 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:04:15,964 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:04:15,965 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:04:15,965 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:04:25,970 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:04:25,970 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:04:25,971 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:04:25,971 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:04:25,972 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:04:25,972 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:04:25,973 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:04:25,973 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:04:35,981 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:04:35,981 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:04:35,981 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:04:35,981 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:04:35,983 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:04:35,983 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:04:35,984 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:04:35,984 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:04:45,988 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:04:45,988 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:04:45,988 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:04:45,988 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:04:45,990 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:04:45,990 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:04:45,990 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:04:45,990 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:04:56,001 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:04:56,001 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:04:56,002 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:04:56,002 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:04:56,003 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:04:56,003 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:04:56,004 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:04:56,004 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:05:06,007 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:05:06,007 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:05:06,008 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:05:06,008 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:05:06,009 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:05:06,009 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:05:06,010 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:05:06,010 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:05:16,021 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:05:16,021 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:05:16,022 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:05:16,022 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:05:16,023 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:05:16,023 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:05:16,024 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:05:16,024 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:05:26,026 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:05:26,026 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:05:26,027 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:05:26,027 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:05:26,028 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:05:26,028 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:05:26,029 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:05:26,029 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:05:26,979 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:05:26,979 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:05:26,979 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 21:05:26,979 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 21:05:26,980 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:05:26,980 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:05:26,981 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 21:05:26,981 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 21:05:36,034 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:05:36,034 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:05:36,034 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:05:36,034 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:05:36,036 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:05:36,036 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:05:36,036 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:05:36,036 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:05:46,050 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:05:46,050 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:05:46,051 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:05:46,051 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:05:46,052 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:05:46,052 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:05:46,052 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:05:46,052 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:05:56,056 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:05:56,056 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:05:56,057 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:05:56,057 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:05:56,058 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:05:56,058 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:05:56,059 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:05:56,059 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:06:06,073 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:06:06,073 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:06:06,074 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:06:06,074 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:06:06,075 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:06:06,075 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:06:06,075 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:06:06,075 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:06:16,089 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:06:16,089 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:06:16,090 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:06:16,090 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:06:16,091 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:06:16,091 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:06:16,092 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:06:16,092 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:06:26,095 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:06:26,095 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:06:26,095 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:06:26,095 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:06:26,097 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:06:26,097 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:06:26,097 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:06:26,097 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:06:36,101 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:06:36,101 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:06:36,101 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:06:36,101 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:06:36,103 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:06:36,103 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:06:36,104 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:06:36,104 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:06:46,115 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:06:46,115 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:06:46,116 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:06:46,116 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:06:46,117 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:06:46,117 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:06:46,118 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:06:46,118 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:06:56,132 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:06:56,132 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:06:56,132 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:06:56,132 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:06:56,134 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:06:56,134 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:06:56,135 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:06:56,135 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:07:06,144 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:07:06,144 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:07:06,144 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:07:06,144 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:07:06,145 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:07:06,145 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:07:06,146 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:07:06,146 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:07:16,156 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:07:16,156 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:07:16,157 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:07:16,157 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:07:16,158 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:07:16,158 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:07:16,158 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:07:16,158 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:07:26,174 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:07:26,174 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:07:26,175 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:07:26,175 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:07:26,178 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:07:26,178 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:07:26,179 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:07:26,179 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:07:36,188 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:07:36,188 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:07:36,188 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:07:36,188 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:07:36,189 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:07:36,189 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:07:36,190 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:07:36,190 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:07:46,195 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:07:46,195 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:07:46,195 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:07:46,195 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:07:46,197 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:07:46,197 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:07:46,198 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:07:46,198 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:07:56,214 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:07:56,214 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:07:56,215 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:07:56,215 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:07:56,216 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:07:56,216 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:07:56,217 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:07:56,217 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:08:06,220 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:08:06,220 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:08:06,221 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:08:06,221 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:08:06,222 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:08:06,222 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:08:06,222 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:08:06,222 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:08:16,232 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:08:16,232 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:08:16,233 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:08:16,233 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:08:16,234 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:08:16,234 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:08:16,235 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:08:16,235 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:08:26,244 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:08:26,244 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:08:26,245 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:08:26,245 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:08:26,247 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:08:26,247 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:08:26,248 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:08:26,248 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:08:36,266 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:08:36,266 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:08:36,267 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:08:36,267 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:08:36,268 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:08:36,268 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:08:36,269 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:08:36,269 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:08:46,274 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:08:46,274 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:08:46,274 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:08:46,274 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:08:46,276 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:08:46,276 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:08:46,276 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:08:46,276 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:08:56,289 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:08:56,289 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:08:56,290 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:08:56,290 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:08:56,291 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:08:56,291 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:08:56,292 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:08:56,292 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:09:06,304 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:09:06,304 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:09:06,304 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:09:06,304 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:09:06,306 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:09:06,306 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:09:06,307 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:09:06,307 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:09:16,323 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:09:16,323 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:09:16,324 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:09:16,324 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:09:16,325 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:09:16,325 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:09:16,326 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:09:16,326 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:09:26,328 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:09:26,328 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:09:26,329 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:09:26,329 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:09:26,330 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:09:26,330 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:09:26,330 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:09:26,330 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:09:36,339 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:09:36,339 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:09:36,340 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:09:36,340 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:09:36,341 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:09:36,341 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:09:36,342 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:09:36,342 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:09:46,343 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:09:46,343 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:09:46,344 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:09:46,344 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:09:46,345 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:09:46,345 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:09:46,346 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:09:46,346 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:09:56,347 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:09:56,347 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:09:56,348 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:09:56,348 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:09:56,349 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:09:56,349 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:09:56,350 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:09:56,350 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:10:06,364 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:10:06,364 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:10:06,365 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:10:06,365 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:10:06,366 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:10:06,366 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:10:06,368 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:10:06,368 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:10:16,376 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:10:16,376 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:10:16,377 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:10:16,377 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:10:16,378 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:10:16,378 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:10:16,378 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:10:16,378 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:10:26,381 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:10:26,381 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:10:26,382 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:10:26,382 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:10:26,383 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:10:26,383 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:10:26,384 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:10:26,384 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:10:26,997 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:10:26,997 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:10:26,997 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 21:10:26,997 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 21:10:27,000 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:10:27,000 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:10:27,001 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 21:10:27,001 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 21:10:36,393 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:10:36,393 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:10:36,394 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:10:36,394 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:10:36,395 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:10:36,395 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:10:36,396 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:10:36,396 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:10:46,405 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:10:46,405 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:10:46,405 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:10:46,405 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:10:46,407 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:10:46,407 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:10:46,408 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:10:46,408 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:10:56,412 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:10:56,412 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:10:56,412 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:10:56,412 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:10:56,413 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:10:56,413 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:10:56,414 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:10:56,414 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:11:06,427 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:11:06,427 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:11:06,428 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:11:06,428 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:11:06,429 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:11:06,429 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:11:06,430 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:11:06,430 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:11:11,180 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 21:11:11,180 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 21:11:11,181 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 21:11:11,181 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 21:11:11,182 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 19:11:11(String)
2021-04-26 21:11:11,182 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 19:11:11(String)
2021-04-26 21:11:11,183 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 21:11:11,183 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 21:11:16,445 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:11:16,445 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:11:16,445 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:11:16,445 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:11:16,447 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:11:16,447 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:11:16,447 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:11:16,447 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:11:26,464 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:11:26,464 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:11:26,465 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:11:26,465 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:11:26,467 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:11:26,467 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:11:26,468 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:11:26,468 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:11:36,472 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:11:36,472 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:11:36,473 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:11:36,473 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:11:36,474 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:11:36,474 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:11:36,475 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:11:36,475 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:11:46,491 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:11:46,491 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:11:46,492 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:11:46,492 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:11:46,493 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:11:46,493 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:11:46,494 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:11:46,494 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:11:56,502 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:11:56,502 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:11:56,503 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:11:56,503 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:11:56,504 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:11:56,504 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:11:56,504 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:11:56,504 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:12:06,514 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:12:06,514 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:12:06,515 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:12:06,515 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:12:06,516 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:12:06,516 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:12:06,517 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:12:06,517 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:12:16,525 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:12:16,525 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:12:16,525 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:12:16,525 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:12:16,527 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:12:16,527 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:12:16,527 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:12:16,527 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:12:26,541 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:12:26,541 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:12:26,541 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:12:26,541 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:12:26,543 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:12:26,543 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:12:26,544 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:12:26,544 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:12:36,557 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:12:36,557 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:12:36,558 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:12:36,558 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:12:36,559 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:12:36,559 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:12:36,560 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:12:36,560 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:12:46,573 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:12:46,573 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:12:46,574 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:12:46,574 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:12:46,575 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:12:46,575 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:12:46,575 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:12:46,575 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:12:56,590 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:12:56,590 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:12:56,591 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:12:56,591 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:12:56,592 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:12:56,592 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:12:56,593 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:12:56,593 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:13:06,598 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:13:06,598 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:13:06,599 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:13:06,599 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:13:06,601 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:13:06,601 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:13:06,601 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:13:06,601 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:13:16,605 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:13:16,605 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:13:16,606 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:13:16,606 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:13:16,607 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:13:16,607 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:13:16,608 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:13:16,608 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:13:26,623 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:13:26,623 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:13:26,624 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:13:26,624 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:13:26,625 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:13:26,625 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:13:26,626 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:13:26,626 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:13:36,638 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:13:36,638 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:13:36,639 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:13:36,639 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:13:36,640 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:13:36,640 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:13:36,641 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:13:36,641 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:13:46,661 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:13:46,661 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:13:46,662 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:13:46,662 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:13:46,667 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:13:46,667 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:13:46,667 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:13:46,667 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:13:56,671 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:13:56,671 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:13:56,671 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:13:56,671 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:13:56,672 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:13:56,672 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:13:56,672 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:13:56,672 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:14:06,680 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:14:06,680 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:14:06,681 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:14:06,681 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:14:06,682 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:14:06,682 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:14:06,682 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:14:06,682 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:14:16,693 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:14:16,693 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:14:16,693 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:14:16,693 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:14:16,696 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:14:16,696 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:14:16,696 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:14:16,696 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:14:26,709 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:14:26,709 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:14:26,710 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:14:26,710 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:14:26,712 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:14:26,712 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:14:26,713 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:14:26,713 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:14:36,723 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:14:36,723 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:14:36,724 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:14:36,724 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:14:36,726 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:14:36,726 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:14:36,727 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:14:36,727 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:14:46,732 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:14:46,732 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:14:46,733 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:14:46,733 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:14:46,734 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:14:46,734 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:14:46,735 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:14:46,735 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:14:56,749 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:14:56,749 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:14:56,750 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:14:56,750 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:14:56,752 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:14:56,752 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:14:56,753 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:14:56,753 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:15:06,769 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:15:06,769 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:15:06,770 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:15:06,770 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:15:06,776 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:15:06,776 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:15:06,776 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:15:06,776 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:15:16,784 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:15:16,784 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:15:16,785 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:15:16,785 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:15:16,786 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:15:16,786 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:15:16,786 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:15:16,786 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:15:26,797 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:15:26,797 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:15:26,798 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:15:26,798 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:15:26,799 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:15:26,799 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:15:26,800 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:15:26,800 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:15:27,014 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:15:27,014 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:15:27,015 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 21:15:27,015 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 21:15:27,016 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:15:27,016 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:15:27,017 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 21:15:27,017 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 21:15:36,804 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:15:36,804 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:15:36,804 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:15:36,804 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:15:36,806 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:15:36,806 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:15:36,807 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:15:36,807 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:15:46,813 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:15:46,813 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:15:46,813 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:15:46,813 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:15:46,815 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:15:46,815 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:15:46,815 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:15:46,815 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:15:56,823 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:15:56,823 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:15:56,824 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:15:56,824 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:15:56,825 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:15:56,825 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:15:56,826 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:15:56,826 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:16:06,829 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:16:06,829 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:16:06,830 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:16:06,830 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:16:06,831 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:16:06,831 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:16:06,832 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:16:06,832 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:16:16,847 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:16:16,847 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:16:16,848 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:16:16,848 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:16:16,849 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:16:16,849 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:16:16,850 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:16:16,850 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:16:26,858 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:16:26,858 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:16:26,859 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:16:26,859 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:16:26,860 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:16:26,860 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:16:26,861 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:16:26,861 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:16:36,863 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:16:36,863 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:16:36,864 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:16:36,864 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:16:36,866 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:16:36,866 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:16:36,866 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:16:36,866 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:16:46,878 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:16:46,878 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:16:46,879 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:16:46,879 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:16:46,880 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:16:46,880 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:16:46,880 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:16:46,880 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:16:56,886 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:16:56,886 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:16:56,887 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:16:56,887 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:16:56,888 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:16:56,888 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:16:56,889 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:16:56,889 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:17:06,890 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:17:06,890 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:17:06,891 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:17:06,891 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:17:06,892 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:17:06,892 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:17:06,893 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:17:06,893 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:17:16,906 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:17:16,906 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:17:16,906 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:17:16,906 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:17:16,907 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:17:16,907 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:17:16,908 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:17:16,908 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:17:26,910 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:17:26,910 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:17:26,911 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:17:26,911 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:17:26,912 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:17:26,912 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:17:26,913 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:17:26,913 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:17:36,923 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:17:36,923 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:17:36,924 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:17:36,924 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:17:36,926 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:17:36,926 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:17:36,926 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:17:36,926 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:17:46,938 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:17:46,938 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:17:46,939 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:17:46,939 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:17:46,941 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:17:46,941 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:17:46,941 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:17:46,941 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:17:56,956 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:17:56,956 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:17:56,957 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:17:56,957 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:17:56,958 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:17:56,958 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:17:56,959 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:17:56,959 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:18:06,970 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:18:06,970 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:18:06,971 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:18:06,971 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:18:06,972 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:18:06,972 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:18:06,973 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:18:06,973 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:18:16,989 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:18:16,989 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:18:16,990 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:18:16,990 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:18:16,991 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:18:16,991 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:18:16,992 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:18:16,992 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:18:27,008 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:18:27,008 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:18:27,009 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:18:27,009 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:18:27,010 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:18:27,010 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:18:27,011 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:18:27,011 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:18:37,024 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:18:37,024 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:18:37,025 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:18:37,025 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:18:37,026 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:18:37,026 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:18:37,026 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:18:37,026 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:18:47,040 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:18:47,040 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:18:47,041 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:18:47,041 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:18:47,042 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:18:47,042 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:18:47,042 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:18:47,042 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:18:57,055 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:18:57,055 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:18:57,056 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:18:57,056 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:18:57,057 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:18:57,057 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:18:57,058 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:18:57,058 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:19:07,065 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:19:07,065 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:19:07,066 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:19:07,066 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:19:07,067 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:19:07,067 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:19:07,068 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:19:07,068 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:19:17,080 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:19:17,080 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:19:17,080 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:19:17,080 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:19:17,082 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:19:17,082 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:19:17,082 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:19:17,082 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:19:27,086 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:19:27,086 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:19:27,087 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:19:27,087 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:19:27,088 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:19:27,088 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:19:27,089 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:19:27,089 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:19:37,096 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:19:37,096 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:19:37,098 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:19:37,098 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:19:37,100 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:19:37,100 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:19:37,101 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:19:37,101 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:19:47,103 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:19:47,103 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:19:47,104 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:19:47,104 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:19:47,105 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:19:47,105 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:19:47,106 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:19:47,106 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:19:57,119 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:19:57,119 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:19:57,120 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:19:57,120 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:19:57,121 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:19:57,121 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:19:57,122 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:19:57,122 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:20:07,124 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:20:07,124 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:20:07,125 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:20:07,125 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:20:07,126 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:20:07,126 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:20:07,126 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:20:07,126 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:20:17,129 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:20:17,129 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:20:17,130 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:20:17,130 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:20:17,131 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:20:17,131 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:20:17,132 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:20:17,132 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:20:27,030 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:20:27,030 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:20:27,030 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 21:20:27,030 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 21:20:27,032 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:20:27,032 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:20:27,032 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 21:20:27,032 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 21:20:27,140 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:20:27,140 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:20:27,141 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:20:27,141 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:20:27,142 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:20:27,142 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:20:27,143 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:20:27,143 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:20:37,154 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:20:37,154 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:20:37,154 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:20:37,154 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:20:37,156 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:20:37,156 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:20:37,156 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:20:37,156 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:20:47,172 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:20:47,172 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:20:47,173 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:20:47,173 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:20:47,174 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:20:47,174 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:20:47,174 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:20:47,174 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:20:57,188 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:20:57,188 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:20:57,189 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:20:57,189 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:20:57,190 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:20:57,190 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:20:57,191 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:20:57,191 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:21:07,201 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:21:07,201 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:21:07,202 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:21:07,202 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:21:07,204 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:21:07,204 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:21:07,205 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:21:07,205 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:21:11,197 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 21:21:11,197 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 21:21:11,201 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 21:21:11,201 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 21:21:11,202 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 19:21:11(String)
2021-04-26 21:21:11,202 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 19:21:11(String)
2021-04-26 21:21:11,202 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 21:21:11,202 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 21:21:17,213 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:21:17,213 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:21:17,213 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:21:17,213 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:21:17,215 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:21:17,215 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:21:17,215 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:21:17,215 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:21:27,217 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:21:27,217 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:21:27,218 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:21:27,218 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:21:27,219 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:21:27,219 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:21:27,220 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:21:27,220 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:21:37,229 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:21:37,229 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:21:37,229 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:21:37,229 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:21:37,231 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:21:37,231 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:21:37,232 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:21:37,232 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:21:47,239 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:21:47,239 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:21:47,239 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:21:47,239 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:21:47,241 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:21:47,241 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:21:47,241 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:21:47,241 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:21:57,248 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:21:57,248 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:21:57,249 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:21:57,249 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:21:57,251 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:21:57,251 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:21:57,251 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:21:57,251 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:22:07,263 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:22:07,263 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:22:07,264 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:22:07,264 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:22:07,266 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:22:07,266 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:22:07,267 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:22:07,267 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:22:17,279 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:22:17,279 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:22:17,280 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:22:17,280 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:22:17,281 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:22:17,281 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:22:17,282 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:22:17,282 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:22:27,282 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:22:27,282 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:22:27,283 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:22:27,283 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:22:27,284 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:22:27,284 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:22:27,285 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:22:27,285 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:22:37,286 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:22:37,286 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:22:37,287 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:22:37,287 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:22:37,288 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:22:37,288 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:22:37,289 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:22:37,289 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:22:47,299 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:22:47,299 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:22:47,300 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:22:47,300 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:22:47,302 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:22:47,302 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:22:47,302 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:22:47,302 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:22:57,307 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:22:57,307 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:22:57,308 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:22:57,308 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:22:57,309 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:22:57,309 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:22:57,309 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:22:57,309 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:23:07,321 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:23:07,321 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:23:07,322 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:23:07,322 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:23:07,323 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:23:07,323 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:23:07,324 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:23:07,324 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:23:17,331 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:23:17,331 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:23:17,331 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:23:17,331 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:23:17,332 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:23:17,332 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:23:17,332 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:23:17,332 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:23:27,336 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:23:27,336 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:23:27,337 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:23:27,337 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:23:27,339 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:23:27,339 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:23:27,339 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:23:27,339 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:23:37,347 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:23:37,347 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:23:37,348 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:23:37,348 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:23:37,349 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:23:37,349 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:23:37,350 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:23:37,350 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:23:47,352 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:23:47,352 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:23:47,353 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:23:47,353 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:23:47,355 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:23:47,355 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:23:47,356 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:23:47,356 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:23:57,361 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:23:57,361 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:23:57,361 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:23:57,361 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:23:57,363 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:23:57,363 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:23:57,364 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:23:57,364 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:24:07,374 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:24:07,374 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:24:07,374 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:24:07,374 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:24:07,376 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:24:07,376 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:24:07,376 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:24:07,376 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:24:17,384 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:24:17,384 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:24:17,385 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:24:17,385 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:24:17,387 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:24:17,387 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:24:17,387 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:24:17,387 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:24:27,392 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:24:27,392 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:24:27,393 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:24:27,393 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:24:27,393 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:24:27,393 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:24:27,395 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:24:27,395 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:24:37,410 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:24:37,410 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:24:37,411 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:24:37,411 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:24:37,412 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:24:37,412 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:24:37,413 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:24:37,413 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:24:47,420 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:24:47,420 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:24:47,421 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:24:47,421 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:24:47,422 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:24:47,422 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:24:47,423 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:24:47,423 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:24:57,432 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:24:57,432 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:24:57,432 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:24:57,432 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:24:57,435 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:24:57,435 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:24:57,435 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:24:57,435 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:25:07,436 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:25:07,436 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:25:07,437 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:25:07,437 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:25:07,438 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:25:07,438 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:25:07,439 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:25:07,439 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:25:17,447 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:25:17,447 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:25:17,448 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:25:17,448 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:25:17,449 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:25:17,449 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:25:17,450 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:25:17,450 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:25:27,048 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:25:27,048 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:25:27,048 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 21:25:27,048 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 21:25:27,049 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:25:27,049 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:25:27,051 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 21:25:27,051 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 21:25:27,458 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:25:27,458 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:25:27,459 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:25:27,459 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:25:27,460 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:25:27,460 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:25:27,461 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:25:27,461 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:25:37,471 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:25:37,471 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:25:37,472 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:25:37,472 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:25:37,473 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:25:37,473 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:25:37,474 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:25:37,474 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:25:47,481 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:25:47,481 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:25:47,482 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:25:47,482 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:25:47,484 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:25:47,484 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:25:47,484 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:25:47,484 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:25:57,492 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:25:57,492 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:25:57,492 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:25:57,492 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:25:57,494 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:25:57,494 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:25:57,495 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:25:57,495 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:26:07,499 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:26:07,499 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:26:07,500 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:26:07,500 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:26:07,501 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:26:07,501 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:26:07,501 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:26:07,501 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:26:17,511 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:26:17,511 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:26:17,512 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:26:17,512 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:26:17,513 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:26:17,513 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:26:17,514 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:26:17,514 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:26:27,525 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:26:27,525 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:26:27,526 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:26:27,526 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:26:27,528 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:26:27,528 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:26:27,528 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:26:27,528 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:26:37,543 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:26:37,543 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:26:37,544 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:26:37,544 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:26:37,546 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:26:37,546 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:26:37,547 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:26:37,547 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:26:47,560 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:26:47,560 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:26:47,561 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:26:47,561 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:26:47,562 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:26:47,562 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:26:47,563 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:26:47,563 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:26:57,573 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:26:57,573 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:26:57,574 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:26:57,574 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:26:57,576 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:26:57,576 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:26:57,576 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:26:57,576 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:27:07,579 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:27:07,579 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:27:07,580 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:27:07,580 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:27:07,581 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:27:07,581 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:27:07,582 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:27:07,582 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:27:17,591 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:27:17,591 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:27:17,592 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:27:17,592 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:27:17,594 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:27:17,594 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:27:17,595 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:27:17,595 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:27:27,609 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:27:27,609 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:27:27,610 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:27:27,610 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:27:27,611 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:27:27,611 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:27:27,611 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:27:27,611 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:27:37,614 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:27:37,614 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:27:37,615 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:27:37,615 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:27:37,621 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:27:37,621 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:27:37,621 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:27:37,621 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:27:47,629 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:27:47,629 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:27:47,629 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:27:47,629 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:27:47,630 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:27:47,630 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:27:47,631 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:27:47,631 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:27:57,638 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:27:57,638 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:27:57,639 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:27:57,639 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:27:57,640 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:27:57,640 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:27:57,641 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:27:57,641 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:28:07,648 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:28:07,648 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:28:07,649 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:28:07,649 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:28:07,650 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:28:07,650 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:28:07,651 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:28:07,651 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:28:17,667 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:28:17,667 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:28:17,668 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:28:17,668 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:28:17,670 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:28:17,670 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:28:17,671 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:28:17,671 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:28:27,675 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:28:27,675 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:28:27,676 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:28:27,676 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:28:27,678 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:28:27,678 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:28:27,678 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:28:27,678 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:28:37,683 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:28:37,683 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:28:37,684 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:28:37,684 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:28:37,685 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:28:37,685 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:28:37,686 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:28:37,686 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:28:47,691 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:28:47,691 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:28:47,692 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:28:47,692 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:28:47,694 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:28:47,694 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:28:47,694 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:28:47,694 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:28:57,708 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:28:57,708 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:28:57,709 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:28:57,709 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:28:57,710 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:28:57,710 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:28:57,710 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:28:57,710 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:29:07,723 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:29:07,723 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:29:07,724 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:29:07,724 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:29:07,725 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:29:07,725 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:29:07,726 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:29:07,726 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:29:17,728 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:29:17,728 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:29:17,729 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:29:17,729 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:29:17,730 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:29:17,730 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:29:17,730 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:29:17,730 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:29:27,734 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:29:27,734 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:29:27,735 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:29:27,735 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:29:27,736 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:29:27,736 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:29:27,737 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:29:27,737 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:29:37,747 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:29:37,747 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:29:37,748 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:29:37,748 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:29:37,750 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:29:37,750 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:29:37,751 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:29:37,751 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:29:47,758 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:29:47,758 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:29:47,758 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:29:47,758 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:29:47,759 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:29:47,759 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:29:47,760 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:29:47,760 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:29:57,769 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:29:57,769 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:29:57,770 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:29:57,770 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:29:57,771 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:29:57,771 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:29:57,772 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:29:57,772 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:30:07,774 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:30:07,774 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:30:07,775 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:30:07,775 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:30:07,777 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:30:07,777 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:30:07,778 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:30:07,778 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:30:17,781 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:30:17,781 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:30:17,782 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:30:17,782 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:30:17,783 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:30:17,783 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:30:17,784 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:30:17,784 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:30:27,052 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:30:27,052 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:30:27,052 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 21:30:27,052 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 21:30:27,054 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:30:27,054 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:30:27,055 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 21:30:27,055 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 21:30:27,797 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:30:27,797 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:30:27,797 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:30:27,797 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:30:27,798 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:30:27,798 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:30:27,799 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:30:27,799 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:30:37,801 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:30:37,801 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:30:37,802 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:30:37,802 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:30:37,803 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:30:37,803 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:30:37,804 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:30:37,804 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:30:47,819 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:30:47,819 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:30:47,819 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:30:47,819 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:30:47,821 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:30:47,821 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:30:47,822 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:30:47,822 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:30:57,827 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:30:57,827 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:30:57,829 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:30:57,829 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:30:57,830 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:30:57,830 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:30:57,830 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:30:57,830 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:31:07,843 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:31:07,843 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:31:07,844 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:31:07,844 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:31:07,845 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:31:07,845 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:31:07,846 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:31:07,846 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:31:11,219 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 21:31:11,219 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 21:31:11,219 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 21:31:11,219 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 21:31:11,220 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 19:31:11(String)
2021-04-26 21:31:11,220 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 19:31:11(String)
2021-04-26 21:31:11,221 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 21:31:11,221 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 21:31:17,857 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:31:17,857 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:31:17,858 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:31:17,858 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:31:17,859 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:31:17,859 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:31:17,860 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:31:17,860 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:31:27,868 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:31:27,868 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:31:27,869 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:31:27,869 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:31:27,870 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:31:27,870 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:31:27,870 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:31:27,870 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:31:37,875 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:31:37,875 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:31:37,876 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:31:37,876 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:31:37,878 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:31:37,878 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:31:37,878 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:31:37,878 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:31:47,893 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:31:47,893 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:31:47,894 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:31:47,894 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:31:47,896 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:31:47,896 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:31:47,896 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:31:47,896 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:31:57,907 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:31:57,907 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:31:57,908 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:31:57,908 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:31:57,909 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:31:57,909 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:31:57,910 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:31:57,910 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:32:07,922 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:32:07,922 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:32:07,923 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:32:07,923 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:32:07,924 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:32:07,924 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:32:07,924 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:32:07,924 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:32:17,928 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:32:17,928 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:32:17,929 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:32:17,929 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:32:17,930 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:32:17,930 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:32:17,931 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:32:17,931 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:32:27,932 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:32:27,932 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:32:27,933 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:32:27,933 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:32:27,934 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:32:27,934 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:32:27,935 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:32:27,935 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:32:37,949 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:32:37,949 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:32:37,950 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:32:37,950 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:32:37,951 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:32:37,951 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:32:37,952 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:32:37,952 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:32:47,962 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:32:47,962 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:32:47,962 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:32:47,962 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:32:47,964 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:32:47,964 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:32:47,964 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:32:47,964 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:32:57,967 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:32:57,967 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:32:57,968 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:32:57,968 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:32:57,969 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:32:57,969 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:32:57,970 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:32:57,970 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:33:07,975 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:33:07,975 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:33:07,976 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:33:07,976 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:33:07,977 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:33:07,977 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:33:07,978 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:33:07,978 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:33:17,985 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:33:17,985 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:33:17,985 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:33:17,985 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:33:17,986 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:33:17,986 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:33:17,987 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:33:17,987 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:33:27,989 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:33:27,989 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:33:27,990 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:33:27,990 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:33:27,991 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:33:27,991 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:33:27,992 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:33:27,992 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:33:38,004 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:33:38,004 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:33:38,005 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:33:38,005 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:33:38,006 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:33:38,006 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:33:38,007 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:33:38,007 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:33:48,014 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:33:48,014 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:33:48,015 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:33:48,015 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:33:48,016 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:33:48,016 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:33:48,017 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:33:48,017 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:33:58,022 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:33:58,022 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:33:58,022 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:33:58,022 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:33:58,024 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:33:58,024 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:33:58,025 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:33:58,025 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:34:08,031 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:34:08,031 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:34:08,031 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:34:08,031 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:34:08,033 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:34:08,033 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:34:08,034 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:34:08,034 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:34:18,047 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:34:18,047 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:34:18,048 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:34:18,048 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:34:18,049 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:34:18,049 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:34:18,050 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:34:18,050 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:34:28,054 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:34:28,054 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:34:28,054 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:34:28,054 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:34:28,056 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:34:28,056 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:34:28,057 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:34:28,057 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:34:38,063 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:34:38,063 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:34:38,064 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:34:38,064 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:34:38,066 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:34:38,066 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:34:38,066 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:34:38,066 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:34:48,073 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:34:48,073 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:34:48,074 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:34:48,074 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:34:48,075 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:34:48,075 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:34:48,076 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:34:48,076 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:34:58,078 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:34:58,078 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:34:58,079 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:34:58,079 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:34:58,080 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:34:58,080 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:34:58,081 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:34:58,081 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:35:08,086 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:35:08,086 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:35:08,087 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:35:08,087 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:35:08,088 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:35:08,088 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:35:08,089 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:35:08,089 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:35:18,095 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:35:18,095 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:35:18,096 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:35:18,096 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:35:18,097 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:35:18,097 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:35:18,098 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:35:18,098 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:35:27,068 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:35:27,068 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:35:27,069 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 21:35:27,069 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 21:35:27,070 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:35:27,070 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:35:27,071 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 21:35:27,071 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 21:35:28,102 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:35:28,102 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:35:28,103 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:35:28,103 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:35:28,105 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:35:28,105 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:35:28,106 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:35:28,106 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:35:38,110 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:35:38,110 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:35:38,110 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:35:38,110 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:35:38,112 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:35:38,112 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:35:38,112 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:35:38,112 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:35:48,119 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:35:48,119 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:35:48,120 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:35:48,120 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:35:48,121 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:35:48,121 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:35:48,122 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:35:48,122 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:35:58,131 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:35:58,131 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:35:58,132 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:35:58,132 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:35:58,134 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:35:58,134 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:35:58,134 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:35:58,134 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:36:08,138 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:36:08,138 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:36:08,139 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:36:08,139 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:36:08,141 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:36:08,141 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:36:08,141 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:36:08,141 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:36:18,143 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:36:18,143 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:36:18,144 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:36:18,144 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:36:18,145 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:36:18,145 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:36:18,145 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:36:18,145 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:36:28,151 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:36:28,151 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:36:28,152 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:36:28,152 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:36:28,153 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:36:28,153 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:36:28,154 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:36:28,154 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:36:38,162 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:36:38,162 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:36:38,163 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:36:38,163 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:36:38,164 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:36:38,164 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:36:38,164 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:36:38,164 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:36:48,175 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:36:48,175 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:36:48,176 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:36:48,176 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:36:48,177 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:36:48,177 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:36:48,178 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:36:48,178 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:36:58,184 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:36:58,184 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:36:58,185 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:36:58,185 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:36:58,186 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:36:58,186 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:36:58,187 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:36:58,187 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:37:08,192 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:37:08,192 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:37:08,193 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:37:08,193 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:37:08,195 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:37:08,195 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:37:08,195 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:37:08,195 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:37:18,211 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:37:18,211 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:37:18,212 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:37:18,212 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:37:18,213 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:37:18,213 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:37:18,213 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:37:18,213 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:37:28,224 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:37:28,224 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:37:28,225 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:37:28,225 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:37:28,227 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:37:28,227 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:37:28,228 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:37:28,228 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:37:38,243 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:37:38,243 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:37:38,244 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:37:38,244 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:37:38,246 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:37:38,246 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:37:38,246 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:37:38,246 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:37:48,260 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:37:48,260 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:37:48,260 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:37:48,260 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:37:48,261 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:37:48,261 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:37:48,262 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:37:48,262 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:37:58,273 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:37:58,273 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:37:58,274 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:37:58,274 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:37:58,276 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:37:58,276 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:37:58,277 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:37:58,277 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:38:08,279 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:38:08,279 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:38:08,280 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:38:08,280 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:38:08,281 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:38:08,281 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:38:08,282 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:38:08,282 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:38:18,298 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:38:18,298 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:38:18,299 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:38:18,299 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:38:18,300 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:38:18,300 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:38:18,301 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:38:18,301 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:38:28,306 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:38:28,306 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:38:28,307 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:38:28,307 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:38:28,308 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:38:28,308 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:38:28,309 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:38:28,309 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:38:38,310 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:38:38,310 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:38:38,311 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:38:38,311 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:38:38,312 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:38:38,312 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:38:38,313 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:38:38,313 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:38:48,317 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:38:48,317 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:38:48,317 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:38:48,317 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:38:48,319 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:38:48,319 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:38:48,319 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:38:48,319 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:38:58,327 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:38:58,327 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:38:58,328 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:38:58,328 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:38:58,329 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:38:58,329 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:38:58,330 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:38:58,330 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:39:08,338 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:39:08,338 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:39:08,338 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:39:08,338 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:39:08,339 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:39:08,339 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:39:08,340 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:39:08,340 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:39:18,348 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:39:18,348 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:39:18,348 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:39:18,348 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:39:18,350 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:39:18,350 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:39:18,352 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:39:18,352 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:39:28,365 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:39:28,365 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:39:28,366 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:39:28,366 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:39:28,368 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:39:28,368 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:39:28,368 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:39:28,368 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:39:38,381 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:39:38,381 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:39:38,382 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:39:38,382 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:39:38,384 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:39:38,384 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:39:38,384 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:39:38,384 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:39:48,391 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:39:48,391 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:39:48,392 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:39:48,392 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:39:48,393 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:39:48,393 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:39:48,394 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:39:48,394 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:39:58,409 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:39:58,409 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:39:58,411 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:39:58,411 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:39:58,411 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:39:58,411 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:39:58,413 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:39:58,413 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:40:08,420 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:40:08,420 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:40:08,421 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:40:08,421 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:40:08,423 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:40:08,423 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:40:08,423 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:40:08,423 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:40:18,427 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:40:18,427 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:40:18,427 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:40:18,427 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:40:18,429 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:40:18,429 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:40:18,430 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:40:18,430 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:40:27,079 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:40:27,079 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:40:27,079 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 21:40:27,079 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 21:40:27,080 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:40:27,080 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:40:27,081 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 21:40:27,081 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 21:40:28,437 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:40:28,437 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:40:28,437 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:40:28,437 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:40:28,439 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:40:28,439 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:40:28,440 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:40:28,440 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:40:38,449 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:40:38,449 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:40:38,450 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:40:38,450 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:40:38,451 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:40:38,451 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:40:38,451 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:40:38,451 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:40:48,458 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:40:48,458 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:40:48,459 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:40:48,459 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:40:48,460 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:40:48,460 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:40:48,461 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:40:48,461 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:40:58,463 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:40:58,463 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:40:58,464 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:40:58,464 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:40:58,465 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:40:58,465 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:40:58,465 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:40:58,465 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:41:08,469 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:41:08,469 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:41:08,470 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:41:08,470 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:41:08,471 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:41:08,471 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:41:08,472 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:41:08,472 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:41:11,232 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 21:41:11,232 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 21:41:11,233 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 21:41:11,233 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 21:41:11,233 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 19:41:11(String)
2021-04-26 21:41:11,233 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 19:41:11(String)
2021-04-26 21:41:11,235 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 21:41:11,235 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 21:41:18,485 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:41:18,485 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:41:18,485 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:41:18,485 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:41:18,486 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:41:18,486 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:41:18,487 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:41:18,487 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:41:28,495 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:41:28,495 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:41:28,496 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:41:28,496 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:41:28,497 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:41:28,497 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:41:28,498 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:41:28,498 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:41:38,510 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:41:38,510 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:41:38,511 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:41:38,511 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:41:38,512 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:41:38,512 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:41:38,513 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:41:38,513 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:41:48,523 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:41:48,523 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:41:48,524 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:41:48,524 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:41:48,526 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:41:48,526 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:41:48,526 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:41:48,526 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:41:58,542 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:41:58,542 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:41:58,542 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:41:58,542 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:41:58,543 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:41:58,543 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:41:58,545 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:41:58,545 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:42:08,550 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:42:08,550 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:42:08,551 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:42:08,551 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:42:08,552 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:42:08,552 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:42:08,553 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:42:08,553 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:42:18,561 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:42:18,561 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:42:18,562 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:42:18,562 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:42:18,566 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:42:18,566 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:42:18,566 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:42:18,566 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:42:28,582 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:42:28,582 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:42:28,582 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:42:28,582 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:42:28,584 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:42:28,584 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:42:28,585 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:42:28,585 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:42:38,588 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:42:38,588 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:42:38,589 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:42:38,589 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:42:38,590 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:42:38,590 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:42:38,591 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:42:38,591 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:42:48,599 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:42:48,599 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:42:48,599 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:42:48,599 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:42:48,602 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:42:48,602 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:42:48,603 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:42:48,603 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:42:58,616 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:42:58,616 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:42:58,616 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:42:58,616 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:42:58,618 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:42:58,618 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:42:58,619 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:42:58,619 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:43:08,627 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:43:08,627 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:43:08,628 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:43:08,628 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:43:08,629 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:43:08,629 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:43:08,630 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:43:08,630 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:43:18,644 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:43:18,644 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:43:18,644 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:43:18,644 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:43:18,646 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:43:18,646 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:43:18,647 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:43:18,647 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:43:28,660 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:43:28,660 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:43:28,661 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:43:28,661 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:43:28,663 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:43:28,663 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:43:28,664 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:43:28,664 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:43:38,677 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:43:38,677 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:43:38,678 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:43:38,678 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:43:38,684 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:43:38,684 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:43:38,685 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:43:38,685 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:43:48,690 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:43:48,690 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:43:48,691 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:43:48,691 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:43:48,692 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:43:48,692 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:43:48,693 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:43:48,693 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:43:58,694 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:43:58,694 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:43:58,695 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:43:58,695 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:43:58,697 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:43:58,697 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:43:58,698 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:43:58,698 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:44:08,712 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:44:08,712 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:44:08,713 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:44:08,713 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:44:08,714 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:44:08,714 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:44:08,714 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:44:08,714 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:44:18,720 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:44:18,720 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:44:18,720 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:44:18,720 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:44:18,722 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:44:18,722 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:44:18,723 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:44:18,723 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:44:28,725 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:44:28,725 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:44:28,726 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:44:28,726 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:44:28,728 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:44:28,728 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:44:28,728 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:44:28,728 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:44:38,732 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:44:38,732 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:44:38,733 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:44:38,733 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:44:38,734 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:44:38,734 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:44:38,735 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:44:38,735 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:44:48,751 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:44:48,751 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:44:48,752 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:44:48,752 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:44:48,753 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:44:48,753 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:44:48,753 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:44:48,753 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:44:58,760 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:44:58,760 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:44:58,761 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:44:58,761 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:44:58,762 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:44:58,762 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:44:58,763 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:44:58,763 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:45:08,776 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:45:08,776 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:45:08,777 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:45:08,777 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:45:08,779 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:45:08,779 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:45:08,779 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:45:08,779 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:45:18,784 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:45:18,784 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:45:18,785 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:45:18,785 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:45:18,786 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:45:18,786 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:45:18,786 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:45:18,786 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:45:27,089 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:45:27,089 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:45:27,090 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 21:45:27,090 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 21:45:27,091 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:45:27,091 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:45:27,092 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 21:45:27,092 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 21:45:28,802 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:45:28,802 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:45:28,803 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:45:28,803 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:45:28,804 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:45:28,804 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:45:28,805 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:45:28,805 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:45:38,810 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:45:38,810 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:45:38,811 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:45:38,811 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:45:38,812 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:45:38,812 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:45:38,813 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:45:38,813 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:45:48,818 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:45:48,818 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:45:48,819 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:45:48,819 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:45:48,821 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:45:48,821 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:45:48,822 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:45:48,822 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:45:58,828 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:45:58,828 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:45:58,829 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:45:58,829 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:45:58,830 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:45:58,830 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:45:58,830 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:45:58,830 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:46:08,841 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:46:08,841 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:46:08,841 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:46:08,841 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:46:08,843 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:46:08,843 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:46:08,844 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:46:08,844 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:46:18,860 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:46:18,860 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:46:18,860 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:46:18,860 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:46:18,861 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:46:18,861 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:46:18,861 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:46:18,861 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:46:28,872 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:46:28,872 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:46:28,873 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:46:28,873 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:46:28,874 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:46:28,874 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:46:28,875 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:46:28,875 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:46:38,882 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:46:38,882 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:46:38,883 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:46:38,883 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:46:38,884 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:46:38,884 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:46:38,884 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:46:38,884 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:46:48,900 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:46:48,900 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:46:48,900 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:46:48,900 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:46:48,901 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:46:48,901 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:46:48,902 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:46:48,902 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:46:58,905 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:46:58,905 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:46:58,906 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:46:58,906 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:46:58,908 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:46:58,908 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:46:58,908 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:46:58,908 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:47:08,913 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:47:08,913 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:47:08,914 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:47:08,914 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:47:08,915 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:47:08,915 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:47:08,916 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:47:08,916 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:47:18,919 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:47:18,919 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:47:18,920 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:47:18,920 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:47:18,921 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:47:18,921 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:47:18,922 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:47:18,922 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:47:28,936 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:47:28,936 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:47:28,936 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:47:28,936 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:47:28,937 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:47:28,937 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:47:28,938 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:47:28,938 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:47:38,946 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:47:38,946 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:47:38,947 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:47:38,947 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:47:38,950 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:47:38,950 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:47:38,951 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:47:38,951 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:47:48,954 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:47:48,954 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:47:48,955 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:47:48,955 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:47:48,956 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:47:48,956 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:47:48,956 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:47:48,956 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:47:58,972 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:47:58,972 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:47:58,973 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:47:58,973 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:47:58,975 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:47:58,975 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:47:58,976 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:47:58,976 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:48:08,992 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:48:08,992 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:48:08,993 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:48:08,993 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:48:08,994 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:48:08,994 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:48:08,995 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:48:08,995 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:48:19,008 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:48:19,008 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:48:19,008 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:48:19,008 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:48:19,010 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:48:19,010 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:48:19,011 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:48:19,011 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:48:29,021 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:48:29,021 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:48:29,022 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:48:29,022 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:48:29,023 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:48:29,023 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:48:29,024 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:48:29,024 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:48:39,034 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:48:39,034 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:48:39,035 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:48:39,035 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:48:39,036 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:48:39,036 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:48:39,037 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:48:39,037 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:48:49,054 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:48:49,054 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:48:49,055 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:48:49,055 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:48:49,056 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:48:49,056 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:48:49,057 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:48:49,057 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:48:59,071 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:48:59,071 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:48:59,072 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:48:59,072 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:48:59,074 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:48:59,074 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:48:59,074 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:48:59,074 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:49:09,088 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:49:09,088 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:49:09,088 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:49:09,088 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:49:09,090 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:49:09,090 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:49:09,090 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:49:09,090 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:49:19,095 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:49:19,095 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:49:19,095 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:49:19,095 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:49:19,096 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:49:19,096 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:49:19,097 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:49:19,097 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:49:29,105 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:49:29,105 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:49:29,106 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:49:29,106 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:49:29,108 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:49:29,108 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:49:29,109 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:49:29,109 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:49:39,114 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:49:39,114 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:49:39,116 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:49:39,116 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:49:39,124 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:49:39,124 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:49:39,125 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:49:39,125 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:49:49,141 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:49:49,141 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:49:49,142 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:49:49,142 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:49:49,144 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:49:49,144 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:49:49,145 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:49:49,145 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:49:59,157 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:49:59,157 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:49:59,157 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:49:59,157 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:49:59,159 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:49:59,159 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:49:59,160 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:49:59,160 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:50:09,171 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:50:09,171 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:50:09,171 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:50:09,171 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:50:09,173 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:50:09,173 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:50:09,174 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:50:09,174 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:50:19,184 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:50:19,184 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:50:19,185 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:50:19,185 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:50:19,186 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:50:19,186 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:50:19,187 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:50:19,187 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:50:27,110 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:50:27,110 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:50:27,110 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 21:50:27,110 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 21:50:27,112 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:50:27,112 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:50:27,113 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 21:50:27,113 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 21:50:29,195 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:50:29,195 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:50:29,195 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:50:29,195 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:50:29,197 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:50:29,197 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:50:29,197 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:50:29,197 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:50:39,212 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:50:39,212 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:50:39,212 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:50:39,212 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:50:39,214 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:50:39,214 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:50:39,215 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:50:39,215 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:50:49,219 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:50:49,219 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:50:49,219 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:50:49,219 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:50:49,221 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:50:49,221 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:50:49,221 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:50:49,221 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:50:59,230 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:50:59,230 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:50:59,231 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:50:59,231 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:50:59,232 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:50:59,232 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:50:59,232 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:50:59,232 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:51:09,235 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:51:09,235 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:51:09,235 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:51:09,235 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:51:09,236 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:51:09,236 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:51:09,237 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:51:09,237 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:51:11,242 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 21:51:11,242 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 21:51:11,245 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 21:51:11,245 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 21:51:11,246 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 19:51:11(String)
2021-04-26 21:51:11,246 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 19:51:11(String)
2021-04-26 21:51:11,248 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 21:51:11,248 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 21:51:19,245 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:51:19,245 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:51:19,246 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:51:19,246 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:51:19,247 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:51:19,247 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:51:19,247 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:51:19,247 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:51:29,262 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:51:29,262 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:51:29,262 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:51:29,262 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:51:29,264 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:51:29,264 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:51:29,264 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:51:29,264 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:51:39,273 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:51:39,273 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:51:39,273 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:51:39,273 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:51:39,275 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:51:39,275 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:51:39,276 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:51:39,276 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:51:49,288 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:51:49,288 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:51:49,288 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:51:49,288 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:51:49,289 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:51:49,289 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:51:49,290 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:51:49,290 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:51:59,296 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:51:59,296 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:51:59,297 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:51:59,297 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:51:59,298 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:51:59,298 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:51:59,298 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:51:59,298 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:52:09,302 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:52:09,302 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:52:09,302 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:52:09,302 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:52:09,303 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:52:09,303 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:52:09,304 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:52:09,304 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:52:19,320 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:52:19,320 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:52:19,321 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:52:19,321 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:52:19,322 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:52:19,322 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:52:19,323 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:52:19,323 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:52:29,330 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:52:29,330 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:52:29,331 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:52:29,331 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:52:29,332 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:52:29,332 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:52:29,333 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:52:29,333 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:52:39,340 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:52:39,340 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:52:39,341 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:52:39,341 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:52:39,343 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:52:39,343 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:52:39,343 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:52:39,343 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:52:49,357 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:52:49,357 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:52:49,358 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:52:49,358 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:52:49,361 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:52:49,361 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:52:49,362 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:52:49,362 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:52:59,376 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:52:59,376 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:52:59,377 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:52:59,377 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:52:59,379 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:52:59,379 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:52:59,379 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:52:59,379 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:53:09,393 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:53:09,393 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:53:09,394 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:53:09,394 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:53:09,395 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:53:09,395 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:53:09,395 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:53:09,395 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:53:19,399 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:53:19,399 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:53:19,400 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:53:19,400 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:53:19,401 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:53:19,401 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:53:19,402 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:53:19,402 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:53:29,417 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:53:29,417 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:53:29,418 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:53:29,418 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:53:29,419 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:53:29,419 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:53:29,419 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:53:29,419 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:53:39,434 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:53:39,434 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:53:39,435 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:53:39,435 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:53:39,436 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:53:39,436 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:53:39,436 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:53:39,436 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:53:49,438 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:53:49,438 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:53:49,438 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:53:49,438 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:53:49,439 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:53:49,439 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:53:49,440 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:53:49,440 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:53:59,447 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:53:59,447 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:53:59,448 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:53:59,448 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:53:59,449 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:53:59,449 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:53:59,449 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:53:59,449 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:54:09,453 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:54:09,453 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:54:09,454 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:54:09,454 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:54:09,455 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:54:09,455 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:54:09,456 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:54:09,456 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:54:19,464 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:54:19,464 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:54:19,465 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:54:19,465 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:54:19,466 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:54:19,466 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:54:19,467 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:54:19,467 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:54:29,472 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:54:29,472 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:54:29,473 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:54:29,473 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:54:29,474 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:54:29,474 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:54:29,475 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:54:29,475 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:54:39,490 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:54:39,490 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:54:39,491 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:54:39,491 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:54:39,492 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:54:39,492 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:54:39,492 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:54:39,492 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:54:49,502 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:54:49,502 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:54:49,503 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:54:49,503 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:54:49,504 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:54:49,504 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:54:49,505 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:54:49,505 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:54:59,509 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:54:59,509 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:54:59,510 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:54:59,510 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:54:59,511 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:54:59,511 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:54:59,512 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:54:59,512 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:55:09,512 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:55:09,512 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:55:09,513 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:55:09,513 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:55:09,515 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:55:09,515 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:55:09,515 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:55:09,515 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:55:19,525 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:55:19,525 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:55:19,526 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:55:19,526 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:55:19,527 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:55:19,527 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:55:19,528 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:55:19,528 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:55:27,127 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:55:27,127 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:55:27,128 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 21:55:27,128 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 21:55:27,129 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:55:27,129 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:55:27,130 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 21:55:27,130 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 21:55:29,532 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:55:29,532 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:55:29,532 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:55:29,532 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:55:29,533 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:55:29,533 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:55:29,534 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:55:29,534 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:55:39,548 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:55:39,548 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:55:39,549 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:55:39,549 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:55:39,551 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:55:39,551 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:55:39,551 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:55:39,551 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:55:49,563 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:55:49,563 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:55:49,564 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:55:49,564 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:55:49,565 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:55:49,565 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:55:49,566 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:55:49,566 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:55:59,572 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:55:59,572 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:55:59,573 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:55:59,573 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:55:59,574 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:55:59,574 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:55:59,575 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:55:59,575 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:56:09,576 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:56:09,576 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:56:09,577 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:56:09,577 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:56:09,579 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:56:09,579 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:56:09,579 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:56:09,579 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:56:19,593 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:56:19,593 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:56:19,594 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:56:19,594 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:56:19,595 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:56:19,595 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:56:19,596 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:56:19,596 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:56:29,606 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:56:29,606 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:56:29,606 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:56:29,606 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:56:29,608 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:56:29,608 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:56:29,608 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:56:29,608 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:56:39,624 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:56:39,624 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:56:39,625 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:56:39,625 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:56:39,626 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:56:39,626 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:56:39,627 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:56:39,627 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:56:49,630 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:56:49,630 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:56:49,631 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:56:49,631 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:56:49,632 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:56:49,632 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:56:49,632 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:56:49,632 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:56:59,641 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:56:59,641 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:56:59,642 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:56:59,642 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:56:59,643 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:56:59,643 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:56:59,643 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:56:59,643 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:57:09,655 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:57:09,655 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:57:09,655 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:57:09,655 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:57:09,656 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:57:09,656 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:57:09,657 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:57:09,657 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:57:19,664 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:57:19,664 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:57:19,665 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:57:19,665 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:57:19,666 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:57:19,666 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:57:19,667 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:57:19,667 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:57:29,675 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:57:29,675 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:57:29,675 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:57:29,675 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:57:29,676 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:57:29,676 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:57:29,677 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:57:29,677 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:57:39,688 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:57:39,688 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:57:39,689 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:57:39,689 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:57:39,690 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:57:39,690 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:57:39,691 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:57:39,691 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:57:49,694 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:57:49,694 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:57:49,695 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:57:49,695 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:57:49,696 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:57:49,696 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:57:49,697 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:57:49,697 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:57:59,709 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:57:59,709 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:57:59,710 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:57:59,710 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:57:59,711 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:57:59,711 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:57:59,712 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:57:59,712 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:58:09,722 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:58:09,722 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:58:09,723 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:58:09,723 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:58:09,724 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:58:09,724 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:58:09,725 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:58:09,725 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:58:19,730 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:58:19,730 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:58:19,731 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:58:19,731 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:58:19,732 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:58:19,732 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:58:19,733 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:58:19,733 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:58:29,737 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:58:29,737 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:58:29,738 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:58:29,738 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:58:29,739 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:58:29,739 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:58:29,740 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:58:29,740 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:58:39,751 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:58:39,751 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:58:39,752 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:58:39,752 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:58:39,753 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:58:39,753 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:58:39,754 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:58:39,754 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:58:49,754 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:58:49,754 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:58:49,755 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:58:49,755 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:58:49,756 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:58:49,756 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:58:49,757 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:58:49,757 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:58:59,767 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:58:59,767 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:58:59,768 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:58:59,768 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:58:59,770 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:58:59,770 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:58:59,770 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:58:59,770 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:59:09,786 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:59:09,786 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:59:09,787 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:59:09,787 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:59:09,788 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:59:09,788 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:59:09,789 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:59:09,789 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:59:19,802 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:59:19,802 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:59:19,803 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:59:19,803 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:59:19,805 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:59:19,805 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:59:19,805 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:59:19,805 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:59:29,822 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:59:29,822 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:59:29,823 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:59:29,823 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:59:29,824 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:59:29,824 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:59:29,824 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:59:29,824 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:59:39,838 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:59:39,838 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:59:39,839 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:59:39,839 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:59:39,841 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:59:39,841 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:59:39,842 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:59:39,842 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:59:49,849 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:59:49,849 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:59:49,850 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:59:49,850 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:59:49,851 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:59:49,851 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:59:49,852 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:59:49,852 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:59:59,877 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:59:59,877 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 21:59:59,877 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:59:59,877 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 21:59:59,881 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:59:59,881 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 21:59:59,882 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 21:59:59,882 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:00:09,894 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:00:09,894 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:00:09,896 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:00:09,896 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:00:09,896 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:00:09,896 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:00:09,898 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:00:09,898 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:00:19,913 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:00:19,913 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:00:19,913 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:00:19,913 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:00:19,914 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:00:19,914 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:00:19,915 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:00:19,915 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:00:27,134 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:00:27,134 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:00:27,134 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 22:00:27,134 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 22:00:27,136 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:00:27,136 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:00:27,136 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 22:00:27,136 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 22:00:29,921 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:00:29,921 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:00:29,922 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:00:29,922 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:00:29,923 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:00:29,923 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:00:29,924 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:00:29,924 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:00:39,932 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:00:39,932 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:00:39,933 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:00:39,933 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:00:39,935 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:00:39,935 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:00:39,935 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:00:39,935 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:00:49,940 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:00:49,940 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:00:49,940 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:00:49,940 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:00:49,942 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:00:49,942 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:00:49,943 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:00:49,943 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:00:59,952 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:00:59,952 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:00:59,953 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:00:59,953 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:00:59,954 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:00:59,954 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:00:59,954 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:00:59,954 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:01:09,968 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:01:09,968 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:01:09,969 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:01:09,969 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:01:09,970 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:01:09,970 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:01:09,970 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:01:09,970 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:01:11,249 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 22:01:11,249 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 22:01:11,250 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 22:01:11,250 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 22:01:11,251 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 20:01:11(String)
2021-04-26 22:01:11,251 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 20:01:11(String)
2021-04-26 22:01:11,252 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 22:01:11,252 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 22:01:19,983 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:01:19,983 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:01:19,984 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:01:19,984 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:01:19,985 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:01:19,985 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:01:19,986 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:01:19,986 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:01:29,991 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:01:29,991 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:01:29,992 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:01:29,992 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:01:29,993 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:01:29,993 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:01:29,994 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:01:29,994 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:01:39,995 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:01:39,995 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:01:39,996 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:01:39,996 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:01:39,998 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:01:39,998 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:01:39,998 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:01:39,998 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:01:50,011 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:01:50,011 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:01:50,012 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:01:50,012 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:01:50,014 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:01:50,014 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:01:50,015 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:01:50,015 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:02:00,021 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:02:00,021 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:02:00,022 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:02:00,022 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:02:00,023 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:02:00,023 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:02:00,023 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:02:00,023 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:02:10,033 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:02:10,033 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:02:10,034 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:02:10,034 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:02:10,035 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:02:10,035 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:02:10,035 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:02:10,035 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:02:20,040 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:02:20,040 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:02:20,040 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:02:20,040 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:02:20,042 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:02:20,042 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:02:20,043 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:02:20,043 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:02:30,044 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:02:30,044 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:02:30,045 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:02:30,045 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:02:30,046 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:02:30,046 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:02:30,047 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:02:30,047 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:02:40,050 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:02:40,050 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:02:40,051 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:02:40,051 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:02:40,052 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:02:40,052 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:02:40,053 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:02:40,053 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:02:50,065 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:02:50,065 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:02:50,066 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:02:50,066 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:02:50,067 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:02:50,067 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:02:50,068 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:02:50,068 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:03:00,076 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:03:00,076 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:03:00,077 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:03:00,077 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:03:00,078 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:03:00,078 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:03:00,078 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:03:00,078 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:03:10,089 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:03:10,089 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:03:10,089 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:03:10,089 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:03:10,090 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:03:10,090 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:03:10,091 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:03:10,091 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:03:20,094 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:03:20,094 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:03:20,095 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:03:20,095 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:03:20,097 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:03:20,097 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:03:20,098 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:03:20,098 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:03:30,104 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:03:30,104 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:03:30,105 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:03:30,105 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:03:30,106 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:03:30,106 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:03:30,107 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:03:30,107 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:03:40,110 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:03:40,110 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:03:40,111 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:03:40,111 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:03:40,112 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:03:40,112 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:03:40,113 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:03:40,113 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:03:50,129 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:03:50,129 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:03:50,129 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:03:50,129 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:03:50,130 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:03:50,130 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:03:50,131 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:03:50,131 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:04:00,143 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:04:00,143 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:04:00,144 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:04:00,144 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:04:00,145 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:04:00,145 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:04:00,146 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:04:00,146 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:04:10,160 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:04:10,160 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:04:10,161 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:04:10,161 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:04:10,162 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:04:10,162 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:04:10,163 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:04:10,163 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:04:20,178 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:04:20,178 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:04:20,179 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:04:20,179 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:04:20,180 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:04:20,180 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:04:20,181 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:04:20,181 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:04:30,191 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:04:30,191 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:04:30,191 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:04:30,191 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:04:30,194 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:04:30,194 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:04:30,194 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:04:30,194 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:04:40,207 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:04:40,207 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:04:40,208 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:04:40,208 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:04:40,209 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:04:40,209 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:04:40,209 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:04:40,209 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:04:50,216 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:04:50,216 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:04:50,217 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:04:50,217 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:04:50,218 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:04:50,218 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:04:50,219 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:04:50,219 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:05:00,226 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:05:00,226 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:05:00,227 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:05:00,227 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:05:00,231 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:05:00,231 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:05:00,232 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:05:00,232 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:05:10,248 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:05:10,248 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:05:10,249 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:05:10,249 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:05:10,250 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:05:10,250 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:05:10,251 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:05:10,251 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:05:20,263 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:05:20,263 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:05:20,264 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:05:20,264 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:05:20,265 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:05:20,265 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:05:20,266 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:05:20,266 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:05:27,151 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:05:27,151 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:05:27,151 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 22:05:27,151 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 22:05:27,153 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:05:27,153 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:05:27,153 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 22:05:27,153 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 22:05:30,272 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:05:30,272 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:05:30,273 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:05:30,273 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:05:30,275 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:05:30,275 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:05:30,275 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:05:30,275 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:05:40,280 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:05:40,280 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:05:40,281 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:05:40,281 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:05:40,282 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:05:40,282 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:05:40,283 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:05:40,283 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:05:50,288 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:05:50,288 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:05:50,289 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:05:50,289 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:05:50,290 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:05:50,290 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:05:50,291 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:05:50,291 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:06:00,299 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:06:00,299 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:06:00,299 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:06:00,299 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:06:00,301 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:06:00,301 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:06:00,302 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:06:00,302 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:06:10,311 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:06:10,311 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:06:10,311 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:06:10,311 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:06:10,313 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:06:10,313 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:06:10,313 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:06:10,313 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:06:20,323 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:06:20,323 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:06:20,324 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:06:20,324 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:06:20,325 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:06:20,325 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:06:20,325 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:06:20,325 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:06:30,329 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:06:30,329 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:06:30,330 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:06:30,330 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:06:30,331 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:06:30,331 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:06:30,332 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:06:30,332 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:06:40,344 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:06:40,344 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:06:40,345 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:06:40,345 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:06:40,347 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:06:40,347 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:06:40,347 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:06:40,347 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:06:50,363 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:06:50,363 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:06:50,364 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:06:50,364 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:06:50,365 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:06:50,365 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:06:50,366 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:06:50,366 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:07:00,380 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:07:00,380 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:07:00,380 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:07:00,380 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:07:00,381 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:07:00,381 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:07:00,383 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:07:00,383 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:07:10,399 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:07:10,399 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:07:10,400 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:07:10,400 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:07:10,401 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:07:10,401 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:07:10,402 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:07:10,402 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:07:20,417 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:07:20,417 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:07:20,418 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:07:20,418 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:07:20,419 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:07:20,419 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:07:20,419 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:07:20,419 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:07:30,437 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:07:30,437 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:07:30,437 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:07:30,437 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:07:30,440 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:07:30,440 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:07:30,442 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:07:30,442 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:07:40,456 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:07:40,456 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:07:40,457 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:07:40,457 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:07:40,459 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:07:40,459 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:07:40,460 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:07:40,460 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:07:50,467 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:07:50,467 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:07:50,467 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:07:50,467 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:07:50,469 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:07:50,469 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:07:50,470 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:07:50,470 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:08:00,481 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:08:00,481 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:08:00,482 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:08:00,482 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:08:00,484 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:08:00,484 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:08:00,484 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:08:00,484 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:08:10,497 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:08:10,497 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:08:10,498 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:08:10,498 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:08:10,499 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:08:10,499 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:08:10,499 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:08:10,499 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:08:20,510 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:08:20,510 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:08:20,510 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:08:20,510 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:08:20,511 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:08:20,511 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:08:20,511 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:08:20,511 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:08:30,519 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:08:30,519 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:08:30,520 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:08:30,520 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:08:30,521 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:08:30,521 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:08:30,521 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:08:30,521 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:08:40,534 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:08:40,534 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:08:40,534 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:08:40,534 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:08:40,535 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:08:40,535 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:08:40,536 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:08:40,536 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:08:50,548 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:08:50,548 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:08:50,549 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:08:50,549 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:08:50,550 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:08:50,550 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:08:50,551 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:08:50,551 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:09:00,560 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:09:00,560 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:09:00,561 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:09:00,561 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:09:00,563 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:09:00,563 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:09:00,563 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:09:00,563 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:09:10,570 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:09:10,570 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:09:10,571 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:09:10,571 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:09:10,572 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:09:10,572 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:09:10,572 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:09:10,572 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:09:20,574 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:09:20,574 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:09:20,575 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:09:20,575 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:09:20,576 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:09:20,576 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:09:20,576 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:09:20,576 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:09:30,580 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:09:30,580 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:09:30,581 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:09:30,581 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:09:30,582 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:09:30,582 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:09:30,583 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:09:30,583 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:09:40,591 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:09:40,591 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:09:40,592 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:09:40,592 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:09:40,600 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:09:40,600 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:09:40,600 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:09:40,600 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:09:50,616 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:09:50,616 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:09:50,617 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:09:50,617 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:09:50,618 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:09:50,618 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:09:50,619 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:09:50,619 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:10:00,622 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:10:00,622 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:10:00,623 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:10:00,623 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:10:00,624 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:10:00,624 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:10:00,624 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:10:00,624 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:10:10,638 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:10:10,638 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:10:10,638 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:10:10,638 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:10:10,640 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:10:10,640 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:10:10,640 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:10:10,640 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:10:20,650 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:10:20,650 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:10:20,651 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:10:20,651 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:10:20,652 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:10:20,652 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:10:20,652 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:10:20,652 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:10:27,169 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:10:27,169 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:10:27,170 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 22:10:27,170 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 22:10:27,172 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:10:27,172 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:10:27,172 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 22:10:27,172 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 22:10:30,658 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:10:30,658 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:10:30,659 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:10:30,659 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:10:30,660 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:10:30,660 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:10:30,661 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:10:30,661 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:10:40,678 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:10:40,678 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:10:40,678 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:10:40,678 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:10:40,681 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:10:40,681 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:10:40,681 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:10:40,681 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:10:50,688 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:10:50,688 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:10:50,688 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:10:50,688 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:10:50,690 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:10:50,690 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:10:50,691 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:10:50,691 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:11:00,703 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:11:00,703 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:11:00,704 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:11:00,704 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:11:00,706 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:11:00,706 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:11:00,707 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:11:00,707 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:11:10,711 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:11:10,711 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:11:10,712 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:11:10,712 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:11:10,713 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:11:10,713 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:11:10,714 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:11:10,714 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:11:11,266 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 22:11:11,266 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 22:11:11,267 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 22:11:11,267 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 22:11:11,267 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 20:11:11(String)
2021-04-26 22:11:11,267 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 20:11:11(String)
2021-04-26 22:11:11,269 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 22:11:11,269 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 22:11:20,723 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:11:20,723 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:11:20,724 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:11:20,724 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:11:20,725 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:11:20,725 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:11:20,725 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:11:20,725 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:11:30,734 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:11:30,734 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:11:30,735 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:11:30,735 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:11:30,737 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:11:30,737 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:11:30,737 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:11:30,737 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:11:40,743 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:11:40,743 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:11:40,744 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:11:40,744 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:11:40,745 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:11:40,745 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:11:40,745 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:11:40,745 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:11:50,749 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:11:50,749 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:11:50,750 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:11:50,750 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:11:50,751 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:11:50,751 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:11:50,751 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:11:50,751 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:12:00,765 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:12:00,765 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:12:00,765 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:12:00,765 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:12:00,767 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:12:00,767 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:12:00,768 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:12:00,768 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:12:10,775 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:12:10,775 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:12:10,775 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:12:10,775 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:12:10,777 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:12:10,777 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:12:10,778 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:12:10,778 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:12:20,788 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:12:20,788 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:12:20,789 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:12:20,789 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:12:20,790 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:12:20,790 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:12:20,791 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:12:20,791 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:12:30,791 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:12:30,791 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:12:30,792 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:12:30,792 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:12:30,794 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:12:30,794 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:12:30,794 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:12:30,794 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:12:40,804 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:12:40,804 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:12:40,805 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:12:40,805 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:12:40,806 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:12:40,806 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:12:40,806 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:12:40,806 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:12:50,819 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:12:50,819 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:12:50,820 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:12:50,820 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:12:50,821 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:12:50,821 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:12:50,821 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:12:50,821 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:13:00,833 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:13:00,833 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:13:00,834 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:13:00,834 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:13:00,835 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:13:00,835 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:13:00,835 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:13:00,835 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:13:10,843 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:13:10,843 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:13:10,844 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:13:10,844 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:13:10,846 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:13:10,846 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:13:10,847 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:13:10,847 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:13:20,862 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:13:20,862 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:13:20,863 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:13:20,863 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:13:20,864 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:13:20,864 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:13:20,864 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:13:20,864 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:13:30,869 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:13:30,869 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:13:30,870 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:13:30,870 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:13:30,872 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:13:30,872 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:13:30,873 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:13:30,873 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:13:40,886 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:13:40,886 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:13:40,887 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:13:40,887 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:13:40,889 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:13:40,889 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:13:40,889 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:13:40,889 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:13:50,894 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:13:50,894 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:13:50,895 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:13:50,895 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:13:50,897 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:13:50,897 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:13:50,897 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:13:50,897 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:14:00,904 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:14:00,904 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:14:00,905 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:14:00,905 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:14:00,906 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:14:00,906 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:14:00,907 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:14:00,907 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:14:10,921 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:14:10,921 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:14:10,922 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:14:10,922 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:14:10,923 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:14:10,923 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:14:10,923 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:14:10,923 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:14:20,925 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:14:20,925 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:14:20,926 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:14:20,926 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:14:20,927 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:14:20,927 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:14:20,928 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:14:20,928 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:14:30,934 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:14:30,934 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:14:30,935 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:14:30,935 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:14:30,936 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:14:30,936 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:14:30,937 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:14:30,937 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:14:40,944 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:14:40,944 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:14:40,945 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:14:40,945 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:14:40,946 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:14:40,946 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:14:40,947 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:14:40,947 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:14:50,949 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:14:50,949 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:14:50,950 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:14:50,950 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:14:50,951 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:14:50,951 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:14:50,951 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:14:50,951 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:15:00,956 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:15:00,956 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:15:00,957 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:15:00,957 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:15:00,958 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:15:00,958 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:15:00,959 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:15:00,959 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:15:10,970 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:15:10,970 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:15:10,971 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:15:10,971 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:15:10,972 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:15:10,972 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:15:10,972 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:15:10,972 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:15:20,982 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:15:20,982 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:15:20,983 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:15:20,983 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:15:20,985 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:15:20,985 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:15:20,986 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:15:20,986 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:15:27,178 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:15:27,178 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:15:27,178 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 22:15:27,178 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 22:15:27,179 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:15:27,179 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:15:27,180 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 22:15:27,180 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 22:15:31,001 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:15:31,001 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:15:31,001 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:15:31,001 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:15:31,002 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:15:31,002 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:15:31,003 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:15:31,003 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:15:41,009 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:15:41,009 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:15:41,010 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:15:41,010 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:15:41,011 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:15:41,011 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:15:41,012 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:15:41,012 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:15:51,029 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:15:51,029 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:15:51,029 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:15:51,029 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:15:51,031 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:15:51,031 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:15:51,031 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:15:51,031 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:16:01,032 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:16:01,032 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:16:01,033 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:16:01,033 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:16:01,034 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:16:01,034 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:16:01,035 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:16:01,035 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:16:11,042 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:16:11,042 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:16:11,043 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:16:11,043 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:16:11,044 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:16:11,044 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:16:11,045 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:16:11,045 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:16:21,058 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:16:21,058 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:16:21,058 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:16:21,058 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:16:21,060 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:16:21,060 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:16:21,061 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:16:21,061 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:16:31,077 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:16:31,077 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:16:31,078 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:16:31,078 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:16:31,079 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:16:31,079 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:16:31,080 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:16:31,080 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:16:41,091 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:16:41,091 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:16:41,092 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:16:41,092 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:16:41,093 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:16:41,093 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:16:41,093 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:16:41,093 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:16:51,100 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:16:51,100 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:16:51,101 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:16:51,101 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:16:51,102 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:16:51,102 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:16:51,103 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:16:51,103 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:17:01,109 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:17:01,109 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:17:01,110 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:17:01,110 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:17:01,111 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:17:01,111 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:17:01,112 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:17:01,112 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:17:11,114 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:17:11,114 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:17:11,115 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:17:11,115 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:17:11,116 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:17:11,116 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:17:11,116 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:17:11,116 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:17:21,124 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:17:21,124 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:17:21,124 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:17:21,124 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:17:21,126 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:17:21,126 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:17:21,127 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:17:21,127 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:17:31,147 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:17:31,147 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:17:31,147 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:17:31,147 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:17:31,150 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:17:31,150 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:17:31,150 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:17:31,150 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:17:41,157 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:17:41,157 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:17:41,158 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:17:41,158 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:17:41,159 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:17:41,159 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:17:41,159 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:17:41,159 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:17:51,162 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:17:51,162 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:17:51,162 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:17:51,162 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:17:51,164 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:17:51,164 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:17:51,164 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:17:51,164 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:18:01,165 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:18:01,165 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:18:01,166 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:18:01,166 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:18:01,167 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:18:01,167 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:18:01,168 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:18:01,168 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:18:11,182 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:18:11,182 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:18:11,183 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:18:11,183 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:18:11,184 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:18:11,184 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:18:11,185 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:18:11,185 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:18:21,193 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:18:21,193 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:18:21,194 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:18:21,194 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:18:21,195 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:18:21,195 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:18:21,196 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:18:21,196 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:18:31,208 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:18:31,208 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:18:31,208 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:18:31,208 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:18:31,210 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:18:31,210 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:18:31,210 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:18:31,210 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:18:41,224 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:18:41,224 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:18:41,224 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:18:41,224 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:18:41,226 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:18:41,226 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:18:41,226 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:18:41,226 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:18:51,235 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:18:51,235 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:18:51,236 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:18:51,236 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:18:51,237 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:18:51,237 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:18:51,237 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:18:51,237 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:19:01,251 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:19:01,251 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:19:01,252 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:19:01,252 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:19:01,254 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:19:01,254 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:19:01,255 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:19:01,255 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:19:11,266 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:19:11,266 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:19:11,267 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:19:11,267 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:19:11,268 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:19:11,268 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:19:11,269 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:19:11,269 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:19:21,279 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:19:21,279 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:19:21,280 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:19:21,280 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:19:21,282 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:19:21,282 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:19:21,282 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:19:21,282 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:19:31,293 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:19:31,293 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:19:31,294 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:19:31,294 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:19:31,295 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:19:31,295 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:19:31,296 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:19:31,296 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:19:41,299 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:19:41,299 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:19:41,300 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:19:41,300 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:19:41,302 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:19:41,302 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:19:41,303 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:19:41,303 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:19:51,315 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:19:51,315 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:19:51,316 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:19:51,316 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:19:51,318 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:19:51,318 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:19:51,318 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:19:51,318 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:20:01,334 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:20:01,334 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:20:01,334 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:20:01,334 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:20:01,336 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:20:01,336 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:20:01,336 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:20:01,336 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:20:11,346 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:20:11,346 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:20:11,346 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:20:11,346 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:20:11,348 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:20:11,348 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:20:11,348 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:20:11,348 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:20:21,360 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:20:21,360 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:20:21,361 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:20:21,361 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:20:21,363 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:20:21,363 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:20:21,364 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:20:21,364 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:20:27,195 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:20:27,195 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:20:27,196 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 22:20:27,196 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 22:20:27,197 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:20:27,197 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:20:27,198 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 22:20:27,198 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 22:20:31,370 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:20:31,370 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:20:31,371 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:20:31,371 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:20:31,372 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:20:31,372 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:20:31,373 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:20:31,373 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:20:41,379 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:20:41,379 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:20:41,380 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:20:41,380 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:20:41,381 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:20:41,381 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:20:41,381 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:20:41,381 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:20:51,390 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:20:51,390 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:20:51,390 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:20:51,390 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:20:51,391 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:20:51,391 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:20:51,392 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:20:51,392 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:21:01,405 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:21:01,405 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:21:01,406 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:21:01,406 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:21:01,407 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:21:01,407 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:21:01,408 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:21:01,408 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:21:11,276 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 22:21:11,276 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 22:21:11,280 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 22:21:11,280 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 22:21:11,280 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 20:21:11(String)
2021-04-26 22:21:11,280 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 20:21:11(String)
2021-04-26 22:21:11,282 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 22:21:11,282 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 22:21:11,417 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:21:11,417 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:21:11,418 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:21:11,418 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:21:11,419 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:21:11,419 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:21:11,420 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:21:11,420 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:21:21,429 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:21:21,429 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:21:21,430 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:21:21,430 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:21:21,431 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:21:21,431 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:21:21,432 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:21:21,432 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:21:31,442 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:21:31,442 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:21:31,443 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:21:31,443 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:21:31,452 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:21:31,452 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:21:31,453 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:21:31,453 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:21:41,462 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:21:41,462 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:21:41,463 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:21:41,463 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:21:41,464 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:21:41,464 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:21:41,465 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:21:41,465 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:21:51,473 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:21:51,473 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:21:51,474 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:21:51,474 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:21:51,475 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:21:51,475 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:21:51,476 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:21:51,476 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:22:01,480 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:22:01,480 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:22:01,481 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:22:01,481 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:22:01,482 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:22:01,482 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:22:01,482 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:22:01,482 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:22:11,495 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:22:11,495 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:22:11,496 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:22:11,496 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:22:11,497 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:22:11,497 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:22:11,497 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:22:11,497 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:22:21,514 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:22:21,514 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:22:21,514 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:22:21,514 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:22:21,515 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:22:21,515 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:22:21,516 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:22:21,516 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:22:31,518 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:22:31,518 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:22:31,519 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:22:31,519 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:22:31,521 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:22:31,521 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:22:31,521 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:22:31,521 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:22:41,532 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:22:41,532 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:22:41,533 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:22:41,533 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:22:41,535 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:22:41,535 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:22:41,536 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:22:41,536 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:22:51,537 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:22:51,537 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:22:51,538 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:22:51,538 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:22:51,539 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:22:51,539 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:22:51,539 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:22:51,539 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:23:01,549 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:23:01,549 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:23:01,550 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:23:01,550 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:23:01,551 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:23:01,551 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:23:01,552 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:23:01,552 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:23:11,562 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:23:11,562 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:23:11,563 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:23:11,563 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:23:11,565 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:23:11,565 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:23:11,565 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:23:11,565 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:23:21,574 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:23:21,574 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:23:21,575 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:23:21,575 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:23:21,577 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:23:21,577 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:23:21,578 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:23:21,578 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:23:31,585 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:23:31,585 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:23:31,586 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:23:31,586 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:23:31,588 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:23:31,588 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:23:31,588 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:23:31,588 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:23:41,597 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:23:41,597 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:23:41,598 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:23:41,598 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:23:41,599 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:23:41,599 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:23:41,600 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:23:41,600 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:23:51,611 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:23:51,611 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:23:51,612 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:23:51,612 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:23:51,613 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:23:51,613 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:23:51,613 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:23:51,613 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:24:01,618 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:24:01,618 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:24:01,619 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:24:01,619 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:24:01,625 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:24:01,625 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:24:01,626 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:24:01,626 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:24:11,638 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:24:11,638 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:24:11,639 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:24:11,639 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:24:11,641 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:24:11,641 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:24:11,642 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:24:11,642 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:24:21,656 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:24:21,656 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:24:21,657 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:24:21,657 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:24:21,658 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:24:21,658 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:24:21,658 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:24:21,658 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:24:31,671 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:24:31,671 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:24:31,672 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:24:31,672 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:24:31,673 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:24:31,673 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:24:31,674 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:24:31,674 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:24:41,688 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:24:41,688 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:24:41,689 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:24:41,689 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:24:41,690 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:24:41,690 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:24:41,691 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:24:41,691 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:24:51,692 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:24:51,692 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:24:51,693 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:24:51,693 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:24:51,695 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:24:51,695 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:24:51,695 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:24:51,695 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:25:01,705 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:25:01,705 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:25:01,706 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:25:01,706 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:25:01,707 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:25:01,707 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:25:01,707 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:25:01,707 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:25:11,715 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:25:11,715 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:25:11,716 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:25:11,716 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:25:11,718 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:25:11,718 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:25:11,719 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:25:11,719 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:25:21,725 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:25:21,725 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:25:21,725 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:25:21,725 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:25:21,727 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:25:21,727 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:25:21,727 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:25:21,727 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:25:27,203 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:25:27,203 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:25:27,204 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 22:25:27,204 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 22:25:27,206 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:25:27,206 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:25:27,207 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 22:25:27,207 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 22:25:31,741 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:25:31,741 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:25:31,741 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:25:31,741 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:25:31,742 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:25:31,742 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:25:31,743 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:25:31,743 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:25:41,758 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:25:41,758 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:25:41,759 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:25:41,759 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:25:41,760 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:25:41,760 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:25:41,760 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:25:41,760 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:25:51,773 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:25:51,773 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:25:51,774 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:25:51,774 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:25:51,775 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:25:51,775 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:25:51,775 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:25:51,775 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:26:01,779 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:26:01,779 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:26:01,780 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:26:01,780 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:26:01,781 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:26:01,781 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:26:01,781 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:26:01,781 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:26:11,788 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:26:11,788 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:26:11,789 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:26:11,789 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:26:11,791 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:26:11,791 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:26:11,792 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:26:11,792 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:26:21,792 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:26:21,792 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:26:21,793 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:26:21,793 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:26:21,794 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:26:21,794 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:26:21,794 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:26:21,794 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:26:31,804 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:26:31,804 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:26:31,805 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:26:31,805 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:26:31,807 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:26:31,807 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:26:31,807 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:26:31,807 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:26:41,819 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:26:41,819 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:26:41,820 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:26:41,820 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:26:41,821 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:26:41,821 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:26:41,821 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:26:41,821 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:26:51,837 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:26:51,837 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:26:51,838 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:26:51,838 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:26:51,839 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:26:51,839 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:26:51,840 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:26:51,840 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:27:01,841 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:27:01,841 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:27:01,842 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:27:01,842 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:27:01,843 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:27:01,843 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:27:01,844 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:27:01,844 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:27:11,846 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:27:11,846 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:27:11,846 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:27:11,846 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:27:11,849 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:27:11,849 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:27:11,849 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:27:11,849 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:27:21,856 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:27:21,856 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:27:21,857 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:27:21,857 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:27:21,859 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:27:21,859 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:27:21,859 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:27:21,859 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:27:31,868 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:27:31,868 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:27:31,868 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:27:31,868 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:27:31,869 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:27:31,869 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:27:31,870 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:27:31,870 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:27:41,881 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:27:41,881 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:27:41,881 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:27:41,881 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:27:41,883 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:27:41,883 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:27:41,883 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:27:41,883 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:27:51,887 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:27:51,887 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:27:51,888 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:27:51,888 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:27:51,890 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:27:51,890 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:27:51,890 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:27:51,890 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:28:01,898 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:28:01,898 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:28:01,899 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:28:01,899 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:28:01,900 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:28:01,900 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:28:01,901 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:28:01,901 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:28:11,904 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:28:11,904 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:28:11,905 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:28:11,905 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:28:11,906 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:28:11,906 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:28:11,907 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:28:11,907 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:28:21,908 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:28:21,908 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:28:21,909 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:28:21,909 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:28:21,910 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:28:21,910 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:28:21,911 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:28:21,911 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:28:31,916 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:28:31,916 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:28:31,917 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:28:31,917 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:28:31,919 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:28:31,919 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:28:31,920 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:28:31,920 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:28:41,930 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:28:41,930 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:28:41,930 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:28:41,930 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:28:41,931 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:28:41,931 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:28:41,932 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:28:41,932 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:28:51,936 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:28:51,936 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:28:51,936 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:28:51,936 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:28:51,937 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:28:51,937 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:28:51,938 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:28:51,938 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:29:01,952 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:29:01,952 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:29:01,953 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:29:01,953 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:29:01,955 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:29:01,955 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:29:01,955 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:29:01,955 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:29:11,959 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:29:11,959 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:29:11,960 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:29:11,960 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:29:11,961 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:29:11,961 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:29:11,962 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:29:11,962 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:29:21,973 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:29:21,973 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:29:21,974 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:29:21,974 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:29:21,975 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:29:21,975 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:29:21,975 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:29:21,975 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:29:31,988 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:29:31,988 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:29:31,989 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:29:31,989 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:29:31,991 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:29:31,991 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:29:31,991 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:29:31,991 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:29:42,003 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:29:42,003 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:29:42,004 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:29:42,004 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:29:42,005 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:29:42,005 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:29:42,005 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:29:42,005 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:29:52,007 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:29:52,007 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:29:52,007 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:29:52,007 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:29:52,008 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:29:52,008 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:29:52,009 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:29:52,009 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:30:02,020 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:30:02,020 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:30:02,021 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:30:02,021 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:30:02,024 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:30:02,024 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:30:02,024 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:30:02,024 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:30:12,027 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:30:12,027 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:30:12,028 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:30:12,028 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:30:12,029 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:30:12,029 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:30:12,030 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:30:12,030 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:30:22,046 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:30:22,046 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:30:22,047 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:30:22,047 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:30:22,049 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:30:22,049 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:30:22,050 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:30:22,050 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:30:27,208 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:30:27,208 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:30:27,208 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 22:30:27,208 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 22:30:27,209 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:30:27,209 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:30:27,210 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 22:30:27,210 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 22:30:32,063 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:30:32,063 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:30:32,064 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:30:32,064 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:30:32,065 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:30:32,065 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:30:32,066 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:30:32,066 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:30:42,068 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:30:42,068 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:30:42,068 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:30:42,068 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:30:42,070 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:30:42,070 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:30:42,072 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:30:42,072 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:30:52,074 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:30:52,074 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:30:52,075 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:30:52,075 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:30:52,076 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:30:52,076 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:30:52,077 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:30:52,077 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:31:02,081 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:31:02,081 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:31:02,082 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:31:02,082 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:31:02,083 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:31:02,083 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:31:02,084 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:31:02,084 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:31:11,297 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 22:31:11,297 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 22:31:11,298 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 22:31:11,298 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 22:31:11,298 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 20:31:11(String)
2021-04-26 22:31:11,298 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 20:31:11(String)
2021-04-26 22:31:11,299 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 22:31:11,299 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 22:31:12,091 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:31:12,091 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:31:12,092 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:31:12,092 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:31:12,094 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:31:12,094 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:31:12,094 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:31:12,094 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:31:22,108 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:31:22,108 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:31:22,109 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:31:22,109 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:31:22,110 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:31:22,110 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:31:22,111 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:31:22,111 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:31:32,126 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:31:32,126 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:31:32,126 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:31:32,126 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:31:32,128 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:31:32,128 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:31:32,128 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:31:32,128 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:31:42,133 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:31:42,133 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:31:42,134 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:31:42,134 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:31:42,135 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:31:42,135 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:31:42,136 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:31:42,136 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:31:52,142 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:31:52,142 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:31:52,143 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:31:52,143 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:31:52,144 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:31:52,144 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:31:52,145 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:31:52,145 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:32:02,151 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:32:02,151 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:32:02,151 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:32:02,151 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:32:02,152 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:32:02,152 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:32:02,152 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:32:02,152 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:32:12,169 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:32:12,169 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:32:12,170 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:32:12,170 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:32:12,171 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:32:12,171 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:32:12,172 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:32:12,172 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:32:22,180 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:32:22,180 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:32:22,181 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:32:22,181 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:32:22,183 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:32:22,183 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:32:22,184 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:32:22,184 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:32:32,191 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:32:32,191 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:32:32,192 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:32:32,192 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:32:32,194 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:32:32,194 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:32:32,195 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:32:32,195 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:32:42,212 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:32:42,212 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:32:42,213 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:32:42,213 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:32:42,214 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:32:42,214 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:32:42,215 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:32:42,215 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:32:52,226 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:32:52,226 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:32:52,227 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:32:52,227 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:32:52,231 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:32:52,231 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:32:52,232 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:32:52,232 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:33:02,248 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:33:02,248 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:33:02,249 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:33:02,249 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:33:02,251 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:33:02,251 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:33:02,252 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:33:02,252 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:33:12,260 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:33:12,260 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:33:12,260 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:33:12,260 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:33:12,262 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:33:12,262 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:33:12,263 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:33:12,263 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:33:22,269 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:33:22,269 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:33:22,270 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:33:22,270 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:33:22,271 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:33:22,271 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:33:22,271 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:33:22,271 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:33:32,274 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:33:32,274 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:33:32,275 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:33:32,275 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:33:32,276 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:33:32,276 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:33:32,276 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:33:32,276 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:33:42,288 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:33:42,288 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:33:42,288 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:33:42,288 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:33:42,289 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:33:42,289 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:33:42,290 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:33:42,290 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:33:52,298 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:33:52,298 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:33:52,299 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:33:52,299 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:33:52,301 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:33:52,301 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:33:52,302 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:33:52,302 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:34:02,305 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:34:02,305 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:34:02,306 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:34:02,306 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:34:02,307 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:34:02,307 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:34:02,308 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:34:02,308 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:34:12,315 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:34:12,315 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:34:12,315 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:34:12,315 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:34:12,317 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:34:12,317 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:34:12,318 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:34:12,318 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:34:22,329 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:34:22,329 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:34:22,330 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:34:22,330 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:34:22,332 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:34:22,332 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:34:22,333 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:34:22,333 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:34:32,338 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:34:32,338 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:34:32,339 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:34:32,339 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:34:32,340 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:34:32,340 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:34:32,340 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:34:32,340 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:34:42,344 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:34:42,344 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:34:42,345 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:34:42,345 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:34:42,346 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:34:42,346 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:34:42,347 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:34:42,347 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:34:52,361 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:34:52,361 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:34:52,361 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:34:52,361 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:34:52,364 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:34:52,364 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:34:52,364 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:34:52,364 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:35:02,374 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:35:02,374 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:35:02,375 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:35:02,375 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:35:02,376 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:35:02,376 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:35:02,377 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:35:02,377 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:35:12,392 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:35:12,392 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:35:12,392 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:35:12,392 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:35:12,393 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:35:12,393 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:35:12,394 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:35:12,394 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:35:22,396 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:35:22,396 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:35:22,397 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:35:22,397 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:35:22,399 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:35:22,399 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:35:22,399 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:35:22,399 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:35:27,223 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:35:27,223 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:35:27,224 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 22:35:27,224 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 22:35:27,225 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:35:27,225 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:35:27,226 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 22:35:27,226 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 22:35:32,415 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:35:32,415 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:35:32,416 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:35:32,416 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:35:32,417 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:35:32,417 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:35:32,418 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:35:32,418 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:35:42,426 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:35:42,426 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:35:42,427 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:35:42,427 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:35:42,428 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:35:42,428 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:35:42,429 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:35:42,429 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:35:52,437 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:35:52,437 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:35:52,438 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:35:52,438 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:35:52,439 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:35:52,439 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:35:52,440 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:35:52,440 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:36:02,455 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:36:02,455 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:36:02,456 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:36:02,456 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:36:02,457 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:36:02,457 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:36:02,458 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:36:02,458 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:36:12,461 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:36:12,461 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:36:12,462 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:36:12,462 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:36:12,463 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:36:12,463 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:36:12,464 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:36:12,464 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:36:22,475 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:36:22,475 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:36:22,475 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:36:22,475 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:36:22,477 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:36:22,477 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:36:22,478 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:36:22,478 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:36:32,479 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:36:32,479 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:36:32,480 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:36:32,480 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:36:32,481 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:36:32,481 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:36:32,482 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:36:32,482 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:36:42,494 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:36:42,494 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:36:42,494 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:36:42,494 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:36:42,496 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:36:42,496 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:36:42,497 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:36:42,497 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:36:52,510 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:36:52,510 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:36:52,511 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:36:52,511 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:36:52,512 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:36:52,512 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:36:52,513 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:36:52,513 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:37:02,520 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:37:02,520 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:37:02,521 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:37:02,521 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:37:02,522 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:37:02,522 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:37:02,523 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:37:02,523 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:37:12,532 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:37:12,532 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:37:12,533 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:37:12,533 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:37:12,534 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:37:12,534 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:37:12,535 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:37:12,535 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:37:22,550 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:37:22,550 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:37:22,551 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:37:22,551 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:37:22,552 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:37:22,552 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:37:22,552 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:37:22,552 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:37:32,559 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:37:32,559 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:37:32,560 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:37:32,560 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:37:32,562 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:37:32,562 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:37:32,562 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:37:32,562 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:37:42,572 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:37:42,572 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:37:42,573 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:37:42,573 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:37:42,574 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:37:42,574 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:37:42,575 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:37:42,575 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:37:52,586 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:37:52,586 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:37:52,587 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:37:52,587 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:37:52,588 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:37:52,588 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:37:52,589 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:37:52,589 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:38:02,602 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:38:02,602 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:38:02,603 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:38:02,603 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:38:02,604 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:38:02,604 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:38:02,605 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:38:02,605 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:38:12,616 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:38:12,616 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:38:12,617 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:38:12,617 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:38:12,618 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:38:12,618 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:38:12,619 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:38:12,619 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:38:22,620 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:38:22,620 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:38:22,621 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:38:22,621 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:38:22,622 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:38:22,622 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:38:22,623 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:38:22,623 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:38:32,639 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:38:32,639 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:38:32,640 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:38:32,640 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:38:32,641 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:38:32,641 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:38:32,641 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:38:32,641 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:38:42,655 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:38:42,655 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:38:42,656 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:38:42,656 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:38:42,657 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:38:42,657 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:38:42,658 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:38:42,658 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:38:52,670 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:38:52,670 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:38:52,671 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:38:52,671 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:38:52,672 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:38:52,672 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:38:52,672 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:38:52,672 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:39:02,682 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:39:02,682 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:39:02,683 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:39:02,683 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:39:02,688 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:39:02,688 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:39:02,688 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:39:02,688 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:39:12,699 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:39:12,699 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:39:12,700 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:39:12,700 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:39:12,701 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:39:12,701 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:39:12,702 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:39:12,702 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:39:22,714 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:39:22,714 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:39:22,714 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:39:22,714 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:39:22,715 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:39:22,715 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:39:22,716 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:39:22,716 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:39:32,719 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:39:32,719 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:39:32,720 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:39:32,720 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:39:32,721 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:39:32,721 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:39:32,721 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:39:32,721 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:39:42,723 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:39:42,723 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:39:42,724 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:39:42,724 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:39:42,725 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:39:42,725 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:39:42,726 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:39:42,726 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:39:52,738 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:39:52,738 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:39:52,739 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:39:52,739 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:39:52,740 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:39:52,740 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:39:52,741 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:39:52,741 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:40:02,756 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:40:02,756 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:40:02,757 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:40:02,757 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:40:02,758 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:40:02,758 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:40:02,759 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:40:02,759 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:40:12,764 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:40:12,764 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:40:12,764 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:40:12,764 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:40:12,766 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:40:12,766 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:40:12,767 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:40:12,767 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:40:22,782 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:40:22,782 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:40:22,783 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:40:22,783 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:40:22,784 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:40:22,784 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:40:22,784 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:40:22,784 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:40:27,235 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:40:27,235 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:40:27,236 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 22:40:27,236 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 22:40:27,238 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:40:27,238 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:40:27,238 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 22:40:27,238 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 22:40:32,799 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:40:32,799 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:40:32,800 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:40:32,800 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:40:32,801 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:40:32,801 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:40:32,802 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:40:32,802 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:40:42,811 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:40:42,811 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:40:42,812 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:40:42,812 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:40:42,813 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:40:42,813 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:40:42,814 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:40:42,814 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:40:52,821 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:40:52,821 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:40:52,822 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:40:52,822 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:40:52,824 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:40:52,824 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:40:52,824 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:40:52,824 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:41:02,831 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:41:02,831 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:41:02,832 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:41:02,832 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:41:02,833 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:41:02,833 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:41:02,833 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:41:02,833 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:41:11,315 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 22:41:11,315 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 22:41:11,317 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 22:41:11,317 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 22:41:11,317 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 20:41:11(String)
2021-04-26 22:41:11,317 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 20:41:11(String)
2021-04-26 22:41:11,319 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 22:41:11,319 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 22:41:12,848 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:41:12,848 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:41:12,848 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:41:12,848 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:41:12,850 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:41:12,850 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:41:12,850 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:41:12,850 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:41:22,856 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:41:22,856 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:41:22,857 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:41:22,857 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:41:22,858 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:41:22,858 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:41:22,858 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:41:22,858 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:41:32,864 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:41:32,864 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:41:32,865 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:41:32,865 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:41:32,866 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:41:32,866 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:41:32,866 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:41:32,866 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:41:42,874 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:41:42,874 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:41:42,875 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:41:42,875 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:41:42,876 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:41:42,876 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:41:42,876 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:41:42,876 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:41:52,883 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:41:52,883 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:41:52,884 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:41:52,884 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:41:52,885 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:41:52,885 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:41:52,885 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:41:52,885 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:42:02,896 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:42:02,896 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:42:02,897 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:42:02,897 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:42:02,898 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:42:02,898 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:42:02,899 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:42:02,899 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:42:12,906 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:42:12,906 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:42:12,906 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:42:12,906 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:42:12,910 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:42:12,910 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:42:12,911 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:42:12,911 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:42:22,917 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:42:22,917 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:42:22,917 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:42:22,917 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:42:22,919 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:42:22,919 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:42:22,919 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:42:22,919 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:42:32,924 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:42:32,924 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:42:32,925 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:42:32,925 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:42:32,926 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:42:32,926 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:42:32,927 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:42:32,927 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:42:42,939 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:42:42,939 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:42:42,940 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:42:42,940 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:42:42,941 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:42:42,941 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:42:42,942 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:42:42,942 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:42:52,947 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:42:52,947 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:42:52,948 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:42:52,948 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:42:52,949 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:42:52,949 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:42:52,949 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:42:52,949 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:43:02,959 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:43:02,959 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:43:02,960 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:43:02,960 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:43:02,961 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:43:02,961 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:43:02,962 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:43:02,962 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:43:12,974 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:43:12,974 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:43:12,975 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:43:12,975 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:43:12,976 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:43:12,976 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:43:12,977 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:43:12,977 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:43:22,983 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:43:22,983 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:43:22,984 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:43:22,984 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:43:22,985 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:43:22,985 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:43:22,986 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:43:22,986 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:43:32,996 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:43:32,996 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:43:32,997 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:43:32,997 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:43:32,998 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:43:32,998 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:43:32,998 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:43:32,998 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:43:43,003 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:43:43,003 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:43:43,004 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:43:43,004 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:43:43,005 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:43:43,005 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:43:43,005 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:43:43,005 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:43:53,012 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:43:53,012 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:43:53,013 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:43:53,013 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:43:53,014 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:43:53,014 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:43:53,015 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:43:53,015 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:44:03,026 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:44:03,026 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:44:03,027 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:44:03,027 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:44:03,033 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:44:03,033 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:44:03,034 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:44:03,034 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:44:13,040 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:44:13,040 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:44:13,041 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:44:13,041 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:44:13,042 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:44:13,042 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:44:13,042 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:44:13,042 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:44:23,049 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:44:23,049 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:44:23,050 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:44:23,050 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:44:23,051 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:44:23,051 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:44:23,052 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:44:23,052 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:44:33,058 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:44:33,058 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:44:33,059 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:44:33,059 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:44:33,061 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:44:33,061 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:44:33,061 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:44:33,061 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:44:43,070 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:44:43,070 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:44:43,071 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:44:43,071 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:44:43,072 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:44:43,072 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:44:43,073 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:44:43,073 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:44:53,078 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:44:53,078 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:44:53,079 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:44:53,079 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:44:53,080 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:44:53,080 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:44:53,080 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:44:53,080 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:45:03,096 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:45:03,096 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:45:03,097 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:45:03,097 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:45:03,098 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:45:03,098 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:45:03,099 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:45:03,099 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:45:13,112 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:45:13,112 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:45:13,113 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:45:13,113 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:45:13,114 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:45:13,114 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:45:13,114 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:45:13,114 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:45:23,115 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:45:23,115 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:45:23,116 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:45:23,116 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:45:23,117 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:45:23,117 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:45:23,117 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:45:23,117 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:45:27,242 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:45:27,242 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:45:27,243 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 22:45:27,243 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 22:45:27,244 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:45:27,244 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:45:27,245 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 22:45:27,245 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 22:45:33,134 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:45:33,134 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:45:33,135 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:45:33,135 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:45:33,136 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:45:33,136 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:45:33,137 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:45:33,137 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:45:43,150 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:45:43,150 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:45:43,151 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:45:43,151 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:45:43,152 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:45:43,152 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:45:43,153 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:45:43,153 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:45:53,168 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:45:53,168 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:45:53,169 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:45:53,169 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:45:53,175 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:45:53,175 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:45:53,175 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:45:53,175 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:46:03,190 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:46:03,190 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:46:03,191 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:46:03,191 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:46:03,192 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:46:03,192 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:46:03,193 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:46:03,193 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:46:13,197 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:46:13,197 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:46:13,197 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:46:13,197 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:46:13,198 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:46:13,198 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:46:13,199 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:46:13,199 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:46:23,202 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:46:23,202 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:46:23,203 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:46:23,203 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:46:23,205 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:46:23,205 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:46:23,205 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:46:23,205 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:46:33,221 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:46:33,221 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:46:33,222 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:46:33,222 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:46:33,223 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:46:33,223 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:46:33,224 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:46:33,224 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:46:43,225 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:46:43,225 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:46:43,226 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:46:43,226 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:46:43,227 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:46:43,227 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:46:43,228 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:46:43,228 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:46:53,241 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:46:53,241 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:46:53,242 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:46:53,242 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:46:53,243 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:46:53,243 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:46:53,243 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:46:53,243 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:47:03,252 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:47:03,252 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:47:03,252 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:47:03,252 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:47:03,254 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:47:03,254 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:47:03,254 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:47:03,254 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:47:13,262 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:47:13,262 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:47:13,262 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:47:13,262 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:47:13,264 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:47:13,264 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:47:13,264 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:47:13,264 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:47:23,270 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:47:23,270 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:47:23,271 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:47:23,271 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:47:23,272 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:47:23,272 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:47:23,273 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:47:23,273 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:47:33,274 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:47:33,274 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:47:33,275 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:47:33,275 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:47:33,277 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:47:33,277 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:47:33,278 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:47:33,278 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:47:43,286 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:47:43,286 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:47:43,287 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:47:43,287 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:47:43,288 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:47:43,288 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:47:43,288 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:47:43,288 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:47:53,292 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:47:53,292 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:47:53,293 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:47:53,293 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:47:53,294 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:47:53,294 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:47:53,294 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:47:53,294 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:48:03,306 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:48:03,306 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:48:03,307 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:48:03,307 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:48:03,309 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:48:03,309 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:48:03,310 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:48:03,310 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:48:13,323 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:48:13,323 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:48:13,323 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:48:13,323 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:48:13,325 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:48:13,325 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:48:13,325 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:48:13,325 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:48:23,336 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:48:23,336 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:48:23,337 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:48:23,337 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:48:23,338 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:48:23,338 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:48:23,339 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:48:23,339 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:48:33,356 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:48:33,356 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:48:33,357 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:48:33,357 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:48:33,359 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:48:33,359 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:48:33,360 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:48:33,360 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:48:43,372 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:48:43,372 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:48:43,373 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:48:43,373 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:48:43,374 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:48:43,374 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:48:43,374 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:48:43,374 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:48:53,383 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:48:53,383 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:48:53,384 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:48:53,384 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:48:53,385 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:48:53,385 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:48:53,385 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:48:53,385 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:49:03,387 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:49:03,387 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:49:03,388 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:49:03,388 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:49:03,389 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:49:03,389 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:49:03,389 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:49:03,389 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:49:13,399 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:49:13,399 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:49:13,400 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:49:13,400 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:49:13,401 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:49:13,401 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:49:13,401 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:49:13,401 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:49:23,405 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:49:23,405 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:49:23,406 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:49:23,406 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:49:23,408 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:49:23,408 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:49:23,408 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:49:23,408 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:49:33,410 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:49:33,410 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:49:33,411 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:49:33,411 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:49:33,412 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:49:33,412 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:49:33,412 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:49:33,412 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:49:43,424 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:49:43,424 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:49:43,425 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:49:43,425 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:49:43,427 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:49:43,427 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:49:43,428 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:49:43,428 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:49:53,431 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:49:53,431 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:49:53,432 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:49:53,432 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:49:53,433 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:49:53,433 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:49:53,434 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:49:53,434 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:50:03,438 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:50:03,438 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:50:03,439 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:50:03,439 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:50:03,441 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:50:03,441 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:50:03,441 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:50:03,441 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:50:13,445 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:50:13,445 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:50:13,446 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:50:13,446 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:50:13,447 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:50:13,447 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:50:13,448 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:50:13,448 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:50:23,460 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:50:23,460 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:50:23,462 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:50:23,462 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:50:23,462 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:50:23,462 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:50:23,464 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:50:23,464 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:50:27,259 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:50:27,259 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:50:27,259 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 22:50:27,259 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 22:50:27,261 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:50:27,261 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:50:27,261 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 22:50:27,261 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 22:50:33,476 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:50:33,476 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:50:33,477 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:50:33,477 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:50:33,478 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:50:33,478 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:50:33,479 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:50:33,479 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:50:43,484 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:50:43,484 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:50:43,485 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:50:43,485 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:50:43,486 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:50:43,486 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:50:43,487 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:50:43,487 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:50:53,497 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:50:53,497 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:50:53,497 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:50:53,497 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:50:53,498 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:50:53,498 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:50:53,499 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:50:53,499 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:51:03,509 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:51:03,509 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:51:03,510 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:51:03,510 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:51:03,511 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:51:03,511 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:51:03,512 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:51:03,512 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:51:11,325 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 22:51:11,325 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 22:51:11,326 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 22:51:11,326 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 22:51:11,327 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 20:51:11(String)
2021-04-26 22:51:11,327 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 20:51:11(String)
2021-04-26 22:51:11,328 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 22:51:11,328 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 22:51:13,526 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:51:13,526 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:51:13,526 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:51:13,526 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:51:13,527 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:51:13,527 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:51:13,528 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:51:13,528 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:51:23,535 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:51:23,535 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:51:23,536 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:51:23,536 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:51:23,537 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:51:23,537 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:51:23,538 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:51:23,538 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:51:33,545 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:51:33,545 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:51:33,545 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:51:33,545 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:51:33,547 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:51:33,547 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:51:33,547 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:51:33,547 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:51:43,553 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:51:43,553 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:51:43,554 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:51:43,554 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:51:43,555 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:51:43,555 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:51:43,556 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:51:43,556 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:51:53,567 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:51:53,567 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:51:53,568 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:51:53,568 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:51:53,570 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:51:53,570 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:51:53,570 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:51:53,570 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:52:03,574 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:52:03,574 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:52:03,575 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:52:03,575 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:52:03,576 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:52:03,576 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:52:03,576 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:52:03,576 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:52:13,580 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:52:13,580 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:52:13,581 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:52:13,581 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:52:13,583 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:52:13,583 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:52:13,583 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:52:13,583 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:52:23,598 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:52:23,598 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:52:23,599 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:52:23,599 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:52:23,600 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:52:23,600 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:52:23,601 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:52:23,601 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:52:33,616 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:52:33,616 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:52:33,617 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:52:33,617 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:52:33,618 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:52:33,618 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:52:33,619 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:52:33,619 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:52:43,634 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:52:43,634 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:52:43,635 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:52:43,635 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:52:43,636 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:52:43,636 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:52:43,636 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:52:43,636 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:52:53,639 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:52:53,639 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:52:53,640 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:52:53,640 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:52:53,641 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:52:53,641 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:52:53,642 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:52:53,642 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:53:03,647 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:53:03,647 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:53:03,648 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:53:03,648 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:53:03,649 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:53:03,649 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:53:03,649 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:53:03,649 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:53:13,664 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:53:13,664 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:53:13,665 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:53:13,665 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:53:13,666 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:53:13,666 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:53:13,666 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:53:13,666 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:53:23,673 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:53:23,673 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:53:23,674 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:53:23,674 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:53:23,676 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:53:23,676 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:53:23,676 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:53:23,676 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:53:33,680 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:53:33,680 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:53:33,681 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:53:33,681 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:53:33,682 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:53:33,682 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:53:33,683 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:53:33,683 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:53:43,689 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:53:43,689 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:53:43,690 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:53:43,690 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:53:43,691 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:53:43,691 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:53:43,692 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:53:43,692 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:53:53,702 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:53:53,702 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:53:53,703 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:53:53,703 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:53:53,704 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:53:53,704 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:53:53,704 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:53:53,704 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:54:03,707 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:54:03,707 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:54:03,708 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:54:03,708 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:54:03,709 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:54:03,709 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:54:03,709 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:54:03,709 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:54:13,710 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:54:13,710 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:54:13,711 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:54:13,711 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:54:13,712 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:54:13,712 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:54:13,713 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:54:13,713 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:54:23,723 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:54:23,723 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:54:23,723 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:54:23,723 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:54:23,725 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:54:23,725 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:54:23,725 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:54:23,725 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:54:33,741 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:54:33,741 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:54:33,742 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:54:33,742 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:54:33,743 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:54:33,743 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:54:33,743 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:54:33,743 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:54:43,755 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:54:43,755 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:54:43,756 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:54:43,756 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:54:43,758 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:54:43,758 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:54:43,758 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:54:43,758 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:54:53,762 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:54:53,762 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:54:53,763 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:54:53,763 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:54:53,764 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:54:53,764 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:54:53,764 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:54:53,764 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:55:03,768 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:55:03,768 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:55:03,768 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:55:03,768 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:55:03,770 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:55:03,770 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:55:03,771 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:55:03,771 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:55:13,784 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:55:13,784 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:55:13,785 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:55:13,785 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:55:13,787 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:55:13,787 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:55:13,788 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:55:13,788 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:55:23,802 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:55:23,802 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:55:23,803 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:55:23,803 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:55:23,804 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:55:23,804 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:55:23,804 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:55:23,804 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:55:27,276 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:55:27,276 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:55:27,277 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 22:55:27,277 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 22:55:27,278 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:55:27,278 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:55:27,279 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 22:55:27,279 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 22:55:33,818 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:55:33,818 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:55:33,818 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:55:33,818 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:55:33,819 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:55:33,819 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:55:33,820 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:55:33,820 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:55:43,826 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:55:43,826 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:55:43,827 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:55:43,827 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:55:43,828 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:55:43,828 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:55:43,829 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:55:43,829 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:55:53,839 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:55:53,839 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:55:53,840 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:55:53,840 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:55:53,841 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:55:53,841 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:55:53,841 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:55:53,841 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:56:03,844 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:56:03,844 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:56:03,845 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:56:03,845 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:56:03,846 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:56:03,846 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:56:03,846 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:56:03,846 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:56:13,853 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:56:13,853 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:56:13,854 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:56:13,854 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:56:13,855 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:56:13,855 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:56:13,856 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:56:13,856 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:56:23,864 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:56:23,864 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:56:23,864 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:56:23,864 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:56:23,865 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:56:23,865 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:56:23,866 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:56:23,866 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:56:33,869 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:56:33,869 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:56:33,870 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:56:33,870 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:56:33,871 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:56:33,871 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:56:33,871 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:56:33,871 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:56:43,879 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:56:43,879 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:56:43,880 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:56:43,880 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:56:43,881 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:56:43,881 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:56:43,882 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:56:43,882 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:56:53,896 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:56:53,896 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:56:53,897 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:56:53,897 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:56:53,898 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:56:53,898 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:56:53,898 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:56:53,898 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:57:03,900 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:57:03,900 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:57:03,900 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:57:03,900 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:57:03,901 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:57:03,901 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:57:03,901 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:57:03,901 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:57:13,912 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:57:13,912 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:57:13,913 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:57:13,913 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:57:13,915 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:57:13,915 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:57:13,915 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:57:13,915 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:57:23,922 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:57:23,922 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:57:23,923 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:57:23,923 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:57:23,925 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:57:23,925 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:57:23,925 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:57:23,925 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:57:33,930 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:57:33,930 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:57:33,931 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:57:33,931 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:57:33,933 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:57:33,933 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:57:33,933 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:57:33,933 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:57:43,944 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:57:43,944 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:57:43,945 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:57:43,945 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:57:43,946 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:57:43,946 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:57:43,946 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:57:43,946 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:57:53,948 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:57:53,948 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:57:53,949 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:57:53,949 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:57:53,950 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:57:53,950 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:57:53,950 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:57:53,950 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:58:03,963 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:58:03,963 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:58:03,964 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:58:03,964 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:58:03,965 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:58:03,965 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:58:03,965 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:58:03,965 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:58:13,971 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:58:13,971 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:58:13,972 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:58:13,972 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:58:13,974 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:58:13,974 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:58:13,975 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:58:13,975 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:58:23,980 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:58:23,980 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:58:23,981 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:58:23,981 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:58:23,982 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:58:23,982 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:58:23,982 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:58:23,982 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:58:33,987 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:58:33,987 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:58:33,988 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:58:33,988 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:58:33,989 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:58:33,989 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:58:33,989 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:58:33,989 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:58:44,002 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:58:44,002 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:58:44,003 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:58:44,003 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:58:44,004 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:58:44,004 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:58:44,005 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:58:44,005 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:58:54,013 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:58:54,013 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:58:54,013 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:58:54,013 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:58:54,014 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:58:54,014 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:58:54,015 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:58:54,015 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:59:04,020 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:59:04,020 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:59:04,020 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:59:04,020 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:59:04,022 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:59:04,022 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:59:04,022 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:59:04,022 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:59:14,036 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:59:14,036 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:59:14,036 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:59:14,036 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:59:14,039 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:59:14,039 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:59:14,039 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:59:14,039 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:59:24,046 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:59:24,046 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:59:24,047 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:59:24,047 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:59:24,048 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:59:24,048 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:59:24,049 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:59:24,049 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:59:34,061 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:59:34,061 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:59:34,062 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:59:34,062 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:59:34,063 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:59:34,063 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:59:34,063 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:59:34,063 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:59:44,080 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:59:44,080 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:59:44,081 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:59:44,081 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:59:44,083 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:59:44,083 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:59:44,083 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:59:44,083 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:59:54,094 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:59:54,094 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 22:59:54,095 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:59:54,095 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 22:59:54,096 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:59:54,096 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 22:59:54,097 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 22:59:54,097 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:00:04,115 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:00:04,115 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:00:04,116 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:00:04,116 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:00:04,123 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:00:04,123 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:00:04,124 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:00:04,124 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:00:14,134 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:00:14,134 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:00:14,135 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:00:14,135 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:00:14,137 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:00:14,137 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:00:14,137 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:00:14,137 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:00:24,146 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:00:24,146 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:00:24,146 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:00:24,146 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:00:24,147 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:00:24,147 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:00:24,148 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:00:24,148 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:00:27,290 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:00:27,290 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:00:27,291 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 23:00:27,291 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 23:00:27,291 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:00:27,291 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:00:27,293 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 23:00:27,293 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 23:00:34,156 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:00:34,156 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:00:34,156 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:00:34,156 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:00:34,159 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:00:34,159 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:00:34,159 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:00:34,159 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:00:44,161 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:00:44,161 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:00:44,162 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:00:44,162 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:00:44,164 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:00:44,164 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:00:44,164 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:00:44,164 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:00:54,180 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:00:54,180 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:00:54,181 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:00:54,181 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:00:54,185 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:00:54,185 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:00:54,186 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:00:54,186 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:01:04,198 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:01:04,198 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:01:04,199 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:01:04,199 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:01:04,201 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:01:04,201 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:01:04,202 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:01:04,202 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:01:11,343 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 23:01:11,343 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 23:01:11,344 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 23:01:11,344 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 23:01:11,345 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 21:01:11(String)
2021-04-26 23:01:11,345 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 21:01:11(String)
2021-04-26 23:01:11,347 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 23:01:11,347 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 23:01:14,212 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:01:14,212 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:01:14,212 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:01:14,212 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:01:14,214 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:01:14,214 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:01:14,214 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:01:14,214 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:01:24,217 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:01:24,217 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:01:24,218 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:01:24,218 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:01:24,219 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:01:24,219 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:01:24,219 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:01:24,219 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:01:34,228 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:01:34,228 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:01:34,229 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:01:34,229 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:01:34,230 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:01:34,230 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:01:34,230 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:01:34,230 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:01:44,241 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:01:44,241 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:01:44,242 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:01:44,242 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:01:44,243 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:01:44,243 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:01:44,243 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:01:44,243 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:01:54,256 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:01:54,256 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:01:54,257 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:01:54,257 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:01:54,258 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:01:54,258 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:01:54,259 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:01:54,259 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:02:04,265 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:02:04,265 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:02:04,265 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:02:04,265 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:02:04,267 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:02:04,267 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:02:04,267 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:02:04,267 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:02:14,279 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:02:14,279 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:02:14,280 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:02:14,280 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:02:14,281 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:02:14,281 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:02:14,281 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:02:14,281 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:02:24,286 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:02:24,286 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:02:24,287 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:02:24,287 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:02:24,289 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:02:24,289 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:02:24,289 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:02:24,289 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:02:34,294 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:02:34,294 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:02:34,295 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:02:34,295 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:02:34,296 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:02:34,296 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:02:34,297 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:02:34,297 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:02:44,308 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:02:44,308 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:02:44,308 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:02:44,308 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:02:44,310 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:02:44,310 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:02:44,311 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:02:44,311 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:02:54,326 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:02:54,326 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:02:54,327 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:02:54,327 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:02:54,329 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:02:54,329 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:02:54,330 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:02:54,330 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:03:04,337 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:03:04,337 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:03:04,338 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:03:04,338 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:03:04,339 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:03:04,339 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:03:04,340 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:03:04,340 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:03:14,353 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:03:14,353 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:03:14,354 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:03:14,354 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:03:14,355 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:03:14,355 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:03:14,356 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:03:14,356 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:03:24,370 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:03:24,370 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:03:24,371 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:03:24,371 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:03:24,373 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:03:24,373 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:03:24,373 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:03:24,373 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:03:34,384 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:03:34,384 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:03:34,385 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:03:34,385 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:03:34,386 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:03:34,386 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:03:34,386 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:03:34,386 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:03:44,397 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:03:44,397 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:03:44,398 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:03:44,398 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:03:44,399 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:03:44,399 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:03:44,399 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:03:44,399 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:03:54,417 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:03:54,417 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:03:54,417 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:03:54,417 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:03:54,419 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:03:54,419 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:03:54,420 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:03:54,420 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:04:04,428 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:04:04,428 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:04:04,429 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:04:04,429 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:04:04,430 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:04:04,430 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:04:04,431 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:04:04,431 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:04:14,433 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:04:14,433 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:04:14,434 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:04:14,434 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:04:14,436 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:04:14,436 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:04:14,437 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:04:14,437 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:04:24,444 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:04:24,444 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:04:24,445 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:04:24,445 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:04:24,447 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:04:24,447 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:04:24,448 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:04:24,448 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:04:34,456 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:04:34,456 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:04:34,457 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:04:34,457 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:04:34,458 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:04:34,458 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:04:34,459 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:04:34,459 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:04:44,465 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:04:44,465 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:04:44,466 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:04:44,466 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:04:44,467 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:04:44,467 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:04:44,467 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:04:44,467 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:04:54,475 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:04:54,475 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:04:54,476 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:04:54,476 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:04:54,478 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:04:54,478 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:04:54,479 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:04:54,479 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:05:04,484 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:05:04,484 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:05:04,485 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:05:04,485 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:05:04,486 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:05:04,486 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:05:04,487 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:05:04,487 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:05:14,495 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:05:14,495 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:05:14,496 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:05:14,496 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:05:14,497 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:05:14,497 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:05:14,498 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:05:14,498 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:05:24,501 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:05:24,501 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:05:24,502 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:05:24,502 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:05:24,503 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:05:24,503 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:05:24,504 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:05:24,504 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:05:27,308 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:05:27,308 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:05:27,308 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 23:05:27,308 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 23:05:27,314 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:05:27,314 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:05:27,314 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 23:05:27,314 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 23:05:34,517 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:05:34,517 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:05:34,518 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:05:34,518 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:05:34,519 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:05:34,519 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:05:34,520 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:05:34,520 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:05:44,531 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:05:44,531 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:05:44,532 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:05:44,532 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:05:44,533 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:05:44,533 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:05:44,533 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:05:44,533 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:05:54,542 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:05:54,542 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:05:54,543 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:05:54,543 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:05:54,545 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:05:54,545 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:05:54,545 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:05:54,545 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:06:04,553 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:06:04,553 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:06:04,555 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:06:04,555 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:06:04,555 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:06:04,555 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:06:04,557 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:06:04,557 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:06:14,561 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:06:14,561 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:06:14,562 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:06:14,562 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:06:14,567 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:06:14,567 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:06:14,568 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:06:14,568 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:06:24,576 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:06:24,576 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:06:24,577 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:06:24,577 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:06:24,578 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:06:24,578 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:06:24,578 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:06:24,578 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:06:34,587 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:06:34,587 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:06:34,588 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:06:34,588 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:06:34,589 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:06:34,589 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:06:34,590 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:06:34,590 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:06:44,594 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:06:44,594 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:06:44,595 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:06:44,595 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:06:44,597 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:06:44,597 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:06:44,597 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:06:44,597 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:06:54,603 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:06:54,603 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:06:54,604 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:06:54,604 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:06:54,605 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:06:54,605 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:06:54,605 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:06:54,605 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:07:04,608 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:07:04,608 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:07:04,609 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:07:04,609 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:07:04,610 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:07:04,610 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:07:04,610 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:07:04,610 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:07:14,617 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:07:14,617 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:07:14,618 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:07:14,618 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:07:14,619 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:07:14,619 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:07:14,619 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:07:14,619 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:07:24,621 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:07:24,621 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:07:24,622 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:07:24,622 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:07:24,624 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:07:24,624 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:07:24,625 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:07:24,625 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:07:34,633 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:07:34,633 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:07:34,634 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:07:34,634 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:07:34,635 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:07:34,635 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:07:34,636 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:07:34,636 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:07:44,643 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:07:44,643 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:07:44,643 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:07:44,643 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:07:44,645 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:07:44,645 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:07:44,646 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:07:44,646 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:07:54,650 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:07:54,650 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:07:54,651 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:07:54,651 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:07:54,652 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:07:54,652 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:07:54,653 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:07:54,653 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:08:04,666 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:08:04,666 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:08:04,667 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:08:04,667 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:08:04,668 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:08:04,668 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:08:04,669 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:08:04,669 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:08:14,678 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:08:14,678 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:08:14,679 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:08:14,679 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:08:14,680 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:08:14,680 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:08:14,680 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:08:14,680 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:08:24,687 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:08:24,687 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:08:24,688 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:08:24,688 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:08:24,689 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:08:24,689 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:08:24,690 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:08:24,690 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:08:34,705 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:08:34,705 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:08:34,706 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:08:34,706 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:08:34,707 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:08:34,707 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:08:34,707 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:08:34,707 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:08:44,718 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:08:44,718 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:08:44,719 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:08:44,719 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:08:44,720 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:08:44,720 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:08:44,721 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:08:44,721 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:08:54,737 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:08:54,737 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:08:54,738 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:08:54,738 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:08:54,746 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:08:54,746 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:08:54,747 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:08:54,747 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:09:04,762 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:09:04,762 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:09:04,763 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:09:04,763 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:09:04,764 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:09:04,764 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:09:04,764 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:09:04,764 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:09:14,773 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:09:14,773 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:09:14,774 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:09:14,774 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:09:14,775 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:09:14,775 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:09:14,776 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:09:14,776 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:09:24,792 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:09:24,792 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:09:24,792 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:09:24,792 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:09:24,793 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:09:24,793 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:09:24,794 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:09:24,794 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:09:34,796 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:09:34,796 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:09:34,797 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:09:34,797 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:09:34,799 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:09:34,799 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:09:34,800 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:09:34,800 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:09:44,815 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:09:44,815 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:09:44,817 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:09:44,817 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:09:44,817 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:09:44,817 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:09:44,819 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:09:44,819 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:09:54,836 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:09:54,836 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:09:54,837 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:09:54,837 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:09:54,839 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:09:54,839 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:09:54,840 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:09:54,840 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:10:04,854 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:10:04,854 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:10:04,855 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:10:04,855 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:10:04,856 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:10:04,856 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:10:04,856 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:10:04,856 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:10:14,869 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:10:14,869 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:10:14,870 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:10:14,870 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:10:14,874 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:10:14,874 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:10:14,874 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:10:14,874 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:10:24,888 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:10:24,888 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:10:24,889 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:10:24,889 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:10:24,890 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:10:24,890 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:10:24,890 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:10:24,890 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:10:27,317 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:10:27,317 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:10:27,317 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 23:10:27,317 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 23:10:27,318 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:10:27,318 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:10:27,319 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 23:10:27,319 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 23:10:34,901 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:10:34,901 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:10:34,902 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:10:34,902 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:10:34,903 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:10:34,903 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:10:34,903 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:10:34,903 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:10:44,918 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:10:44,918 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:10:44,919 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:10:44,919 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:10:44,920 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:10:44,920 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:10:44,920 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:10:44,920 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:10:54,935 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:10:54,935 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:10:54,936 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:10:54,936 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:10:54,937 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:10:54,937 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:10:54,937 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:10:54,937 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:11:04,940 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:11:04,940 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:11:04,941 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:11:04,941 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:11:04,942 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:11:04,942 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:11:04,942 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:11:04,942 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:11:11,377 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 23:11:11,377 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 23:11:11,378 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 23:11:11,378 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 23:11:11,379 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 21:11:11(String)
2021-04-26 23:11:11,379 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 21:11:11(String)
2021-04-26 23:11:11,381 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 23:11:11,381 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 23:11:14,948 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:11:14,948 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:11:14,949 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:11:14,949 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:11:14,950 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:11:14,950 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:11:14,950 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:11:14,950 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:11:24,951 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:11:24,951 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:11:24,952 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:11:24,952 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:11:24,954 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:11:24,954 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:11:24,954 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:11:24,954 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:11:34,967 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:11:34,967 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:11:34,967 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:11:34,967 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:11:34,972 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:11:34,972 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:11:34,973 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:11:34,973 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:11:44,985 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:11:44,985 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:11:44,985 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:11:44,985 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:11:44,987 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:11:44,987 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:11:44,987 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:11:44,987 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:11:54,993 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:11:54,993 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:11:54,994 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:11:54,994 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:11:55,001 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:11:55,001 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:11:55,001 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:11:55,001 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:12:05,004 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:12:05,004 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:12:05,004 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:12:05,004 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:12:05,006 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:12:05,006 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:12:05,007 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:12:05,007 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:12:12,299 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 11828 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 23:12:12,299 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 11828 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 23:12:12,304 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 23:12:12,304 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 23:12:12,307 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 23:12:12,307 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 23:12:12,689 INFO (AbstractApplicationContext.java:590)- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@67019327: startup date [Mon Apr 26 23:12:12 CST 2021]; root of context hierarchy
2021-04-26 23:12:15,053 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:12:15,053 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:12:15,053 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:12:15,053 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:12:15,067 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:12:15,067 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:12:15,068 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:12:15,068 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:12:16,364 INFO (PostProcessorRegistrationDelegate.java:328)- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$51c0a340] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-26 23:12:17,887 INFO (TomcatWebServer.java:91)- Tomcat initialized with port(s): 6795 (http)
2021-04-26 23:12:17,909 INFO (DirectJDKLog.java:180)- Initializing ProtocolHandler ["http-nio-6795"]
2021-04-26 23:12:17,950 INFO (DirectJDKLog.java:180)- Starting service [Tomcat]
2021-04-26 23:12:17,951 INFO (DirectJDKLog.java:180)- Starting Servlet Engine: Apache Tomcat/8.5.31
2021-04-26 23:12:17,979 INFO (DirectJDKLog.java:180)- The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\soft\jdk1.8.0_172\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\soft\jdk1.8.0_172\bin;C:\Program Files\Git\cmd;D:/demo/maven/apache-maven-3.6.3\bin;C:\cmder;D:\soft\jdk1.8.0_172\jre\bin;;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\admin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\IntelliJ IDEA 2020.2\bin;C:\Users\admin\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2021-04-26 23:12:18,189 INFO (DirectJDKLog.java:180)- Initializing Spring embedded WebApplicationContext
2021-04-26 23:12:18,190 INFO (ServletWebServerApplicationContext.java:285)- Root WebApplicationContext: initialization completed in 5502 ms
2021-04-26 23:12:18,395 INFO (ServletRegistrationBean.java:185)- Servlet dispatcherServlet mapped to [/]
2021-04-26 23:12:18,402 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'characterEncodingFilter' to: [/*]
2021-04-26 23:12:18,403 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-04-26 23:12:18,403 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-04-26 23:12:18,403 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'requestContextFilter' to: [/*]
2021-04-26 23:12:19,791 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getEnvCoverResult],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getEnvCoverResult(java.lang.String)
2021-04-26 23:12:19,793 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getLocalCoverResult],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getEnvLocalCoverResult(com.xiaoju.basetech.entity.LocalHostRequestParam)
2021-04-26 23:12:19,794 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/triggerUnitCover],methods=[POST]}" onto public com.xiaoju.basetech.entity.HttpResult<java.lang.Boolean> com.xiaoju.basetech.controller.CodeCovController.triggerUnitCover(com.xiaoju.basetech.entity.UnitCoverRequest)
2021-04-26 23:12:19,794 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getUnitCoverResult],methods=[GET]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getCoverResult(java.lang.String)
2021-04-26 23:12:19,795 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/triggerEnvCov],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<java.lang.Boolean> com.xiaoju.basetech.controller.CodeCovController.triggerEnvCov(com.xiaoju.basetech.entity.EnvCoverRequest)
2021-04-26 23:12:19,803 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-04-26 23:12:19,804 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-04-26 23:12:19,805 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-04-26 23:12:19,808 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2021-04-26 23:12:19,809 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-04-26 23:12:20,042 INFO (PropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2021-04-26 23:12:20,234 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 23:12:20,458 INFO (RequestMappingHandlerAdapter.java:574)- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@67019327: startup date [Mon Apr 26 23:12:12 CST 2021]; root of context hierarchy
2021-04-26 23:12:20,550 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 23:12:20,551 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 23:12:20,573 INFO (ExceptionHandlerExceptionResolver.java:288)- Detected @ExceptionHandler methods in globalExceptionHandler
2021-04-26 23:12:21,014 WARN (OptionalLiveReloadServer.java:61)- Unable to start LiveReload server
2021-04-26 23:12:21,070 INFO (MBeanExporter.java:433)- Registering beans for JMX exposure on startup
2021-04-26 23:12:21,073 INFO (MBeanExporter.java:895)- Bean with name 'dataSource' has been autodetected for JMX exposure
2021-04-26 23:12:21,082 INFO (MBeanExporter.java:668)- Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2021-04-26 23:12:21,090 INFO (DefaultLifecycleProcessor.java:351)- Starting beans in phase 2147483647
2021-04-26 23:12:21,090 INFO (DocumentationPluginsBootstrapper.java:147)- Context refreshed
2021-04-26 23:12:21,111 INFO (DocumentationPluginsBootstrapper.java:150)- Found 1 custom documentation plugin(s)
2021-04-26 23:12:21,165 INFO (ApiListingReferenceScanner.java:41)- Scanning for api listing references
2021-04-26 23:12:21,610 INFO (DirectJDKLog.java:180)- Starting ProtocolHandler ["http-nio-6795"]
2021-04-26 23:12:21,619 ERROR (DirectJDKLog.java:182)- Failed to start connector [Connector[HTTP/1.1-6795]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-6795]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.xiaoju.basetech.CodeCovApplication.main(CodeCovApplication.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 18 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 19 common frames omitted
2021-04-26 23:12:21,625 INFO (DirectJDKLog.java:180)- Pausing ProtocolHandler ["http-nio-6795"]
2021-04-26 23:12:21,625 INFO (DirectJDKLog.java:180)- Stopping service [Tomcat]
2021-04-26 23:12:21,645 INFO (DirectJDKLog.java:180)- The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2021-04-26 23:12:21,646 INFO (DirectJDKLog.java:180)- Stopping ProtocolHandler ["http-nio-6795"]
2021-04-26 23:12:21,646 INFO (DirectJDKLog.java:180)- Destroying ProtocolHandler ["http-nio-6795"]
2021-04-26 23:12:21,652 INFO (ConditionEvaluationReportLoggingListener.java:101)- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-04-26 23:12:21,659 ERROR (LoggingFailureAnalysisReporter.java:42)- 

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 6795 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 6795, or configure this application to listen on another port.

2021-04-26 23:12:21,661 INFO (AbstractApplicationContext.java:993)- Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@67019327: startup date [Mon Apr 26 23:12:12 CST 2021]; root of context hierarchy
2021-04-26 23:12:21,664 INFO (DefaultLifecycleProcessor.java:366)- Stopping beans in phase 2147483647
2021-04-26 23:12:21,671 INFO (MBeanExporter.java:451)- Unregistering JMX-exposed beans on shutdown
2021-04-26 23:12:21,671 INFO (MBeanRegistrationSupport.java:183)- Unregistering JMX-exposed beans
2021-04-26 23:12:25,115 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:12:25,115 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:12:25,115 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:12:25,115 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:12:25,118 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:12:25,118 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:12:25,119 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:12:25,119 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:12:35,127 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:12:35,127 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:12:35,129 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:12:35,129 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:12:35,131 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:12:35,131 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:12:35,132 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:12:35,132 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:12:45,146 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:12:45,146 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:12:45,147 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:12:45,147 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:12:45,148 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:12:45,148 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:12:45,148 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:12:45,148 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:12:55,157 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:12:55,157 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:12:55,158 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:12:55,158 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:12:55,160 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:12:55,160 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:12:55,160 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:12:55,160 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:13:05,172 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:13:05,172 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:13:05,173 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:13:05,173 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:13:05,175 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:13:05,175 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:13:05,175 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:13:05,175 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:13:15,184 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:13:15,184 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:13:15,184 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:13:15,184 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:13:15,185 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:13:15,185 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:13:15,186 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:13:15,186 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:13:25,195 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:13:25,195 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:13:25,196 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:13:25,196 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:13:25,199 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:13:25,199 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:13:25,199 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:13:25,199 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:13:35,212 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:13:35,212 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:13:35,213 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:13:35,213 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:13:35,214 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:13:35,214 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:13:35,215 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:13:35,215 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:13:45,227 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:13:45,227 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:13:45,227 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:13:45,227 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:13:45,229 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:13:45,229 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:13:45,229 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:13:45,229 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:13:55,244 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:13:55,244 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:13:55,245 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:13:55,245 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:13:55,246 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:13:55,246 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:13:55,247 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:13:55,247 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:14:05,258 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:14:05,258 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:14:05,258 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:14:05,258 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:14:05,260 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:14:05,260 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:14:05,260 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:14:05,260 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:14:15,275 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:14:15,275 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:14:15,275 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:14:15,275 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:14:15,277 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:14:15,277 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:14:15,278 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:14:15,278 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:14:25,278 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:14:25,278 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:14:25,279 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:14:25,279 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:14:25,280 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:14:25,280 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:14:25,281 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:14:25,281 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:14:35,289 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:14:35,289 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:14:35,290 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:14:35,290 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:14:35,291 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:14:35,291 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:14:35,291 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:14:35,291 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:14:45,293 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:14:45,293 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:14:45,294 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:14:45,294 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:14:45,295 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:14:45,295 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:14:45,296 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:14:45,296 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:14:55,303 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:14:55,303 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:14:55,304 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:14:55,304 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:14:55,305 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:14:55,305 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:14:55,305 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:14:55,305 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:15:05,309 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:15:05,309 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:15:05,310 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:15:05,310 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:15:05,311 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:15:05,311 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:15:05,311 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:15:05,311 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:15:15,313 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:15:15,313 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:15:15,314 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:15:15,314 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:15:15,317 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:15:15,317 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:15:15,317 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:15:15,317 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:15:25,327 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:15:25,327 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:15:25,327 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:15:25,327 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:15:25,329 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:15:25,329 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:15:25,329 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:15:25,329 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:15:27,323 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:15:27,323 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:15:27,324 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 23:15:27,324 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 23:15:27,325 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:15:27,325 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:15:27,326 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 23:15:27,326 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 23:15:35,351 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:15:35,351 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:15:35,352 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:15:35,352 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:15:35,353 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:15:35,353 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:15:35,354 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:15:35,354 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:15:45,356 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:15:45,356 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:15:45,357 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:15:45,357 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:15:45,357 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:15:45,357 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:15:45,357 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:15:45,357 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:15:55,374 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:15:55,374 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:15:55,375 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:15:55,375 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:15:55,376 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:15:55,376 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:15:55,376 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:15:55,376 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:16:05,386 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:16:05,386 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:16:05,387 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:16:05,387 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:16:05,388 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:16:05,388 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:16:05,389 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:16:05,389 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:16:15,395 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:16:15,395 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:16:15,396 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:16:15,396 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:16:15,397 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:16:15,397 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:16:15,398 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:16:15,398 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:16:25,409 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:16:25,409 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:16:25,409 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:16:25,409 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:16:25,410 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:16:25,410 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:16:25,411 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:16:25,411 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:16:35,426 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:16:35,426 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:16:35,427 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:16:35,427 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:16:35,440 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:16:35,440 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:16:35,441 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:16:35,441 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:16:45,450 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:16:45,450 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:16:45,451 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:16:45,451 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:16:45,452 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:16:45,452 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:16:45,453 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:16:45,453 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:16:55,457 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:16:55,457 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:16:55,458 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:16:55,458 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:16:55,459 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:16:55,459 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:16:55,460 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:16:55,460 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:17:05,468 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:17:05,468 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:17:05,469 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:17:05,469 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:17:05,470 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:17:05,470 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:17:05,470 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:17:05,470 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:17:15,478 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:17:15,478 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:17:15,479 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:17:15,479 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:17:15,480 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:17:15,480 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:17:15,481 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:17:15,481 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:17:25,494 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:17:25,494 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:17:25,495 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:17:25,495 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:17:25,496 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:17:25,496 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:17:25,496 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:17:25,496 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:17:35,501 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:17:35,501 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:17:35,502 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:17:35,502 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:17:35,504 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:17:35,504 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:17:35,504 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:17:35,504 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:17:45,515 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:17:45,515 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:17:45,516 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:17:45,516 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:17:45,518 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:17:45,518 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:17:45,519 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:17:45,519 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:17:55,531 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:17:55,531 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:17:55,532 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:17:55,532 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:17:55,533 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:17:55,533 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:17:55,534 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:17:55,534 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:18:05,545 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:18:05,545 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:18:05,546 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:18:05,546 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:18:05,548 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:18:05,548 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:18:05,548 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:18:05,548 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:18:15,554 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:18:15,554 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:18:15,555 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:18:15,555 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:18:15,556 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:18:15,556 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:18:15,557 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:18:15,557 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:18:25,563 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:18:25,563 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:18:25,564 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:18:25,564 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:18:25,565 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:18:25,565 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:18:25,566 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:18:25,566 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:18:35,580 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:18:35,580 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:18:35,581 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:18:35,581 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:18:35,582 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:18:35,582 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:18:35,583 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:18:35,583 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:18:45,598 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:18:45,598 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:18:45,599 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:18:45,599 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:18:45,600 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:18:45,600 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:18:45,601 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:18:45,601 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:18:55,621 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:18:55,621 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:18:55,622 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:18:55,622 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:18:55,623 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:18:55,623 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:18:55,624 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:18:55,624 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:19:05,634 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:19:05,634 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:19:05,635 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:19:05,635 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:19:05,637 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:19:05,637 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:19:05,638 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:19:05,638 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:19:15,649 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:19:15,649 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:19:15,650 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:19:15,650 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:19:15,651 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:19:15,651 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:19:15,652 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:19:15,652 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:19:25,661 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:19:25,661 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:19:25,662 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:19:25,662 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:19:25,663 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:19:25,663 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:19:25,663 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:19:25,663 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:19:35,669 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:19:35,669 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:19:35,670 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:19:35,670 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:19:35,671 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:19:35,671 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:19:35,671 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:19:35,671 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:19:45,686 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:19:45,686 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:19:45,688 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:19:45,688 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:19:45,691 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:19:45,691 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:19:45,692 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:19:45,692 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:19:55,697 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:19:55,697 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:19:55,698 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:19:55,698 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:19:55,699 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:19:55,699 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:19:55,700 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:19:55,700 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:20:05,701 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:20:05,701 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:20:05,702 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:20:05,702 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:20:05,704 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:20:05,704 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:20:05,704 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:20:05,704 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:20:15,716 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:20:15,716 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:20:15,716 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:20:15,716 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:20:15,718 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:20:15,718 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:20:15,718 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:20:15,718 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:20:25,733 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:20:25,733 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:20:25,733 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:20:25,733 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:20:25,735 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:20:25,735 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:20:25,736 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:20:25,736 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:20:27,333 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:20:27,333 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:20:27,333 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 23:20:27,333 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 23:20:27,334 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:20:27,334 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:20:27,335 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 23:20:27,335 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 23:20:35,736 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:20:35,736 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:20:35,737 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:20:35,737 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:20:35,738 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:20:35,738 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:20:35,739 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:20:35,739 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:20:45,755 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:20:45,755 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:20:45,756 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:20:45,756 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:20:45,765 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:20:45,765 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:20:45,765 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:20:45,765 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:20:55,775 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:20:55,775 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:20:55,776 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:20:55,776 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:20:55,777 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:20:55,777 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:20:55,778 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:20:55,778 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:21:05,788 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:21:05,788 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:21:05,789 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:21:05,789 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:21:05,790 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:21:05,790 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:21:05,790 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:21:05,790 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:21:11,383 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 23:21:11,383 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 23:21:11,384 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 23:21:11,384 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 23:21:11,385 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 21:21:11(String)
2021-04-26 23:21:11,385 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 21:21:11(String)
2021-04-26 23:21:11,387 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 23:21:11,387 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 23:21:15,800 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:21:15,800 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:21:15,801 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:21:15,801 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:21:15,802 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:21:15,802 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:21:15,803 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:21:15,803 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:21:25,804 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:21:25,804 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:21:25,805 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:21:25,805 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:21:25,806 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:21:25,806 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:21:25,806 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:21:25,806 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:21:35,821 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:21:35,821 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:21:35,822 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:21:35,822 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:21:35,823 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:21:35,823 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:21:35,823 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:21:35,823 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:21:45,835 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:21:45,835 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:21:45,836 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:21:45,836 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:21:45,838 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:21:45,838 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:21:45,839 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:21:45,839 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:21:55,856 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:21:55,856 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:21:55,856 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:21:55,856 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:21:55,857 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:21:55,857 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:21:55,858 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:21:55,858 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:22:05,871 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:22:05,871 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:22:05,872 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:22:05,872 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:22:05,873 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:22:05,873 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:22:05,874 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:22:05,874 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:22:15,882 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:22:15,882 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:22:15,883 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:22:15,883 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:22:15,884 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:22:15,884 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:22:15,884 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:22:15,884 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:22:25,899 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:22:25,899 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:22:25,899 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:22:25,899 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:22:25,900 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:22:25,900 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:22:25,901 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:22:25,901 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:22:35,907 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:22:35,907 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:22:35,908 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:22:35,908 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:22:35,909 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:22:35,909 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:22:35,910 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:22:35,910 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:22:45,914 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:22:45,914 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:22:45,914 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:22:45,914 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:22:45,915 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:22:45,915 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:22:45,916 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:22:45,916 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:22:55,919 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:22:55,919 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:22:55,920 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:22:55,920 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:22:55,921 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:22:55,921 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:22:55,922 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:22:55,922 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:23:05,936 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:23:05,936 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:23:05,936 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:23:05,936 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:23:05,937 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:23:05,937 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:23:05,938 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:23:05,938 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:23:15,945 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:23:15,945 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:23:15,945 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:23:15,945 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:23:15,946 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:23:15,946 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:23:15,947 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:23:15,947 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:23:25,955 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:23:25,955 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:23:25,956 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:23:25,956 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:23:25,957 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:23:25,957 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:23:25,958 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:23:25,958 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:23:35,968 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:23:35,968 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:23:35,968 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:23:35,968 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:23:35,970 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:23:35,970 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:23:35,971 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:23:35,971 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:23:45,983 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:23:45,983 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:23:45,984 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:23:45,984 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:23:45,985 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:23:45,985 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:23:45,986 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:23:45,986 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:23:55,987 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:23:55,987 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:23:55,988 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:23:55,988 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:23:55,989 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:23:55,989 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:23:55,990 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:23:55,990 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:24:06,002 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:24:06,002 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:24:06,002 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:24:06,002 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:24:06,003 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:24:06,003 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:24:06,005 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:24:06,005 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:24:16,007 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:24:16,007 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:24:16,008 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:24:16,008 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:24:16,009 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:24:16,009 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:24:16,009 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:24:16,009 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:24:26,023 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:24:26,023 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:24:26,024 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:24:26,024 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:24:26,025 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:24:26,025 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:24:26,026 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:24:26,026 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:24:36,040 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:24:36,040 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:24:36,041 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:24:36,041 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:24:36,042 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:24:36,042 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:24:36,042 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:24:36,042 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:24:46,049 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:24:46,049 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:24:46,049 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:24:46,049 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:24:46,051 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:24:46,051 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:24:46,053 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:24:46,053 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:24:56,054 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:24:56,054 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:24:56,054 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:24:56,054 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:24:56,056 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:24:56,056 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:24:56,057 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:24:56,057 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:25:06,064 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:25:06,064 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:25:06,065 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:25:06,065 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:25:06,068 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:25:06,068 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:25:06,069 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:25:06,069 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:25:16,078 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:25:16,078 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:25:16,079 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:25:16,079 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:25:16,080 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:25:16,080 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:25:16,080 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:25:16,080 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:25:26,095 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:25:26,095 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:25:26,095 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:25:26,095 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:25:26,098 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:25:26,098 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:25:26,098 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:25:26,098 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:25:27,344 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:25:27,344 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:25:27,344 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 23:25:27,344 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 23:25:27,346 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:25:27,346 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:25:27,346 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 23:25:27,346 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 23:25:36,106 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:25:36,106 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:25:36,107 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:25:36,107 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:25:36,108 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:25:36,108 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:25:36,109 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:25:36,109 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:25:46,118 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:25:46,118 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:25:46,119 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:25:46,119 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:25:46,120 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:25:46,120 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:25:46,120 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:25:46,120 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:25:56,135 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:25:56,135 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:25:56,136 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:25:56,136 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:25:56,137 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:25:56,137 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:25:56,138 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:25:56,138 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:26:06,145 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:26:06,145 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:26:06,146 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:26:06,146 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:26:06,147 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:26:06,147 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:26:06,148 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:26:06,148 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:26:16,151 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:26:16,151 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:26:16,152 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:26:16,152 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:26:16,153 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:26:16,153 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:26:16,153 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:26:16,153 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:26:26,155 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:26:26,155 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:26:26,156 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:26:26,156 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:26:26,157 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:26:26,157 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:26:26,158 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:26:26,158 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:26:36,164 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:26:36,164 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:26:36,165 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:26:36,165 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:26:36,166 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:26:36,166 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:26:36,166 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:26:36,166 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:26:46,172 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:26:46,172 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:26:46,173 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:26:46,173 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:26:46,174 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:26:46,174 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:26:46,174 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:26:46,174 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:26:56,183 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:26:56,183 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:26:56,184 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:26:56,184 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:26:56,185 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:26:56,185 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:26:56,186 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:26:56,186 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:27:06,192 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:27:06,192 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:27:06,193 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:27:06,193 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:27:06,194 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:27:06,194 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:27:06,195 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:27:06,195 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:27:16,209 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:27:16,209 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:27:16,210 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:27:16,210 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:27:16,211 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:27:16,211 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:27:16,212 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:27:16,212 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:27:26,233 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:27:26,233 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:27:26,234 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:27:26,234 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:27:26,235 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:27:26,235 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:27:26,236 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:27:26,236 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:27:36,244 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:27:36,244 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:27:36,245 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:27:36,245 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:27:36,246 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:27:36,246 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:27:36,247 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:27:36,247 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:27:46,255 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:27:46,255 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:27:46,255 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:27:46,255 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:27:46,256 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:27:46,256 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:27:46,257 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:27:46,257 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:27:56,272 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:27:56,272 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:27:56,272 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:27:56,272 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:27:56,273 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:27:56,273 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:27:56,274 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:27:56,274 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:28:06,277 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:28:06,277 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:28:06,278 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:28:06,278 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:28:06,280 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:28:06,280 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:28:06,281 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:28:06,281 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:28:16,287 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:28:16,287 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:28:16,288 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:28:16,288 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:28:16,289 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:28:16,289 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:28:16,290 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:28:16,290 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:28:26,303 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:28:26,303 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:28:26,304 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:28:26,304 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:28:26,305 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:28:26,305 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:28:26,306 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:28:26,306 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:28:36,317 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:28:36,317 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:28:36,317 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:28:36,317 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:28:36,320 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:28:36,320 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:28:36,321 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:28:36,321 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:28:46,322 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:28:46,322 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:28:46,323 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:28:46,323 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:28:46,324 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:28:46,324 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:28:46,325 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:28:46,325 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:28:56,338 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:28:56,338 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:28:56,339 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:28:56,339 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:28:56,340 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:28:56,340 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:28:56,341 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:28:56,341 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:29:06,357 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:29:06,357 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:29:06,357 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:29:06,357 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:29:06,359 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:29:06,359 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:29:06,359 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:29:06,359 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:29:16,360 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:29:16,360 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:29:16,360 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:29:16,360 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:29:16,362 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:29:16,362 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:29:16,362 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:29:16,362 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:29:26,371 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:29:26,371 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:29:26,371 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:29:26,371 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:29:26,373 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:29:26,373 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:29:26,374 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:29:26,374 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:29:36,384 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:29:36,384 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:29:36,385 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:29:36,385 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:29:36,386 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:29:36,386 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:29:36,387 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:29:36,387 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:29:46,396 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:29:46,396 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:29:46,397 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:29:46,397 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:29:46,398 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:29:46,398 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:29:46,398 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:29:46,398 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:29:56,405 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:29:56,405 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:29:56,406 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:29:56,406 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:29:56,407 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:29:56,407 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:29:56,407 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:29:56,407 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:30:06,424 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:30:06,424 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:30:06,424 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:30:06,424 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:30:06,426 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:30:06,426 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:30:06,427 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:30:06,427 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:30:16,431 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:30:16,431 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:30:16,432 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:30:16,432 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:30:16,433 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:30:16,433 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:30:16,434 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:30:16,434 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:30:26,441 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:30:26,441 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:30:26,442 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:30:26,442 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:30:26,443 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:30:26,443 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:30:26,444 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:30:26,444 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:30:27,358 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:30:27,358 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:30:27,359 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 23:30:27,359 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 23:30:27,360 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:30:27,360 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:30:27,361 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 23:30:27,361 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 23:30:36,450 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:30:36,450 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:30:36,451 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:30:36,451 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:30:36,452 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:30:36,452 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:30:36,453 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:30:36,453 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:30:46,462 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:30:46,462 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:30:46,463 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:30:46,463 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:30:46,465 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:30:46,465 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:30:46,466 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:30:46,466 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:30:56,471 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:30:56,471 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:30:56,472 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:30:56,472 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:30:56,474 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:30:56,474 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:30:56,475 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:30:56,475 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:31:06,489 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:31:06,489 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:31:06,489 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:31:06,489 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:31:06,490 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:31:06,490 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:31:06,491 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:31:06,491 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:31:11,391 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 23:31:11,391 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 23:31:11,392 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 23:31:11,392 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 23:31:11,392 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 21:31:11(String)
2021-04-26 23:31:11,392 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 21:31:11(String)
2021-04-26 23:31:11,394 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 23:31:11,394 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 23:31:16,494 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:31:16,494 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:31:16,494 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:31:16,494 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:31:16,496 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:31:16,496 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:31:16,497 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:31:16,497 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:31:26,512 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:31:26,512 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:31:26,513 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:31:26,513 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:31:26,515 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:31:26,515 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:31:26,515 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:31:26,515 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:31:36,517 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:31:36,517 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:31:36,518 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:31:36,518 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:31:36,519 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:31:36,519 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:31:36,520 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:31:36,520 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:31:46,538 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:31:46,538 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:31:46,538 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:31:46,538 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:31:46,540 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:31:46,540 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:31:46,541 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:31:46,541 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:31:56,544 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:31:56,544 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:31:56,545 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:31:56,545 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:31:56,546 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:31:56,546 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:31:56,547 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:31:56,547 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:32:06,551 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:32:06,551 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:32:06,552 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:32:06,552 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:32:06,553 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:32:06,553 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:32:06,554 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:32:06,554 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:32:16,565 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:32:16,565 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:32:16,565 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:32:16,565 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:32:16,567 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:32:16,567 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:32:16,568 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:32:16,568 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:32:26,575 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:32:26,575 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:32:26,576 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:32:26,576 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:32:26,577 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:32:26,577 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:32:26,578 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:32:26,578 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:32:36,584 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:32:36,584 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:32:36,584 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:32:36,584 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:32:36,585 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:32:36,585 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:32:36,586 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:32:36,586 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:32:46,594 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:32:46,594 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:32:46,594 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:32:46,594 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:32:46,595 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:32:46,595 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:32:46,596 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:32:46,596 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:32:56,608 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:32:56,608 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:32:56,608 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:32:56,608 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:32:56,609 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:32:56,609 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:32:56,609 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:32:56,609 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:33:06,612 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:33:06,612 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:33:06,612 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:33:06,612 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:33:06,613 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:33:06,613 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:33:06,614 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:33:06,614 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:33:16,630 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:33:16,630 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:33:16,631 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:33:16,631 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:33:16,632 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:33:16,632 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:33:16,632 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:33:16,632 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:33:26,633 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:33:26,633 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:33:26,634 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:33:26,634 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:33:26,635 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:33:26,635 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:33:26,635 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:33:26,635 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:33:36,650 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:33:36,650 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:33:36,650 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:33:36,650 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:33:36,651 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:33:36,651 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:33:36,652 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:33:36,652 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:33:46,656 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:33:46,656 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:33:46,657 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:33:46,657 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:33:46,659 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:33:46,659 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:33:46,659 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:33:46,659 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:33:56,669 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:33:56,669 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:33:56,670 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:33:56,670 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:33:56,671 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:33:56,671 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:33:56,672 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:33:56,672 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:34:06,687 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:34:06,687 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:34:06,687 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:34:06,687 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:34:06,688 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:34:06,688 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:34:06,689 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:34:06,689 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:34:16,698 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:34:16,698 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:34:16,699 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:34:16,699 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:34:16,700 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:34:16,700 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:34:16,701 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:34:16,701 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:34:26,706 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:34:26,706 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:34:26,707 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:34:26,707 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:34:26,708 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:34:26,708 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:34:26,709 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:34:26,709 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:34:36,716 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:34:36,716 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:34:36,716 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:34:36,716 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:34:36,717 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:34:36,717 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:34:36,718 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:34:36,718 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:34:46,722 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:34:46,722 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:34:46,723 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:34:46,723 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:34:46,724 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:34:46,724 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:34:46,725 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:34:46,725 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:34:56,734 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:34:56,734 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:34:56,734 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:34:56,734 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:34:56,736 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:34:56,736 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:34:56,737 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:34:56,737 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:35:06,751 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:35:06,751 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:35:06,752 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:35:06,752 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:35:06,753 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:35:06,753 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:35:06,753 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:35:06,753 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:35:16,765 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:35:16,765 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:35:16,765 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:35:16,765 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:35:16,767 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:35:16,767 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:35:16,767 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:35:16,767 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:35:26,785 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:35:26,785 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:35:26,785 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:35:26,785 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:35:26,790 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:35:26,790 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:35:26,791 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:35:26,791 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:35:27,372 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:35:27,372 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:35:27,373 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 23:35:27,373 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 23:35:27,375 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:35:27,375 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:35:27,376 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 23:35:27,376 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 23:35:36,796 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:35:36,796 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:35:36,797 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:35:36,797 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:35:36,804 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:35:36,804 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:35:36,805 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:35:36,805 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:35:46,809 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:35:46,809 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:35:46,810 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:35:46,810 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:35:46,812 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:35:46,812 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:35:46,813 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:35:46,813 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:35:56,821 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:35:56,821 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:35:56,822 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:35:56,822 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:35:56,823 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:35:56,823 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:35:56,825 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:35:56,825 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:36:06,830 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:36:06,830 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:36:06,831 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:36:06,831 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:36:06,832 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:36:06,832 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:36:06,832 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:36:06,832 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:36:16,837 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:36:16,837 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:36:16,838 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:36:16,838 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:36:16,839 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:36:16,839 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:36:16,840 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:36:16,840 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:36:26,847 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:36:26,847 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:36:26,848 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:36:26,848 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:36:26,850 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:36:26,850 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:36:26,850 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:36:26,850 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:36:36,859 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:36:36,859 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:36:36,860 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:36:36,860 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:36:36,864 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:36:36,864 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:36:36,864 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:36:36,864 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:36:46,866 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:36:46,866 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:36:46,867 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:36:46,867 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:36:46,868 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:36:46,868 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:36:46,868 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:36:46,868 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:36:56,876 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:36:56,876 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:36:56,876 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:36:56,876 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:36:56,877 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:36:56,877 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:36:56,878 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:36:56,878 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:37:06,880 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:37:06,880 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:37:06,881 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:37:06,881 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:37:06,882 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:37:06,882 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:37:06,883 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:37:06,883 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:37:16,886 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:37:16,886 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:37:16,886 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:37:16,886 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:37:16,888 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:37:16,888 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:37:16,888 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:37:16,888 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:37:26,903 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:37:26,903 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:37:26,904 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:37:26,904 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:37:26,905 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:37:26,905 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:37:26,905 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:37:26,905 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:37:36,919 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:37:36,919 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:37:36,920 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:37:36,920 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:37:36,921 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:37:36,921 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:37:36,922 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:37:36,922 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:37:46,923 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:37:46,923 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:37:46,923 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:37:46,923 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:37:46,924 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:37:46,924 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:37:46,925 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:37:46,925 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:37:56,935 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:37:56,935 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:37:56,936 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:37:56,936 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:37:56,937 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:37:56,937 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:37:56,938 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:37:56,938 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:38:06,949 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:38:06,949 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:38:06,949 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:38:06,949 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:38:06,951 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:38:06,951 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:38:06,952 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:38:06,952 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:38:16,968 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:38:16,968 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:38:16,968 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:38:16,968 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:38:16,970 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:38:16,970 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:38:16,970 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:38:16,970 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:38:26,974 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:38:26,974 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:38:26,975 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:38:26,975 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:38:26,976 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:38:26,976 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:38:26,976 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:38:26,976 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:38:36,977 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:38:36,977 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:38:36,978 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:38:36,978 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:38:36,979 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:38:36,979 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:38:36,980 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:38:36,980 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:38:46,993 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:38:46,993 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:38:46,993 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:38:46,993 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:38:46,995 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:38:46,995 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:38:46,995 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:38:46,995 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:38:56,998 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:38:56,998 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:38:56,999 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:38:56,999 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:38:57,000 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:38:57,000 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:38:57,000 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:38:57,000 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:39:07,002 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:39:07,002 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:39:07,002 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:39:07,002 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:39:07,006 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:39:07,006 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:39:07,008 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:39:07,008 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:39:17,013 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:39:17,013 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:39:17,013 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:39:17,013 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:39:17,015 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:39:17,015 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:39:17,015 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:39:17,015 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:39:27,021 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:39:27,021 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:39:27,022 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:39:27,022 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:39:27,025 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:39:27,025 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:39:27,026 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:39:27,026 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:39:37,027 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:39:37,027 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:39:37,028 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:39:37,028 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:39:37,029 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:39:37,029 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:39:37,030 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:39:37,030 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:39:47,046 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:39:47,046 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:39:47,046 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:39:47,046 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:39:47,047 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:39:47,047 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:39:47,048 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:39:47,048 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:39:57,052 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:39:57,052 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:39:57,053 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:39:57,053 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:39:57,054 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:39:57,054 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:39:57,054 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:39:57,054 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:40:07,063 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:40:07,063 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:40:07,064 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:40:07,064 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:40:07,065 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:40:07,065 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:40:07,066 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:40:07,066 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:40:17,079 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:40:17,079 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:40:17,080 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:40:17,080 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:40:17,081 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:40:17,081 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:40:17,082 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:40:17,082 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:40:27,096 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:40:27,096 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:40:27,097 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:40:27,097 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:40:27,098 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:40:27,098 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:40:27,098 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:40:27,098 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:40:27,391 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:40:27,391 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:40:27,392 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 23:40:27,392 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 23:40:27,393 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:40:27,393 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:40:27,394 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 23:40:27,394 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 23:40:37,113 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:40:37,113 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:40:37,113 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:40:37,113 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:40:37,115 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:40:37,115 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:40:37,115 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:40:37,115 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:40:47,126 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:40:47,126 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:40:47,127 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:40:47,127 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:40:47,129 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:40:47,129 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:40:47,130 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:40:47,130 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:40:57,139 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:40:57,139 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:40:57,139 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:40:57,139 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:40:57,141 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:40:57,141 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:40:57,142 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:40:57,142 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:41:07,146 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:41:07,146 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:41:07,147 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:41:07,147 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:41:07,149 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:41:07,149 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:41:07,149 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:41:07,149 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:41:11,404 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 23:41:11,404 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 23:41:11,405 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 23:41:11,405 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 23:41:11,406 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 21:41:11(String)
2021-04-26 23:41:11,406 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 21:41:11(String)
2021-04-26 23:41:11,407 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 23:41:11,407 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 23:41:17,163 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:41:17,163 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:41:17,164 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:41:17,164 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:41:17,165 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:41:17,165 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:41:17,165 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:41:17,165 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:41:27,180 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:41:27,180 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:41:27,181 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:41:27,181 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:41:27,182 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:41:27,182 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:41:27,183 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:41:27,183 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:41:37,198 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:41:37,198 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:41:37,199 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:41:37,199 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:41:37,200 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:41:37,200 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:41:37,201 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:41:37,201 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:41:47,210 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:41:47,210 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:41:47,211 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:41:47,211 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:41:47,212 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:41:47,212 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:41:47,212 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:41:47,212 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:41:57,226 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:41:57,226 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:41:57,226 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:41:57,226 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:41:57,227 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:41:57,227 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:41:57,228 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:41:57,228 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:42:07,230 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:42:07,230 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:42:07,231 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:42:07,231 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:42:07,232 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:42:07,232 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:42:07,233 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:42:07,233 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:42:17,249 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:42:17,249 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:42:17,250 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:42:17,250 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:42:17,251 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:42:17,251 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:42:17,251 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:42:17,251 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:42:27,262 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:42:27,262 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:42:27,262 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:42:27,262 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:42:27,263 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:42:27,263 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:42:27,264 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:42:27,264 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:42:37,269 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:42:37,269 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:42:37,269 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:42:37,269 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:42:37,271 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:42:37,271 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:42:37,272 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:42:37,272 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:42:47,280 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:42:47,280 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:42:47,281 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:42:47,281 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:42:47,282 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:42:47,282 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:42:47,283 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:42:47,283 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:42:57,297 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:42:57,297 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:42:57,297 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:42:57,297 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:42:57,299 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:42:57,299 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:42:57,300 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:42:57,300 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:43:07,310 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:43:07,310 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:43:07,310 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:43:07,310 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:43:07,312 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:43:07,312 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:43:07,313 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:43:07,313 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:43:17,330 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:43:17,330 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:43:17,331 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:43:17,331 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:43:17,332 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:43:17,332 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:43:17,332 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:43:17,332 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:43:27,342 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:43:27,342 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:43:27,342 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:43:27,342 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:43:27,343 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:43:27,343 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:43:27,344 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:43:27,344 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:43:37,351 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:43:37,351 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:43:37,352 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:43:37,352 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:43:37,353 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:43:37,353 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:43:37,354 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:43:37,354 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:43:47,364 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:43:47,364 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:43:47,365 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:43:47,365 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:43:47,366 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:43:47,366 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:43:47,367 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:43:47,367 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:43:57,379 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:43:57,379 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:43:57,380 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:43:57,380 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:43:57,382 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:43:57,382 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:43:57,382 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:43:57,382 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:44:07,387 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:44:07,387 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:44:07,387 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:44:07,387 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:44:07,388 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:44:07,388 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:44:07,389 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:44:07,389 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:44:17,402 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:44:17,402 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:44:17,402 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:44:17,402 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:44:17,404 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:44:17,404 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:44:17,404 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:44:17,404 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:44:27,414 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:44:27,414 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:44:27,415 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:44:27,415 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:44:27,416 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:44:27,416 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:44:27,417 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:44:27,417 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:44:37,430 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:44:37,430 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:44:37,430 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:44:37,430 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:44:37,431 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:44:37,431 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:44:37,432 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:44:37,432 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:44:47,435 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:44:47,435 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:44:47,436 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:44:47,436 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:44:47,438 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:44:47,438 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:44:47,439 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:44:47,439 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:44:57,447 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:44:57,447 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:44:57,447 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:44:57,447 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:44:57,449 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:44:57,449 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:44:57,449 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:44:57,449 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:45:07,461 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:45:07,461 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:45:07,461 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:45:07,461 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:45:07,462 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:45:07,462 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:45:07,463 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:45:07,463 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:45:17,479 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:45:17,479 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:45:17,479 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:45:17,479 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:45:17,481 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:45:17,481 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:45:17,482 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:45:17,482 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:45:27,405 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:45:27,405 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:45:27,405 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 23:45:27,405 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 23:45:27,406 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:45:27,406 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:45:27,407 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 23:45:27,407 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 23:45:27,483 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:45:27,483 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:45:27,484 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:45:27,484 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:45:27,485 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:45:27,485 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:45:27,485 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:45:27,485 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:45:37,495 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:45:37,495 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:45:37,496 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:45:37,496 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:45:37,497 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:45:37,497 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:45:37,498 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:45:37,498 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:45:47,527 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:45:47,527 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:45:47,527 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:45:47,527 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:45:47,529 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:45:47,529 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:45:47,530 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:45:47,530 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:45:57,540 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:45:57,540 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:45:57,541 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:45:57,541 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:45:57,543 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:45:57,543 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:45:57,544 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:45:57,544 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:46:07,551 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:46:07,551 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:46:07,552 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:46:07,552 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:46:07,553 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:46:07,553 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:46:07,554 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:46:07,554 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:46:17,560 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:46:17,560 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:46:17,560 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:46:17,560 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:46:17,561 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:46:17,561 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:46:17,562 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:46:17,562 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:46:27,574 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:46:27,574 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:46:27,575 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:46:27,575 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:46:27,576 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:46:27,576 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:46:27,577 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:46:27,577 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:46:37,591 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:46:37,591 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:46:37,592 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:46:37,592 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:46:37,594 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:46:37,594 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:46:37,594 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:46:37,594 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:46:47,606 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:46:47,606 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:46:47,607 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:46:47,607 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:46:47,613 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:46:47,613 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:46:47,613 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:46:47,613 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:46:57,620 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:46:57,620 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:46:57,620 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:46:57,620 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:46:57,622 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:46:57,622 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:46:57,622 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:46:57,622 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:47:07,625 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:47:07,625 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:47:07,626 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:47:07,626 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:47:07,628 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:47:07,628 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:47:07,628 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:47:07,628 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:47:17,636 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:47:17,636 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:47:17,636 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:47:17,636 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:47:17,638 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:47:17,638 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:47:17,638 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:47:17,638 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:47:27,641 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:47:27,641 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:47:27,642 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:47:27,642 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:47:27,645 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:47:27,645 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:47:27,647 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:47:27,647 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:47:37,665 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:47:37,665 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:47:37,665 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:47:37,665 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:47:37,667 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:47:37,667 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:47:37,667 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:47:37,667 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:47:47,676 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:47:47,676 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:47:47,677 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:47:47,677 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:47:47,678 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:47:47,678 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:47:47,679 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:47:47,679 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:47:57,684 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:47:57,684 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:47:57,685 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:47:57,685 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:47:57,686 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:47:57,686 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:47:57,687 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:47:57,687 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:48:07,698 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:48:07,698 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:48:07,699 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:48:07,699 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:48:07,701 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:48:07,701 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:48:07,702 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:48:07,702 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:48:17,709 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:48:17,709 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:48:17,710 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:48:17,710 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:48:17,711 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:48:17,711 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:48:17,712 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:48:17,712 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:48:27,727 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:48:27,727 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:48:27,727 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:48:27,727 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:48:27,729 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:48:27,729 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:48:27,729 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:48:27,729 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:48:37,734 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:48:37,734 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:48:37,735 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:48:37,735 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:48:37,736 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:48:37,736 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:48:37,737 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:48:37,737 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:48:47,747 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:48:47,747 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:48:47,748 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:48:47,748 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:48:47,749 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:48:47,749 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:48:47,750 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:48:47,750 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:48:57,752 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:48:57,752 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:48:57,753 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:48:57,753 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:48:57,762 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:48:57,762 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:48:57,762 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:48:57,762 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:49:07,765 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:49:07,765 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:49:07,766 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:49:07,766 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:49:07,768 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:49:07,768 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:49:07,768 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:49:07,768 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:49:17,778 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:49:17,778 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:49:17,780 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:49:17,780 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:49:17,781 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:49:17,781 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:49:17,782 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:49:17,782 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:49:27,788 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:49:27,788 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:49:27,788 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:49:27,788 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:49:27,790 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:49:27,790 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:49:27,790 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:49:27,790 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:49:37,804 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:49:37,804 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:49:37,804 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:49:37,804 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:49:37,806 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:49:37,806 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:49:37,806 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:49:37,806 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:49:47,808 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:49:47,808 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:49:47,808 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:49:47,808 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:49:47,810 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:49:47,810 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:49:47,811 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:49:47,811 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:49:57,817 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:49:57,817 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:49:57,818 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:49:57,818 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:49:57,819 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:49:57,819 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:49:57,820 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:49:57,820 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:50:07,832 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:50:07,832 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:50:07,833 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:50:07,833 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:50:07,834 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:50:07,834 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:50:07,835 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:50:07,835 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:50:17,847 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:50:17,847 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:50:17,848 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:50:17,848 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:50:17,850 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:50:17,850 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:50:17,850 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:50:17,850 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:50:27,412 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:50:27,412 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:50:27,413 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 23:50:27,413 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 200(Integer), 2(Integer), 10(Integer)
2021-04-26 23:50:27,414 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:50:27,414 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:50:27,414 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 23:50:27,414 INFO (CodeCoverageScheduleJob.java:98)- 查询需要拉取exec文件的数据0条
2021-04-26 23:50:27,851 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:50:27,851 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:50:27,851 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:50:27,851 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:50:27,853 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:50:27,853 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:50:27,853 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:50:27,853 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:50:37,858 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:50:37,858 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:50:37,859 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:50:37,859 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:50:37,860 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:50:37,860 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:50:37,861 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:50:37,861 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:50:47,866 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:50:47,866 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:50:47,866 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:50:47,866 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:50:47,868 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:50:47,868 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:50:47,869 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:50:47,869 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:58:40,273 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 16268 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 23:58:40,273 INFO (StartupInfoLogger.java:50)- Starting CodeCovApplication on DESKTOP-9JC0E2A with PID 16268 (D:\demo\super-jacoco-master\target\classes started by admin in D:\demo\super-jacoco-master)
2021-04-26 23:58:40,276 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 23:58:40,276 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2021-04-26 23:58:40,278 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 23:58:40,278 INFO (SpringApplication.java:659)- No active profile set, falling back to default profiles: default
2021-04-26 23:58:40,695 INFO (AbstractApplicationContext.java:590)- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7ba64d8b: startup date [Mon Apr 26 23:58:40 CST 2021]; root of context hierarchy
2021-04-26 23:58:42,614 INFO (PostProcessorRegistrationDelegate.java:328)- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3258c14b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-04-26 23:58:43,212 INFO (TomcatWebServer.java:91)- Tomcat initialized with port(s): 6795 (http)
2021-04-26 23:58:43,235 INFO (DirectJDKLog.java:180)- Initializing ProtocolHandler ["http-nio-6795"]
2021-04-26 23:58:43,248 INFO (DirectJDKLog.java:180)- Starting service [Tomcat]
2021-04-26 23:58:43,249 INFO (DirectJDKLog.java:180)- Starting Servlet Engine: Apache Tomcat/8.5.31
2021-04-26 23:58:43,254 INFO (DirectJDKLog.java:180)- The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\soft\jdk1.8.0_172\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\soft\jdk1.8.0_172\bin;C:\Program Files\Git\cmd;D:/demo/maven/apache-maven-3.6.3\bin;C:\cmder;D:\soft\jdk1.8.0_172\jre\bin;;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\admin\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\IntelliJ IDEA 2020.2\bin;C:\Users\admin\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2021-04-26 23:58:43,365 INFO (DirectJDKLog.java:180)- Initializing Spring embedded WebApplicationContext
2021-04-26 23:58:43,366 INFO (ServletWebServerApplicationContext.java:285)- Root WebApplicationContext: initialization completed in 2670 ms
2021-04-26 23:58:43,589 INFO (ServletRegistrationBean.java:185)- Servlet dispatcherServlet mapped to [/]
2021-04-26 23:58:43,596 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'characterEncodingFilter' to: [/*]
2021-04-26 23:58:43,597 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-04-26 23:58:43,597 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-04-26 23:58:43,597 INFO (AbstractFilterRegistrationBean.java:244)- Mapping filter: 'requestContextFilter' to: [/*]
2021-04-26 23:58:44,661 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getEnvCoverResult],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getEnvCoverResult(java.lang.String)
2021-04-26 23:58:44,663 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getLocalCoverResult],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getEnvLocalCoverResult(com.xiaoju.basetech.entity.LocalHostRequestParam)
2021-04-26 23:58:44,664 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/triggerEnvCov],methods=[POST],produces=[application/json;charset=UTF-8]}" onto public com.xiaoju.basetech.entity.HttpResult<java.lang.Boolean> com.xiaoju.basetech.controller.CodeCovController.triggerEnvCov(com.xiaoju.basetech.entity.EnvCoverRequest)
2021-04-26 23:58:44,664 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/getUnitCoverResult],methods=[GET]}" onto public com.xiaoju.basetech.entity.HttpResult<com.xiaoju.basetech.entity.CoverResult> com.xiaoju.basetech.controller.CodeCovController.getCoverResult(java.lang.String)
2021-04-26 23:58:44,665 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/cov/triggerUnitCover],methods=[POST]}" onto public com.xiaoju.basetech.entity.HttpResult<java.lang.Boolean> com.xiaoju.basetech.controller.CodeCovController.triggerUnitCover(com.xiaoju.basetech.entity.UnitCoverRequest)
2021-04-26 23:58:44,672 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-04-26 23:58:44,673 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-04-26 23:58:44,674 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-04-26 23:58:44,678 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2021-04-26 23:58:44,679 INFO (AbstractHandlerMethodMapping.java:547)- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-04-26 23:58:44,939 INFO (PropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2021-04-26 23:58:45,146 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 23:58:45,380 INFO (RequestMappingHandlerAdapter.java:574)- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7ba64d8b: startup date [Mon Apr 26 23:58:40 CST 2021]; root of context hierarchy
2021-04-26 23:58:45,444 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 23:58:45,444 INFO (AbstractUrlHandlerMapping.java:373)- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-04-26 23:58:45,463 INFO (ExceptionHandlerExceptionResolver.java:288)- Detected @ExceptionHandler methods in globalExceptionHandler
2021-04-26 23:58:45,837 INFO (OptionalLiveReloadServer.java:57)- LiveReload server is running on port 35729
2021-04-26 23:58:45,891 INFO (MBeanExporter.java:433)- Registering beans for JMX exposure on startup
2021-04-26 23:58:45,894 INFO (MBeanExporter.java:895)- Bean with name 'dataSource' has been autodetected for JMX exposure
2021-04-26 23:58:45,905 INFO (MBeanExporter.java:668)- Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2021-04-26 23:58:45,912 INFO (DefaultLifecycleProcessor.java:351)- Starting beans in phase 2147483647
2021-04-26 23:58:45,912 INFO (DocumentationPluginsBootstrapper.java:147)- Context refreshed
2021-04-26 23:58:45,930 INFO (DocumentationPluginsBootstrapper.java:150)- Found 1 custom documentation plugin(s)
2021-04-26 23:58:45,971 INFO (ApiListingReferenceScanner.java:41)- Scanning for api listing references
2021-04-26 23:58:46,229 INFO (DirectJDKLog.java:180)- Starting ProtocolHandler ["http-nio-6795"]
2021-04-26 23:58:46,241 INFO (DirectJDKLog.java:180)- Using a shared selector for servlet write/read
2021-04-26 23:58:46,262 INFO (TomcatWebServer.java:206)- Tomcat started on port(s): 6795 (http) with context path ''
2021-04-26 23:58:46,268 INFO (StartupInfoLogger.java:59)- Started CodeCovApplication in 6.501 seconds (JVM running for 9.357)
2021-04-26 23:58:46,268 INFO (StartupInfoLogger.java:59)- Started CodeCovApplication in 6.501 seconds (JVM running for 9.357)
2021-04-26 23:58:56,229 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 23:58:56,229 INFO (CodeCoverageScheduleJob.java:80)- 重置任务状态开始执行............
2021-04-26 23:58:56,257 INFO (HikariDataSource.java:110)- HikariPool-1 - Starting...
2021-04-26 23:58:57,377 INFO (HikariDataSource.java:123)- HikariPool-1 - Start completed.
2021-04-26 23:58:57,387 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 23:58:57,387 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=0, `diffmethod`='', `report_url`='', `line_coverage`=-1, `branch_coverage`=-1, `err_msg`='', `log_file`='' WHERE `update_time`< ? AND `request_status`>0 AND `request_status`<200 AND `from`=1 limit 1 
2021-04-26 23:58:57,405 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:58:57,405 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:58:57,407 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:58:57,407 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 21:58:56(String)
2021-04-26 23:58:57,407 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:58:57,407 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2021-04-26 21:58:56(String)
2021-04-26 23:58:57,410 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 23:58:57,410 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 0
2021-04-26 23:58:57,423 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:58:57,423 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:58:57,424 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:58:57,424 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:59:07,443 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:59:07,443 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:59:07,444 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:59:07,444 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:59:07,447 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:59:07,447 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:59:07,447 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:59:07,447 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:59:17,459 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:59:17,459 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:59:17,460 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:59:17,460 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:59:17,461 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:59:17,461 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:59:17,462 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:59:17,462 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:59:27,464 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:59:27,464 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:59:27,464 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:59:27,464 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:59:27,466 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:59:27,466 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:59:27,467 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:59:27,467 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:59:37,479 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:59:37,479 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:59:37,479 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:59:37,479 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:59:37,481 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:59:37,481 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:59:37,481 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:59:37,481 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:59:40,496 INFO (DirectJDKLog.java:180)- Initializing Spring FrameworkServlet 'dispatcherServlet'
2021-04-26 23:59:40,497 INFO (FrameworkServlet.java:494)- FrameworkServlet 'dispatcherServlet': initialization started
2021-04-26 23:59:40,558 INFO (FrameworkServlet.java:509)- FrameworkServlet 'dispatcherServlet': initialization completed in 61 ms
2021-04-26 23:59:40,875 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: INSERT INTO diff_coverage_report( `job_record_uuid`, `request_status`, `type`, `giturl`, `err_msg`, `sub_module`, `base_version`, `now_version`, `now_local_path` , `base_local_path`, `from` )VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-04-26 23:59:40,875 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: INSERT INTO diff_coverage_report( `job_record_uuid`, `request_status`, `type`, `giturl`, `err_msg`, `sub_module`, `base_version`, `now_version`, `now_local_path` , `base_local_path`, `from` )VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-04-26 23:59:40,880 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 5(String), 1(Integer), 1(Integer), https://git.qiweioa.cn/hnnh/do1cloud-ask.git(String), (String), (String), master(String), testjacoco(String), (String), (String), 2(Integer)
2021-04-26 23:59:40,880 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 5(String), 1(Integer), 1(Integer), https://git.qiweioa.cn/hnnh/do1cloud-ask.git(String), (String), (String), master(String), testjacoco(String), (String), (String), 2(Integer)
2021-04-26 23:59:40,884 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 23:59:40,884 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 23:59:40,884 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: INSERT INTO diff_deploy_info( `job_record_uuid`, `address`, `port` )VALUES ( ?, ?, ? ) 
2021-04-26 23:59:40,884 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: INSERT INTO diff_deploy_info( `job_record_uuid`, `address`, `port` )VALUES ( ?, ?, ? ) 
2021-04-26 23:59:40,885 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 5(String), 127.0.0.1(String), 18513(Integer)
2021-04-26 23:59:40,885 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 5(String), 127.0.0.1(String), 18513(Integer)
2021-04-26 23:59:40,889 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 23:59:40,889 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 23:59:40,891 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 23:59:40,891 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: UPDATE diff_coverage_report SET `request_status`=?, `err_msg`=?, `line_coverage`=?, `branch_coverage`=?, `report_url`=?, `diffmethod`=?, `log_file`=?, `now_local_path`=?, `update_time`=NOW() WHERE job_record_uuid=? 
2021-04-26 23:59:40,894 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), (String), (String), 5(String)
2021-04-26 23:59:40,894 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 2(Integer), (String), -1.0(Double), -1.0(Double), (String), (String), (String), (String), 5(String)
2021-04-26 23:59:40,897 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 23:59:40,897 DEBUG (BaseJdbcLogger.java:181)- <==    Updates: 1
2021-04-26 23:59:41,504 INFO (CodeCloneExecutor.java:45)- uuid 5开始下载代码...
2021-04-26 23:59:41,504 INFO (CodeCloneExecutor.java:45)- uuid 5开始下载代码...
2021-04-26 23:59:48,158 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:59:48,158 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:59:48,159 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:59:48,159 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:59:48,161 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:59:48,161 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:59:48,162 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:59:48,162 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:59:58,164 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:59:58,164 DEBUG (BaseJdbcLogger.java:181)- ==>  Preparing: SELECT * from diff_coverage_report WHERE `request_status`=? AND `from`=? ORDER BY `update_time` asc limit ? 
2021-04-26 23:59:58,165 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:59:58,165 DEBUG (BaseJdbcLogger.java:181)- ==> Parameters: 0(Integer), 1(Integer), 1(Integer)
2021-04-26 23:59:58,167 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:59:58,167 DEBUG (BaseJdbcLogger.java:181)- <==      Total: 0
2021-04-26 23:59:58,168 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
2021-04-26 23:59:58,168 INFO (CodeCoverageScheduleJob.java:56)- 查询需要diff的数据0条
